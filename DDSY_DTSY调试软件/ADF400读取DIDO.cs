using System;
using System.ComponentModel;
using System.Drawing;
using System.Globalization;
using System.IO.Ports;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace DDSY_DTSY调试软件;

public class ADF400读取DIDO : Form
{
	[StructLayout(LayoutKind.Sequential, Size = 1)]
	public struct TimeZone
	{
		public static byte Schedule1;

		public static byte Schedule2;

		public static byte Schedule3;

		public static byte Schedule4;

		public static byte Day1;

		public static byte Day2;

		public static byte Day3;

		public static byte Day4;

		public static byte Month1;

		public static byte Month2;

		public static byte Month3;

		public static byte Month4;
	}

	[StructLayout(LayoutKind.Sequential, Size = 1)]
	public struct TimeSchedule
	{
		public static byte Price1;

		public static byte Price2;

		public static byte Price3;

		public static byte Price4;

		public static byte Price5;

		public static byte Price6;

		public static byte Price7;

		public static byte Price8;

		public static byte Price9;

		public static byte Price10;

		public static byte Price11;

		public static byte Price12;

		public static byte Price13;

		public static byte Price14;

		public static byte Minute1;

		public static byte Minute2;

		public static byte Minute3;

		public static byte Minute4;

		public static byte Minute5;

		public static byte Minute6;

		public static byte Minute7;

		public static byte Minute8;

		public static byte Minute9;

		public static byte Minute10;

		public static byte Minute11;

		public static byte Minute12;

		public static byte Minute13;

		public static byte Minute14;

		public static byte Hour1;

		public static byte Hour2;

		public static byte Hour3;

		public static byte Hour4;

		public static byte Hour5;

		public static byte Hour6;

		public static byte Hour7;

		public static byte Hour8;

		public static byte Hour9;

		public static byte Hour10;

		public static byte Hour11;

		public static byte Hour12;

		public static byte Hour13;

		public static byte Hour14;
	}

	[StructLayout(LayoutKind.Sequential, Size = 1)]
	public struct CorrectTime
	{
		public static byte Second;

		public static byte Minute;

		public static byte Hour;

		public static byte Day;

		public static byte Month;

		public static byte Year;

		public static byte DayOfWeek;
	}

	private byte[] MeterIDToSet = new byte[8];

	private byte MeterType;

	private byte MeterType2;

	private byte IS3P;

	private byte[] AllSetResult = new byte[12];

	private Modbus m = new Modbus();

	private DateTime dh = default(DateTime);

	public static uint[] SysKey = new uint[4] { 24931u, 29285u, 27699u, 12849u };

	private bool PortIsAvailable = false;

	private ushort Num;

	private ushort Num1;

	private ushort Num2;

	private ushort Zt;

	private ushort Zt1;

	private ushort Zt2;

	private ushort Zt3;

	private ushort Num123;

	private ushort Num456;

	private IContainer components = null;

	private MenuStrip menuStrip1;

	private ToolStripMenuItem toolStripMenuItem1;

	private ToolStripMenuItem toolStripMenuItem3;

	private ToolStripMenuItem toolStripMenuItem2;

	private GroupBox groupBox新增版;

	private TextBox 平电能;

	private Label label21;

	private TextBox 购电次数;

	private Label label19;

	private TextBox 峰电能;

	private Label label18;

	private TextBox 电流变比;

	private Label label15;

	private TextBox 电压变比;

	private Label label16;

	private TextBox PFt;

	private Label label11;

	private TextBox PFc;

	private Label label13;

	private TextBox PFb;

	private Label label10;

	private TextBox Qc;

	private Label label84;

	private TextBox Qb;

	private Label label80;

	private TextBox Qa;

	private Label label76;

	private TextBox Pc;

	private Label label69;

	private TextBox Pb;

	private Label label65;

	private TextBox Pa;

	private Label label61;

	private TextBox 剩余金额;

	private Label label35;

	private TextBox 尖电能;

	private Label label34;

	private TextBox Ic;

	private Label label72;

	private TextBox Ib;

	private Label label71;

	private TextBox Uc;

	private Label label70;

	private TextBox Ub;

	private Label label59;

	private TextBox PFa;

	private Label label9;

	private TextBox Qt;

	private TextBox Pt;

	private TextBox Ia;

	private TextBox Ua;

	private Label label5;

	private Label label4;

	private Label label3;

	private Label label12;

	private TextBox 基础电量;

	private Label label8;

	private TextBox 允许次数;

	private Label label2;

	private TextBox 负控次数;

	private Label label7;

	private TextBox 总用电量;

	private Label label6;

	private TextBox 谷电能;

	private Label label1;

	private GroupBox groupBox1;

	private Label ps3;

	private GroupBox groupBox6;

	private Label ps2;

	private Label ps1;

	private Label ps;

	private Label label40;

	private Label label41;

	private Label label42;

	private Label label43;

	private GroupBox groupBox5;

	private Label ms2;

	private Label ms1;

	private Label ms3;

	private Label ms;

	private Label label32;

	private Label label33;

	private Label label14;

	private Label label17;

	private Label ts3;

	private GroupBox groupBox4;

	private Label ts2;

	private Label ts1;

	private Label ts;

	private Label label24;

	private Label label25;

	private Label label26;

	private Label label27;

	private Label fs3;

	private GroupBox groupBox3;

	private Label fs2;

	private Label fs1;

	private Label fs;

	private Label label20;

	private Label label23;

	private Label label28;

	private Label label29;

	private Label label22;

	private GroupBox groupBox8;

	private Label 越限;

	private Label label62;

	private Label 欠费;

	private Label label58;

	private Label ALM2;

	private Label label56;

	private Label ALM1;

	private Label label54;

	private Label label46;

	private Label label47;

	private Label 故障;

	private Label label49;

	private Label label50;

	private Label label51;

	private Label label52;

	private Label L3;

	private GroupBox groupBox7;

	private Label L2;

	private Label L1;

	private Label label38;

	private Label label39;

	private Label label44;

	private Label label45;

	private TabPage tabPage6;

	private TabPage tabPage5;

	private TabPage tabPage4;

	private GroupBox groupBox14;

	private Button button7;

	private CheckBox checkBoxForceEN3;

	private CheckBox checkBoxForceEN2;

	private CheckBox checkBoxForceEN1;

	private GroupBox groupBoxFL3;

	private RadioButton L3Close;

	private RadioButton L3Open;

	private GroupBox groupBoxFL2;

	private RadioButton L2Close;

	private RadioButton L2Open;

	private GroupBox groupBoxFL1;

	private RadioButton L1Close;

	private RadioButton L1Open;

	private Button ForceControl;

	private TabPage tabPage3;

	private GroupBox groupBox13;

	private Button ReadTimeControl;

	private Label label89;

	private CheckBox checkBoxTimeEN1;

	private Button AllTimeControl;

	private GroupBox groupBoxL1;

	private Label label103;

	private Label label104;

	private Label label105;

	private TextBox textBoxL1WorkH3;

	private TextBox textBoxL1WorkM3;

	private ComboBox comboBoxL1Work3;

	private TextBox textBoxL1WorkH2;

	private TextBox textBoxL1WorkM2;

	private ComboBox comboBoxL1Work2;

	private TextBox textBoxL1WorkH1;

	private TextBox textBoxL1WorkM1;

	private ComboBox comboBoxL1Work1;

	private Label label106;

	private Label label107;

	private Label label108;

	private TextBox textBoxL1FreeH3;

	private TextBox textBoxL1FreeM3;

	private ComboBox comboBoxL1Free3;

	private TextBox textBoxL1FreeH2;

	private TextBox textBoxL1FreeM2;

	private ComboBox comboBoxL1Free2;

	private TextBox textBoxL1FreeH1;

	private TextBox textBoxL1FreeM1;

	private ComboBox comboBoxL1Free1;

	private GroupBox groupBox15;

	private Label label109;

	private Label label110;

	private Label label111;

	private Label label112;

	private Label label113;

	private Label label114;

	private Label label115;

	private CheckBox checkBoxL1Mon;

	private CheckBox checkBoxL1Thu;

	private CheckBox checkBoxL1Wed;

	private CheckBox checkBoxL1Tue;

	private CheckBox checkBoxL1Fri;

	private CheckBox checkBoxL1Sat;

	private CheckBox checkBoxL1Sun;

	private Button TimeControl;

	private RadioButton CloseTime;

	private RadioButton OpenTime;

	private TabPage tabPage2;

	private GroupBox groupBox10;

	private CheckBox checkBoxPowerEN0;

	private TextBox textBoxMaxPF;

	private Label label88;

	private TextBox textBoxMaxPAdd;

	private Label label87;

	private Button ReadPowerControl;

	private CheckBox checkBoxPowerEN4;

	private CheckBox checkBoxPowerEN3;

	private CheckBox checkBoxPowerEN1;

	private Button AllPowerControl;

	private TextBox MaxOverCount;

	private Label label74;

	private TextBox RecoverTime;

	private Label label75;

	private TextBox MaxPower;

	private Label label77;

	private Button PowerControl;

	private RadioButton ClosePower;

	private RadioButton OpenPower;

	private GroupBox groupBox25;

	private TextBox OverCountALL;

	private Button ResetPC;

	private TabPage tabPage1;

	private GroupBox groupBox9;

	private TextBox textBoxPrice4;

	private Label label95;

	private TextBox textBoxPrice3;

	private Label label96;

	private CheckBox FKEN6;

	private TextBox textBoxPrice2;

	private Label label93;

	private TextBox textBoxPrice1;

	private Label label94;

	private CheckBox checkBox1;

	private Button ReadMoneyControl;

	private CheckBox FKEN3;

	private CheckBox FKEN2;

	private CheckBox FKEN5;

	private CheckBox FKEN4;

	private CheckBox FKEN1;

	private Button AllMoneyControl;

	private TextBox Alarm2;

	private Label label63;

	private TextBox Alarm1;

	private Label label64;

	private TextBox TotalE;

	private Label label66;

	private TextBox BaseE;

	private Label label67;

	private TextBox BuyTimes;

	private Label label68;

	private TextBox LeaveE;

	private Label label73;

	private Button MoneyControl;

	private RadioButton OFFFK;

	private RadioButton ONFK;

	private TabControl tabControl1;

	private CheckBox FKEN10;

	private TextBox textBox8;

	private Label label144;

	private CheckBox FKEN8;

	private TextBox textBox7;

	private Label FKEN9;

	private CheckBox FKEN7;

	private TextBox TouZhi;

	private Label label142;

	private Label label82;

	private CheckBox checkBox11;

	private TextBox textBoxL1WorkH8;

	private TextBox textBoxL1WorkM8;

	private ComboBox comboBoxL1Work8;

	private TextBox textBoxL1WorkH7;

	private TextBox textBoxL1WorkM7;

	private ComboBox comboBoxL1Work7;

	private TextBox textBoxL1FreeH8;

	private TextBox textBoxL1FreeM8;

	private ComboBox comboBoxL1Free8;

	private TextBox textBoxL1FreeH7;

	private TextBox textBoxL1FreeM7;

	private ComboBox comboBoxL1Free7;

	private TextBox textBoxL1WorkH6;

	private TextBox textBoxL1WorkM6;

	private ComboBox comboBoxL1Work6;

	private TextBox textBoxL1WorkH5;

	private TextBox textBoxL1WorkM5;

	private ComboBox comboBoxL1Work5;

	private TextBox textBoxL1WorkH4;

	private TextBox textBoxL1WorkM4;

	private ComboBox comboBoxL1Work4;

	private TextBox textBoxL1FreeH6;

	private TextBox textBoxL1FreeM6;

	private ComboBox comboBoxL1Free6;

	private TextBox textBoxL1FreeH5;

	private TextBox textBoxL1FreeM5;

	private ComboBox comboBoxL1Free5;

	private TextBox textBoxL1FreeH4;

	private TextBox textBoxL1FreeM4;

	private ComboBox comboBoxL1Free4;

	private CheckBox checkBox10;

	private TextBox textBox10;

	private Label label150;

	private CheckBox checkBox9;

	private TextBox textBox9;

	private Label label149;

	private TextBox 地址;

	private Label label86;

	private Button 关闭串口;

	private Button 读取数据;

	private Label labelGOOD;

	private Label labelERROR;

	private Timer 主轮抄定时器;

	private Timer 透传定时器;

	private Timer timer3;

	private TabPage tabPage7;

	private GroupBox groupBox2;

	private Label label30;

	private Label label31;

	private Label label36;

	private ComboBox comboBoxEc;

	private ComboBox comboBoxIb;

	private ComboBox comboBoxUn;

	private Button 增益;

	private Button 初始化;

	private GroupBox groupBox18;

	private Button 运行状态读取;

	private Button 运行状态设置;

	private GroupBox groupBox11;

	private TextBox PriceJ;

	private Label label37;

	private TextBox PriceF;

	private TextBox PriceP;

	private TextBox PriceG;

	private Label label98;

	private TextBox FKState;

	private TextBox BuyTime;

	private Label label97;

	private Button 设置预付费参数;

	private Button 读取预付费参数;

	private Label label92;

	private TextBox PMAX;

	private Label label90;

	private Label label91;

	private TextBox SQJE;

	private TextBox SYJE;

	private Label label57;

	private Label label60;

	private TextBox BJ1;

	private TextBox BJ2;

	private Label label55;

	private Label label53;

	private Label label48;

	private GroupBox groupBox12;

	private RadioButton 强控关;

	private RadioButton 强制合闸;

	private RadioButton 强制调制;

	private GroupBox groupBox23;

	private Button 强控设置;

	private GroupBox groupBox24;

	private Button 地址读取;

	private ComboBox 波特率comboBox;

	private TextBox 地址textBox;

	private Button 地址设置;

	private ComboBox 停止位comboBox;

	private TextBox 表号textBox;

	private GroupBox groupBox29;

	private Button 读取变比;

	private TextBox CTValue;

	private Label label120;

	private TextBox PTValue;

	private Label label121;

	private Button 设置变比;

	private Button button14;

	private GroupBox groupBox16;

	private Button buttonReadTimeZone;

	private Button buttonSetTimeZone;

	private Label label99;

	private Label label100;

	private Label label101;

	private Label label102;

	private Label label116;

	private Label label117;

	private Label label118;

	private TextBox textBoxMonth4;

	private TextBox textBoxDay4;

	private ComboBox comboBoxschedu4;

	private TextBox textBoxMonth3;

	private TextBox textBoxDay3;

	private ComboBox comboBoxschedu3;

	private TextBox textBoxMonth2;

	private TextBox textBoxDay2;

	private ComboBox comboBoxschedu2;

	private TextBox textBoxMonth1;

	private TextBox textBoxDay1;

	private ComboBox comboBoxschedu1;

	private GroupBox groupBox17;

	private Button buttonReadSched2;

	private Button buttonSetSched2;

	private Label label119;

	private Label label122;

	private Label label123;

	private Label label124;

	private Label label125;

	private Label label126;

	private ComboBox comboBoxCharge14_S2;

	private ComboBox comboBoxCharge13_S2;

	private ComboBox comboBoxCharge12_S2;

	private ComboBox comboBoxCharge11_S2;

	private ComboBox comboBoxCharge10_S2;

	private ComboBox comboBoxCharge9_S2;

	private TextBox textBoxMinute14_S2;

	private TextBox textBoxMinute13_S2;

	private TextBox textBoxMinute12_S2;

	private TextBox textBoxMinute11_S2;

	private TextBox textBoxMinute10_S2;

	private TextBox textBoxMinute9_S2;

	private TextBox textBoxHour14_S2;

	private TextBox textBoxHour13_S2;

	private TextBox textBoxHour12_S2;

	private TextBox textBoxHour11_S2;

	private TextBox textBoxHour10_S2;

	private TextBox textBoxHour9_S2;

	private Label label127;

	private Label label128;

	private Label label129;

	private Label label130;

	private Label label131;

	private Label label132;

	private Label label133;

	private Label label134;

	private Label label135;

	private Label label136;

	private Label label137;

	private TextBox textBoxHour8_S2;

	private TextBox textBoxMinute8_S2;

	private ComboBox comboBoxCharge8_S2;

	private TextBox textBoxHour7_S2;

	private TextBox textBoxMinute7_S2;

	private ComboBox comboBoxCharge7_S2;

	private TextBox textBoxHour6_S2;

	private TextBox textBoxMinute6_S2;

	private ComboBox comboBoxCharge6_S2;

	private TextBox textBoxHour5_S2;

	private TextBox textBoxMinute5_S2;

	private ComboBox comboBoxCharge5_S2;

	private TextBox textBoxHour4_S2;

	private TextBox textBoxMinute4_S2;

	private ComboBox comboBoxCharge4_S2;

	private TextBox textBoxHour3_S2;

	private TextBox textBoxMinute3_S2;

	private ComboBox comboBoxCharge3_S2;

	private TextBox textBoxHour2_S2;

	private TextBox textBoxMinute2_S2;

	private ComboBox comboBoxCharge2_S2;

	private TextBox textBoxHour1_S2;

	private TextBox textBoxMinute1_S2;

	private ComboBox comboBoxCharge1_S2;

	private GroupBox groupBox19;

	private Button buttonReadSched1;

	private Button buttonSetSched1;

	private Label label138;

	private Label label139;

	private Label label140;

	private Label label141;

	private Label label143;

	private Label label151;

	private ComboBox comboBoxCharge14_S1;

	private ComboBox comboBoxCharge13_S1;

	private ComboBox comboBoxCharge12_S1;

	private ComboBox comboBoxCharge11_S1;

	private ComboBox comboBoxCharge10_S1;

	private ComboBox comboBoxCharge9_S1;

	private TextBox textBoxMinute14_S1;

	private TextBox textBoxMinute13_S1;

	private TextBox textBoxMinute12_S1;

	private TextBox textBoxMinute11_S1;

	private TextBox textBoxMinute10_S1;

	private TextBox textBoxMinute9_S1;

	private TextBox textBoxHour14_S1;

	private TextBox textBoxHour13_S1;

	private TextBox textBoxHour12_S1;

	private TextBox textBoxHour11_S1;

	private TextBox textBoxHour10_S1;

	private TextBox textBoxHour9_S1;

	private Label label152;

	private Label label153;

	private Label label154;

	private Label label155;

	private Label label156;

	private Label label157;

	private Label label158;

	private Label label159;

	private Label label160;

	private Label label161;

	private Label label162;

	private TextBox textBoxHour8_S1;

	private TextBox textBoxMinute8_S1;

	private ComboBox comboBoxCharge8_S1;

	private TextBox textBoxHour7_S1;

	private TextBox textBoxMinute7_S1;

	private ComboBox comboBoxCharge7_S1;

	private TextBox textBoxHour6_S1;

	private TextBox textBoxMinute6_S1;

	private ComboBox comboBoxCharge6_S1;

	private TextBox textBoxHour5_S1;

	private TextBox textBoxMinute5_S1;

	private ComboBox comboBoxCharge5_S1;

	private TextBox textBoxHour4_S1;

	private TextBox textBoxMinute4_S1;

	private ComboBox comboBoxCharge4_S1;

	private TextBox textBoxHour3_S1;

	private TextBox textBoxMinute3_S1;

	private ComboBox comboBoxCharge3_S1;

	private TextBox textBoxHour2_S1;

	private TextBox textBoxMinute2_S1;

	private ComboBox comboBoxCharge2_S1;

	private TextBox textBoxHour1_S1;

	private TextBox textBoxMinute1_S1;

	private ComboBox comboBoxCharge1_S1;

	private ComboBox 校验位comboBox;

	private GroupBox groupBox21;

	private RadioButton 单费率;

	private RadioButton 复费率;

	private GroupBox groupBox30;

	private RadioButton 无射频;

	private RadioButton 有射频;

	private GroupBox groupBox27;

	private RadioButton 内控;

	private RadioButton 外控;

	private GroupBox groupBox22;

	private RadioButton 红外;

	private RadioButton 副通讯;

	private GroupBox groupBox20;

	private RadioButton 电能脉冲;

	private RadioButton 时钟脉冲;

	private Label 时间显示;

	private Button button1;

	private GroupBox groupBox32;

	private RadioButton SKL3;

	private RadioButton SKL2;

	private RadioButton SKL1;

	private GroupBox groupBox31;

	private RadioButton FKL3;

	private RadioButton FKL2;

	private RadioButton FKL1;

	private RadioButton FKALL;

	private Label label79;

	private GroupBox groupBox33;

	private Button 输出方式读取;

	private Button 输出方式设置;

	private RadioButton 脉冲;

	private RadioButton 电平;

	private Label label85;

	private Label label83;

	private Label label81;

	private RadioButton 第二路通讯;

	private RadioButton 主通讯;

	private Label label145;

	private GroupBox groupBox34;

	private Button CorrectMeter;

	private Button Init;

	private Button ADF300广播清零;

	private Button ADF300清零;

	private GroupBox groupBox28;

	private ComboBox ADF300波特率;

	private Button button2;

	private Button button3;

	private ComboBox ADF300地址;

	private Label label165;

	private GroupBox groupBoxChangePhaseType;

	private Button buttonReadPhase;

	private Button buttonChangePhase;

	private TextBox 三相数量;

	private TextBox 单相数量;

	private Label label146;

	private Label label147;

	private Label label166;

	private Label label163;

	private TextBox textBox2;

	private TextBox textBox1;

	private Label label148;

	private GroupBox groupBox35;

	private RadioButton 三相四线;

	private RadioButton 三相三线;

	private Label 单三相状态;

	private Label 最大回路数;

	private Label 版本号;

	private CheckBox FWL3;

	private CheckBox FWL2;

	private CheckBox FWL1;

	private CheckBox FWALL;

	private TextBox OverCount3;

	private TextBox OverCount2;

	private TextBox OverCount1;

	private Label label169;

	private Label label168;

	private Label label167;

	private Label label78;

	private Button button5;

	private GroupBox groupBox38;

	private RadioButton L3OFF;

	private RadioButton L3ON;

	private GroupBox groupBox37;

	private RadioButton L2OFF;

	private RadioButton L2ON;

	private GroupBox groupBox36;

	private RadioButton L1OFF;

	private RadioButton L1ON;

	private Button 表号读取;

	private CheckBox checkBox2;

	private RadioButton SKALL;

	private Button ADF300类型读取;

	private Button ADF300类型设置;

	private RadioButton II;

	private RadioButton III;

	private RadioButton I;

	private GroupBox ADF参数设置;

	private Button 读取ADF;

	private Button 设置ADF;

	private GroupBox groupBox41;

	private RadioButton ADF脉冲;

	private RadioButton ADF电平;

	private GroupBox groupBox42;

	private RadioButton ADF三相三线;

	private RadioButton ADF三相四线;

	private TextBox ADFCT4;

	private Label label174;

	private TextBox ADFCT2;

	private Label label173;

	private TextBox ADFCT3;

	private Label label172;

	private TextBox ADFCT1;

	private Label label171;

	private TextBox ADFPT;

	private Label label170;

	private Label label178;

	private Label label177;

	private TextBox ADF间隔;

	private Label label175;

	private TextBox ADF脉宽;

	private Label label176;

	private RadioButton ADF副通讯;

	private RadioButton ADF主通讯;

	private RadioButton 无IC;

	private RadioButton 使能IC;

	private Label label179;

	private TextBox ADF表号;

	private Label label164;

	private Label label180;

	private Label label181;

	private ComboBox ADF脉冲常数;

	private ComboBox ADF电流;

	private ComboBox ADF电压;

	private TabPage tabPage8;

	private TextBox 无线调制信息;

	private Label label182;

	private TextBox 数据上报间隔;

	private Label label183;

	private GroupBox groupBox26;

	private Label label185;

	private Label label184;

	private Label label186;

	private TextBox IP1;

	private TextBox 序列号;

	private TextBox 协议模式;

	private Label label187;

	private TextBox 端口号;

	private Label label190;

	private Label label189;

	private TextBox IP4;

	private TextBox IP3;

	private TextBox IP2;

	private Label label191;

	private Label labe端口l188;

	private TextBox ALMM4;

	private TextBox ALMM3;

	private TextBox ALMM2;

	private TextBox ALMM1;

	private Label label197;

	private TextBox LONG4;

	private TextBox LONG3;

	private TextBox LONG2;

	private TextBox LONG1;

	private Label label196;

	private TextBox Addr4;

	private TextBox Addr3;

	private TextBox Addr2;

	private TextBox Addr1;

	private Label label195;

	private TextBox TCP;

	private Label label193;

	private TextBox 告警段数量;

	private Label label194;

	private TextBox 数据段数量;

	private Label label192;

	private TextBox 设备数量;

	private Button button4;

	private Button button6;

	private GroupBox groupBox39;

	private Label 软件版本号;

	private Label 编号;

	private Label label199;

	private Label label198;

	private Label CCID卡号值;

	private Label label208;

	private Label 系统复位值;

	private Label label206;

	private Label 连接状态信号值;

	private Label label205;

	private Label 接受次数值;

	private Label label213;

	private Label 发送次数值;

	private Label label211;

	private Label IMEI号值;

	private Label label215;

	private Button button8;

	private GroupBox groupBox40;

	private RadioButton 无无线;

	private RadioButton 有无线;

	private Label 连接状态值;

	private Label label203;

	private Label label200;

	private Label label188;

	private CheckBox FKEN0;

	private TextBox 域名;

	private TextBox ALMM8;

	private TextBox ALMM7;

	private TextBox ALMM6;

	private TextBox ALMM5;

	private TextBox LONG8;

	private TextBox LONG7;

	private TextBox LONG6;

	private TextBox LONG5;

	private TextBox Addr8;

	private TextBox Addr7;

	private TextBox Addr6;

	private TextBox Addr5;

	private GroupBox groupBox45;

	private CheckBox checkBox3;

	private CheckBox checkBox4;

	private GroupBox groupBox44;

	private RadioButton radioButton3;

	private RadioButton radioButton4;

	private RadioButton radioButton5;

	private CheckBox dlt645xieyi;

	private RadioButton jiliangxing;

	private RadioButton yufufei;

	private GroupBox groupBox46;

	private GroupBox groupBox47;

	private GroupBox groupBox43;

	private RadioButton radioButton2;

	private RadioButton radioButton1;

	private Button 购电命令下发;

	private GroupBox groupBox49;

	private Button 设置密钥;

	private Button button9;

	private TextBox 密钥4;

	private TextBox 密钥3;

	private TextBox 密钥2;

	private TextBox 密钥1;

	private GroupBox groupBox50;

	private TextBox 新购电量;

	private Label label201;

	private TextBox new购电次数;

	private Label label202;

	private GroupBox groupBox51;

	private Button button10;

	private Button button11;

	private RadioButton 外置互感器;

	private RadioButton 内置互感器;

	private GroupBox groupBox48;

	private RadioButton 加密开;

	private RadioButton 加密关;

	private Button button12;

	private Button button13;

	private TabPage tabPage9;

	private GroupBox groupBox54;

	private Label label228;

	private Label label227;

	private TextBox ADF400PT;

	private TextBox ADF400CT12;

	private TextBox ADF400CT8;

	private TextBox ADF400CT4;

	private TextBox ADF400CT11;

	private TextBox ADF400CT7;

	private TextBox ADF400CT3;

	private TextBox ADF400CT10;

	private TextBox ADF400CT6;

	private TextBox ADF400CT2;

	private TextBox ADF400CT9;

	private TextBox ADF400CT5;

	private TextBox ADF400CT1;

	private Label label223;

	private Label label224;

	private Label label225;

	private Label label226;

	private Label label219;

	private Label label220;

	private Label label221;

	private Label label222;

	private Label label217;

	private Label label218;

	private Label label216;

	private Label label214;

	private Label label212;

	private GroupBox groupBox53;

	private Button button16;

	private Button button15;

	private RadioButton ADF400从机地址重排1;

	private Label label210;

	private TextBox ADF400互感器接入回路;

	private Label label209;

	private TextBox ADF400三相数量;

	private TextBox ADF400单相数量;

	private Label label207;

	private Label label204;

	private Button button18;

	private Button button17;

	private Label label230;

	private TextBox ADF400间隔;

	private Label label229;

	private TextBox ADF400脉宽;

	private GroupBox groupBox55;

	private Button button21;

	private Button button22;

	private GroupBox groupBox57;

	private GroupBox groupBox56;

	private RadioButton ADF400DI1分;

	private Label label232;

	private Label label231;

	private Button ADF400设置DO;

	private RadioButton ADF400DO2合;

	private RadioButton ADF400DO2分;

	private RadioButton ADF400DO1合;

	private RadioButton ADF400DO1分;

	private Label label234;

	private Label label233;

	private Button button19;

	private RadioButton ADF400DI2合;

	private RadioButton ADF400DI2分;

	private RadioButton ADF400DI1合;

	private GroupBox groupBox58;

	private Button ADF400广播清零;

	private Label label237;

	private Button ADF400电能清零;

	private Label label238;

	private Label label239;

	private ComboBox ADF400脉冲常数;

	private ComboBox ADF400电流;

	private ComboBox ADF400电压;

	private Button ADF400校准;

	private Button ADF400初始化;

	private RadioButton ADF400计量型;

	private RadioButton ADF400预付费型;

	private GroupBox groupBox59;

	private Label label240;

	private Label label243;

	private Label label242;

	private RadioButton ADF4003p4l;

	private RadioButton ADF400无线;

	private RadioButton ADF400脉冲;

	private RadioButton ADF400电平;

	private RadioButton ADF4003p3l;

	private RadioButton ADF400无无线;

	private GroupBox groupBox60;

	private Button button32;

	private Button button33;

	private RadioButton ADF4001通讯;

	private ComboBox ADF400波特率;

	private RadioButton ADF4002通讯;

	private Label label241;

	private ComboBox ADF400地址;

	private CheckBox ADF400dlt645协议;

	private RadioButton ADF400使能IC;

	private RadioButton ADF400无使能IC;

	private Label label245;

	private Label label246;

	private Label label247;

	private RadioButton ADF400使能CE以太网0;

	private RadioButton ADF400使能CE以太网1;

	private RadioButton ADF400从机地址重排2;

	private GroupBox groupBox73;

	private GroupBox groupBox71;

	private GroupBox groupBox70;

	private GroupBox groupBox69;

	private GroupBox groupBox68;

	private GroupBox groupBox67;

	private GroupBox groupBox66;

	private GroupBox groupBox63;

	private GroupBox groupBox61;

	private GroupBox groupBox65;

	private GroupBox groupBox64;

	private TabPage tabPage10;

	private GroupBox groupBox76;

	private GroupBox groupBox75;

	private Button ADF400L额定参数读取;

	private TextBox ADF400L从额定电压;

	private TextBox ADF400L从额定电流;

	private Label label251;

	private Label label250;

	private GroupBox groupBox74;

	private Button ADF400L从通讯W;

	private Label label248;

	private Label label249;

	private Button ADF400L从通讯R;

	private Button ADF400L从参数W;

	private Button ADF400L从参数R;

	private TextBox ADF400L从消抖时间;

	private Label label259;

	private TextBox ADF400L从脉冲常数;

	private Label label258;

	private GroupBox groupBox78;

	private RadioButton ADF400L从3p3l;

	private RadioButton ADF400L从3p4l;

	private Label label257;

	private GroupBox groupBox77;

	private RadioButton ADF400L从电平;

	private RadioButton ADF400L从脉冲;

	private Label label252;

	private Label label253;

	private TextBox ADF400L从脉冲间隔;

	private Label label254;

	private Label label255;

	private TextBox ADF400L从脉冲宽度;

	private Label label256;

	private GroupBox groupBox79;

	private GroupBox groupBox80;

	private GroupBox groupBox81;

	private RadioButton ADF400L从DO4分;

	private RadioButton ADF400L从DO4合;

	private GroupBox groupBox82;

	private RadioButton ADF400L从DO1分;

	private RadioButton ADF400L从DO1合;

	private GroupBox groupBox83;

	private RadioButton ADF400L从DO2分;

	private RadioButton ADF400L从DO2合;

	private Button ADF400L从DOW;

	private GroupBox groupBox84;

	private RadioButton ADF400L从DO3分;

	private RadioButton ADF400L从DO3合;

	private Button ADF400L从DOR;

	private Label label260;

	private Label label261;

	private Label label262;

	private Label label263;

	private GroupBox groupBox85;

	private GroupBox groupBox86;

	private RadioButton ADF400L从DI2分;

	private RadioButton ADF400L从DI2合;

	private GroupBox groupBox87;

	private RadioButton ADF400L从DI1分;

	private RadioButton ADF400L从DI1合;

	private Button ADF400L从DI;

	private Label label264;

	private Label label265;

	private Label label266;

	private TextBox ADF400L从地址;

	private GroupBox groupBox88;

	private Button button24;

	private Label label267;

	private Button button27;

	private Label label268;

	private Label label269;

	private ComboBox ADF400L从pulse;

	private ComboBox ADF400L从电流;

	private ComboBox ADF400L从电压;

	private Button button28;

	private Button button29;

	private TextBox ADF400L从波特率;

	private RadioButton ADF4003通讯;

	private TabPage tabPage11;

	private Button 设置DO;

	private Button 读取DIO;

	private GroupBox DO;

	private CheckBox DO4checkBox;

	private CheckBox DO3checkBox;

	private CheckBox DO2checkBox;

	private CheckBox DO1checkBox;

	private GroupBox groupBox89;

	private CheckBox DI8checkBox;

	private CheckBox DI4checkBox;

	private CheckBox DI7checkBox;

	private CheckBox DI3checkBox;

	private CheckBox DI6checkBox;

	private CheckBox DI2checkBox;

	private CheckBox DI5checkBox;

	private CheckBox DI1checkBox;

	private GroupBox groupBox90;

	private RadioButton ADF400主机;

	private RadioButton ADF400从机;

	private Label 需量时间;

	private Label label270;

	private TextBox 最大需量;

	private Button XuLieHao读取;

	private TextBox XuLieHao;

	private Button XuLieHao设置;

	private Label label271;

	private GroupBox groupBox52;

	private GroupBox groupBox62;

	private Button Read序列号;

	private Button Set序列号;

	private Label label235;

	private TextBox ADF400序列号;

	private GroupBox groupBox72;

	private Button Readxulihao;

	private Button Setxuliehao;

	private Label label236;

	private TextBox ADF300序列号;

	private TextBox ADF400表号;

	private RadioButton ADF300;

	private RadioButton DDSYDTSY;

	private Label 型号;

	private TabPage tabPage12;

	private Label label273;

	private Label label272;

	private Label label244;

	private Button ADF400无线读取;

	private Button ADF400无线设置;

	private TextBox ADF400端口号;

	private TextBox ADF400IP2;

	private TextBox ADF400IP3;

	private TextBox ADF400IP4;

	private TextBox ADF400IP1;

	private TextBox 子网掩码2;

	private TextBox 子网掩码3;

	private TextBox 子网掩码4;

	private TextBox 子网掩码1;

	private TextBox ADF400网关IP2;

	private TextBox ADF400网关IP3;

	private TextBox ADF400网关IP4;

	private TextBox ADF400网关IP1;

	private Label label274;

	private GroupBox groupBox91;

	private RadioButton DDSY;

	private RadioButton DDSF;

	private ComboBox ADF400校验位;

	private Label label275;

	private TabPage tabPage13;

	private GroupBox groupBox95;

	private TextBox 序列号1;

	private Label label339;

	private Button 无限信息设置;

	private Button 无线信息读取;

	private TextBox 域名1;

	private Label label335;

	private TextBox 协议模式1;

	private Label label336;

	private TextBox 端口号1;

	private Label label337;

	private TextBox IP44;

	private TextBox IP33;

	private TextBox IP22;

	private Label label338;

	private TextBox IP11;

	private GroupBox groupBox94;

	private Label label367;

	private Label label366;

	private Label label360;

	private TextBox cxzcycsj;

	private Label label341;

	private Label label340;

	private ComboBox comboBox2;

	private ComboBox comboBox1;

	private Button setWIFI;

	private Button readWIFI;

	private TextBox WIFIsignal;

	private TextBox MACaddress;

	private TextBox WIFIpassword;

	private TextBox WIFIname;

	private Label label334;

	private Label label333;

	private Label label332;

	private Label label331;

	private Label label330;

	private Label label329;

	private TabPage tabPage14;

	private GroupBox groupBox96;

	private ComboBox 仪表型号;

	private Button setZT2;

	private Button setZT1;

	private TextBox 自注册IP;

	private TextBox 调试网站ip;

	private Label label357;

	private Button setZhongtai;

	private Button readZhongtai;

	private TextBox zzcDKH;

	private TextBox tswzDKH;

	private TextBox ztXLH;

	private TextBox 密码;

	private TextBox 用户名;

	private Label label355;

	private TextBox ztSBZQ;

	private TextBox ztDKH;

	private TextBox 中台域名;

	private ComboBox 平台选择;

	private ComboBox 中台EIOT协议模式;

	private Label label354;

	private Label label353;

	private Label label352;

	private Label label351;

	private Label label350;

	private Label label349;

	private Label label348;

	private Label label347;

	private Label label346;

	private Label label345;

	private Label label344;

	private Label label343;

	private Label label342;

	private Label label688;

	private Button button80;

	private Label label689;

	private Label label690;

	private Label label691;

	private TextBox textBox199;

	private TextBox textBox201;

	private Button button82;

	private ComboBox comboBox5;

	private ComboBox comboBox6;

	private Label label692;

	private Label label693;

	private Label label694;

	private GroupBox groupBox92;

	private Button button71;

	private Button button70;

	private Label label276;

	private TextBox 心跳;

	private Label label277;

	private TextBox APN号;

	private RadioButton APNOFF;

	private Button button23;

	private Button button20;

	private RadioButton APNON;

	private Label label278;

	public ADF400读取DIDO()
	{
		InitializeComponent();
	}

	private void toolStripMenuItem3_Click(object sender, EventArgs e)
	{
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		Form val = (Form)(object)new PortConfig();
		val.ShowDialog();
	}

	private void miyao()
	{
		((Control)密钥1).Text = "6163";
		((Control)密钥2).Text = "7265";
		((Control)密钥3).Text = "6C33";
		((Control)密钥4).Text = "3231";
	}

	private void Form1_Load(object sender, EventArgs e)
	{
		//IL_00dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0089: Unknown result type (might be due to invalid IL or missing references)
		((Control)地址).Text = "1";
		PortFalshInit();
		ParaInit();
		miyao();
		((Control)groupBox68).Visible = false;
		Form val = (Form)(object)new PortConfig();
		if (!PortIsAvailable)
		{
			return;
		}
		if (!Modbus.sp.IsOpen)
		{
			bool flag = false;
			if (m.Open())
			{
				MessageBox.Show("串口" + Variable.PortSet.PortNumber.ToString() + "已打开！");
				Variable.IsPortOpen = 1;
			}
			else
			{
				MessageBox.Show("串口" + Variable.PortSet.PortNumber.ToString() + "打开失败！");
				Variable.IsPortOpen = 0;
			}
		}
		else
		{
			MessageBox.Show("串口" + Variable.PortSet.PortNumber.ToString() + "已打开！");
		}
	}

	private void PortFalshInit()
	{
		((Control)labelGOOD).Visible = false;
		((Control)labelERROR).Visible = false;
	}

	private void PortFalshGOOD()
	{
		((Control)labelGOOD).Visible = true;
		((Control)labelERROR).Visible = false;
	}

	private void PortFalshERROR()
	{
		((Control)labelGOOD).Visible = false;
		((Control)labelERROR).Visible = true;
	}

	private void ParaInit()
	{
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		string[] portNames = SerialPort.GetPortNames();
		if (portNames.Length != 0)
		{
			PortIsAvailable = true;
			Variable.PortSet.PortNumber = portNames[0];
		}
		else
		{
			PortIsAvailable = false;
			MessageBox.Show("没有可用的串口！");
		}
		((ListControl)comboBoxCharge1_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge2_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge3_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge4_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge5_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge6_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge7_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge8_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge9_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge10_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge11_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge12_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge13_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge14_S2).SelectedIndex = 0;
		((ListControl)comboBoxCharge1_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge2_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge3_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge4_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge5_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge6_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge7_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge8_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge9_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge10_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge11_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge12_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge13_S1).SelectedIndex = 0;
		((ListControl)comboBoxCharge14_S1).SelectedIndex = 0;
		((ListControl)comboBoxschedu1).SelectedIndex = 0;
		((ListControl)comboBoxschedu2).SelectedIndex = 0;
		((ListControl)comboBoxschedu3).SelectedIndex = 0;
		((ListControl)comboBoxschedu4).SelectedIndex = 0;
		((ListControl)comboBoxUn).SelectedIndex = 1;
		((ListControl)comboBoxIb).SelectedIndex = 1;
		((ListControl)comboBoxEc).SelectedIndex = 0;
		强制合闸.Checked = true;
		脉冲.Checked = true;
		((ListControl)comboBoxL1Free1).SelectedIndex = 0;
		((ListControl)comboBoxL1Free2).SelectedIndex = 0;
		((ListControl)comboBoxL1Free3).SelectedIndex = 0;
		((ListControl)comboBoxL1Free4).SelectedIndex = 0;
		((ListControl)comboBoxL1Free5).SelectedIndex = 0;
		((ListControl)comboBoxL1Free6).SelectedIndex = 0;
		((ListControl)comboBoxL1Free7).SelectedIndex = 0;
		((ListControl)comboBoxL1Free8).SelectedIndex = 0;
		((ListControl)comboBoxL1Work1).SelectedIndex = 0;
		((ListControl)comboBoxL1Work2).SelectedIndex = 0;
		((ListControl)comboBoxL1Work3).SelectedIndex = 0;
		((ListControl)comboBoxL1Work4).SelectedIndex = 0;
		((ListControl)comboBoxL1Work5).SelectedIndex = 0;
		((ListControl)comboBoxL1Work6).SelectedIndex = 0;
		((ListControl)comboBoxL1Work7).SelectedIndex = 0;
		((ListControl)comboBoxL1Work8).SelectedIndex = 0;
		((ListControl)波特率comboBox).SelectedIndex = 3;
		((ListControl)校验位comboBox).SelectedIndex = 0;
		((ListControl)停止位comboBox).SelectedIndex = 0;
		((ListControl)ADF电压).SelectedIndex = 1;
		((ListControl)ADF电流).SelectedIndex = 0;
		((ListControl)ADF脉冲常数).SelectedIndex = 0;
		((ListControl)ADF300地址).SelectedIndex = 0;
		((ListControl)ADF300波特率).SelectedIndex = 0;
		FKEN0.Checked = true;
		FKEN1.Checked = true;
		FKEN2.Checked = true;
		FKEN3.Checked = true;
		FKEN4.Checked = true;
		FKEN5.Checked = true;
		FKEN6.Checked = true;
		FKEN7.Checked = true;
		FKEN8.Checked = true;
		OFFFK.Checked = true;
		FKALL.Checked = true;
		checkBoxPowerEN0.Checked = true;
		ClosePower.Checked = true;
		SKALL.Checked = true;
		checkBox2.Checked = true;
		CloseTime.Checked = true;
		checkBoxForceEN1.Checked = true;
		checkBoxForceEN2.Checked = true;
		checkBoxForceEN3.Checked = true;
		L1ON.Checked = true;
		L1Open.Checked = true;
		L2ON.Checked = true;
		L2Open.Checked = true;
		L3ON.Checked = true;
		L3Open.Checked = true;
	}

	private void 读取数据_Click(object sender, EventArgs e)
	{
		//IL_019e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0062: Unknown result type (might be due to invalid IL or missing references)
		//IL_0040: Unknown result type (might be due to invalid IL or missing references)
		//IL_0097: Unknown result type (might be due to invalid IL or missing references)
		//IL_0259: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c5: Unknown result type (might be due to invalid IL or missing references)
		if (!Modbus.sp.IsOpen)
		{
			if (m.Open())
			{
				MessageBox.Show("打开" + Variable.PortSet.PortNumber.ToString() + "成功");
			}
			else
			{
				MessageBox.Show("打开" + Variable.PortSet.PortNumber.ToString() + "失败");
			}
		}
		if (!CheckAddr())
		{
			return;
		}
		if (!Modbus.sp.IsOpen)
		{
			MessageBox.Show("请先打开串口！");
			return;
		}
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[12];
		byte[] response = new byte[15];
		byte[] CRC = new byte[15];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 17;
		array[2] = 254;
		array[3] = 220;
		array[4] = 186;
		array[5] = 152;
		array[6] = 118;
		array[7] = 84;
		array[8] = 50;
		array[9] = 16;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(20);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(30);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			int num = (response[3] << 8) | response[4];
			int num2 = (response[7] << 8) | response[8];
			if (num2 < 32768)
			{
				((Control)版本号).Text = "V" + num2;
			}
			else
			{
				((Control)版本号).Text = "T" + (num2 - 32768);
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
		if (Variable.PortSet.PortBaud == "9600")
		{
			主轮抄定时器.Interval = 500;
		}
		else if (Variable.PortSet.PortBaud == "4800")
		{
			主轮抄定时器.Interval = 1000;
		}
		else if (Variable.PortSet.PortBaud == "2400")
		{
			主轮抄定时器.Interval = 1500;
		}
		else if (Variable.PortSet.PortBaud == "1200")
		{
			主轮抄定时器.Interval = 2000;
		}
		else
		{
			主轮抄定时器.Interval = 500;
		}
		主轮抄定时器.Enabled = true;
	}

	private bool CheckAddr()
	{
		//IL_0016: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		if (Variable.IsRightAddr != 1)
		{
			MessageBox.Show("Please confirm that you have entered the correct address！");
			return false;
		}
		if (Variable.IsPortOpen > 0)
		{
			return true;
		}
		MessageBox.Show("Serial port not open！");
		return false;
	}

	private void textBox1_TextChanged(object sender, EventArgs e)
	{
		//IL_0466: Unknown result type (might be due to invalid IL or missing references)
		//IL_006e: Unknown result type (might be due to invalid IL or missing references)
		//IL_013e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0366: Unknown result type (might be due to invalid IL or missing references)
		//IL_03ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_02df: Unknown result type (might be due to invalid IL or missing references)
		switch (((Control)地址).Text.Trim().Length)
		{
		case 1:
		{
			string text3 = ((Control)地址).Text.Trim();
			foreach (char c3 in text3)
			{
				if (c3 < '0' || c3 > '9')
				{
					MessageBox.Show("确定输入的值为0到255的整数！");
					((Control)地址).Text = "";
					Variable.IsRightAddr = 0;
					return;
				}
			}
			if (Convert.ToByte(((Control)地址).Text.Trim()) != 0)
			{
				Variable.Address = ((Control)地址).Text.Trim();
				Variable.IsRightAddr = 1;
			}
			else
			{
				Variable.Address = ((Control)地址).Text.Trim();
				Variable.IsRightAddr = 1;
			}
			break;
		}
		case 2:
		{
			string text2 = ((Control)地址).Text.Trim();
			foreach (char c2 in text2)
			{
				if (c2 < '0' || c2 > '9')
				{
					MessageBox.Show("确定输入的值为0到255的整数！");
					((Control)地址).Text = "";
					Variable.IsRightAddr = 0;
					return;
				}
			}
			if (Convert.ToByte(((Control)地址).Text.Trim()) != 0)
			{
				Variable.Address = ((Control)地址).Text.Trim();
				Variable.IsRightAddr = 1;
			}
			else
			{
				Variable.Address = ((Control)地址).Text.Trim();
				Variable.IsRightAddr = 1;
			}
			break;
		}
		case 3:
			if (((Control)地址).Text.Trim()[0] >= '0' && ((Control)地址).Text.Trim()[0] < '3')
			{
				if (((Control)地址).Text.Trim()[0] == '2')
				{
					if (((Control)地址).Text.Trim()[1] >= '0' && ((Control)地址).Text.Trim()[1] <= '5')
					{
						if (((Control)地址).Text.Trim()[1] == '5' && ((Control)地址).Text.Trim()[2] > '5' && ((Control)地址).Text.Trim()[2] <= '9')
						{
							MessageBox.Show("确定输入的值为0到255的整数！");
							((Control)地址).Text = "";
							Variable.IsRightAddr = 0;
						}
						else if (Convert.ToByte(((Control)地址).Text.Trim()) != 0)
						{
							Variable.Address = ((Control)地址).Text.Trim();
							Variable.IsRightAddr = 1;
						}
						else
						{
							Variable.IsRightAddr = 1;
							Variable.Address = ((Control)地址).Text.Trim();
						}
					}
					else
					{
						MessageBox.Show("确定输入的值为0到255的整数！");
						((Control)地址).Text = "";
						Variable.IsRightAddr = 0;
					}
					break;
				}
				string text = ((Control)地址).Text.Trim();
				foreach (char c in text)
				{
					if (c < '0' || c > '9')
					{
						MessageBox.Show("确定输入的值为0到255的整数！");
						((Control)地址).Text = "";
						Variable.IsRightAddr = 0;
						return;
					}
				}
				if (Convert.ToByte(((Control)地址).Text.Trim()) != 0)
				{
					Variable.Address = ((Control)地址).Text.Trim();
					Variable.IsRightAddr = 1;
				}
				else
				{
					Variable.Address = ((Control)地址).Text.Trim();
					Variable.IsRightAddr = 1;
				}
			}
			else
			{
				MessageBox.Show("确定输入的值为0到255的整数！");
				((Control)地址).Text = "";
				Variable.IsRightAddr = 0;
			}
			break;
		}
	}

	private void 主轮抄_Tick(object sender, EventArgs e)
	{
		//IL_0094: Unknown result type (might be due to invalid IL or missing references)
		//IL_00da: Unknown result type (might be due to invalid IL or missing references)
		PortFalshInit();
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] message = new byte[8];
		byte[] response = new byte[101];
		m.BuildMessage(ref message, 0);
		try
		{
			Modbus.sp.Write(message, 0, message.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = false;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			PortFalshGOOD();
			轮抄显示(response);
		}
		else
		{
			主轮抄定时器.Enabled = false;
			PortFalshInit();
			MessageBox.Show("Verification error！");
		}
	}

	private void 轮抄显示(byte[] bb)
	{
		byte[] array = new byte[7];
		double num = (bb[3] << 8) | bb[4];
		if (bb[97] == 0)
		{
			MeterType2 = 0;
		}
		else if (bb[97] == 1)
		{
			MeterType2 = 1;
		}
		else
		{
			MeterType2 = 2;
		}
		if (num == 7.0)
		{
			MeterType = 1;
			((ListControl)comboBoxEc).SelectedIndex = 1;
			DDSYDTSY.Checked = true;
			((Control)型号).Text = "DDSY1352";
		}
		else if (num == 5.0)
		{
			MeterType = 2;
			DDSYDTSY.Checked = true;
			((Control)型号).Text = "DTSY1352";
		}
		else if (num == 10.0)
		{
			((Control)型号).Text = "ADF300";
			MeterType = 3;
			if (bb[98] == 0)
			{
				IS3P = 1;
			}
			else
			{
				IS3P = 0;
			}
			if (MeterType2 == 0)
			{
				((Control)最大回路数).Text = "最大36路";
				if (bb[98] == 0)
				{
					((Control)单三相状态).Text = "三相回路";
				}
				else
				{
					((Control)单三相状态).Text = "单相回路";
				}
			}
			else if (MeterType2 == 1)
			{
				((Control)最大回路数).Text = "最大24路";
				if (bb[98] == 0)
				{
					((Control)单三相状态).Text = "三相回路";
				}
				else
				{
					((Control)单三相状态).Text = "单相回路";
				}
			}
			else
			{
				((Control)最大回路数).Text = "最大12路";
				if (bb[98] == 0)
				{
					((Control)单三相状态).Text = "三相回路";
				}
				else
				{
					((Control)单三相状态).Text = "单相回路";
				}
			}
		}
		num = (bb[5] << 8) | bb[6];
		num = Convert.ToDouble(num) / 10.0;
		((Control)Ua).Text = num.ToString("f1");
		num = (bb[7] << 8) | bb[8];
		num = Convert.ToDouble(num) / 10.0;
		((Control)Ub).Text = num.ToString("f1");
		num = (bb[9] << 8) | bb[10];
		num = Convert.ToDouble(num) / 10.0;
		((Control)Uc).Text = num.ToString("f1");
		num = (bb[11] << 8) | bb[12];
		num = Convert.ToDouble(num) / 100.0;
		((Control)Ia).Text = num.ToString("f2");
		num = (bb[13] << 8) | bb[14];
		num = Convert.ToDouble(num) / 100.0;
		((Control)Ib).Text = num.ToString("f2");
		num = (bb[15] << 8) | bb[16];
		num = Convert.ToDouble(num) / 100.0;
		((Control)Ic).Text = num.ToString("f2");
		int num2 = (bb[17] << 8) | bb[18];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Pa).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[19] << 8) | bb[20];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Pb).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[21] << 8) | bb[22];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Pc).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[23] << 8) | bb[24];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Pt).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[25] << 8) | bb[26];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Qa).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[27] << 8) | bb[28];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Qb).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[29] << 8) | bb[30];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Qc).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[31] << 8) | bb[32];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)Qt).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[33] << 8) | bb[34];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)PFa).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[35] << 8) | bb[36];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)PFb).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[37] << 8) | bb[38];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)PFc).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num2 = (bb[39] << 8) | bb[40];
		if (num2 > 32767)
		{
			num2 = -1 * (65536 - num2);
		}
		((Control)PFt).Text = (Convert.ToDouble(num2) / 1000.0).ToString("f3");
		num = (bb[41] << 8) | bb[42];
		num = Convert.ToDouble(num);
		((Control)电压变比).Text = num.ToString("f0");
		num = (bb[43] << 8) | bb[44];
		num = Convert.ToDouble(num);
		((Control)电流变比).Text = num.ToString("f0");
		num = (bb[45] << 24) | (bb[46] << 16) | (bb[47] << 8) | bb[48];
		num /= 100.0;
		((Control)总用电量).Text = num.ToString("f2");
		num = (bb[49] << 24) | (bb[50] << 16) | (bb[51] << 8) | bb[52];
		num /= 100.0;
		((Control)尖电能).Text = num.ToString("f2");
		num = (bb[53] << 24) | (bb[54] << 16) | (bb[55] << 8) | bb[56];
		num /= 100.0;
		((Control)峰电能).Text = num.ToString("f2");
		num = (bb[79] << 24) | (bb[80] << 16) | (bb[81] << 8) | bb[82];
		num /= 100.0;
		((Control)基础电量).Text = num.ToString("f2");
		num = (bb[57] << 24) | (bb[58] << 16) | (bb[59] << 8) | bb[60];
		num /= 100.0;
		((Control)平电能).Text = num.ToString("f2");
		num = (bb[61] << 24) | (bb[62] << 16) | (bb[63] << 8) | bb[64];
		num /= 100.0;
		((Control)谷电能).Text = num.ToString("f2");
		num = (bb[65] << 24) | (bb[66] << 16) | (bb[67] << 8) | bb[68];
		num /= 100.0;
		((Control)剩余金额).Text = num.ToString("f2");
		num = (bb[69] << 8) | bb[70];
		num = Convert.ToDouble(num);
		((Control)购电次数).Text = num.ToString("f0");
		num = (bb[71] << 8) | bb[72];
		num = Convert.ToDouble(num);
		((Control)负控次数).Text = num.ToString("f0");
		num = (bb[73] << 8) | bb[74];
		num = Convert.ToDouble(num);
		((Control)允许次数).Text = num.ToString("f0");
		if (((bb[76] >> 3) & 1) == 1)
		{
			((Control)fs).Text = "打开";
			if ((bb[76] & 1) == 1)
			{
				((Control)fs1).Text = "闭合";
			}
			else
			{
				((Control)fs1).Text = "断开";
			}
			if (((bb[76] >> 1) & 1) == 1)
			{
				((Control)fs2).Text = "闭合";
			}
			else
			{
				((Control)fs2).Text = "断开";
			}
			if (((bb[76] >> 2) & 1) == 1)
			{
				((Control)fs3).Text = "闭合";
			}
			else
			{
				((Control)fs3).Text = "断开";
			}
		}
		else
		{
			((Control)fs).Text = "**";
			((Control)fs1).Text = "**";
			((Control)fs2).Text = "**";
			((Control)fs3).Text = "**";
		}
		if (((bb[76] >> 4) & 1) == 1)
		{
			((Control)越限).Text = "是";
		}
		else
		{
			((Control)越限).Text = "否";
		}
		if (((bb[76] >> 5) & 1) == 1)
		{
			((Control)欠费).Text = "是";
		}
		else
		{
			((Control)欠费).Text = "否";
		}
		if (((bb[76] >> 6) & 1) == 1)
		{
			((Control)ALM1).Text = "是";
		}
		else
		{
			((Control)ALM1).Text = "否";
		}
		if (((bb[76] >> 7) & 1) == 1)
		{
			((Control)ALM2).Text = "是";
		}
		else
		{
			((Control)ALM2).Text = "否";
		}
		if ((bb[75] & 1) == 1)
		{
			((Control)故障).Text = "是";
		}
		else
		{
			((Control)故障).Text = "否";
		}
		if (((bb[75] >> 5) & 1) == 1)
		{
			((Control)L1).Text = "合闸";
		}
		else
		{
			((Control)L1).Text = "分闸";
		}
		if (((bb[75] >> 6) & 1) == 1)
		{
			((Control)L2).Text = "合闸";
		}
		else
		{
			((Control)L2).Text = "分闸";
		}
		if (((bb[75] >> 7) & 1) == 1)
		{
			((Control)L3).Text = "合闸";
		}
		else
		{
			((Control)L3).Text = "分闸";
		}
		if (((bb[77] >> 3) & 1) == 1)
		{
			((Control)ps).Text = "打开";
			if ((bb[77] & 1) == 1)
			{
				((Control)ps1).Text = "闭合";
			}
			else
			{
				((Control)ps1).Text = "断开";
			}
			if (((bb[77] >> 1) & 1) == 1)
			{
				((Control)ps2).Text = "闭合";
			}
			else
			{
				((Control)ps2).Text = "断开";
			}
			if (((bb[77] >> 2) & 1) == 1)
			{
				((Control)ps3).Text = "闭合";
			}
			else
			{
				((Control)ps3).Text = "断开";
			}
		}
		else
		{
			((Control)ps).Text = "**";
			((Control)ps1).Text = "**";
			((Control)ps2).Text = "**";
			((Control)ps3).Text = "**";
		}
		if (((bb[78] >> 3) & 1) == 1)
		{
			((Control)ms).Text = "打开";
			if ((bb[78] & 1) == 1)
			{
				((Control)ms1).Text = "闭合";
			}
			else
			{
				((Control)ms1).Text = "断开";
			}
			if (((bb[78] >> 1) & 1) == 1)
			{
				((Control)ms2).Text = "闭合";
			}
			else
			{
				((Control)ms2).Text = "断开";
			}
			if (((bb[78] >> 2) & 1) == 1)
			{
				((Control)ms3).Text = "闭合";
			}
			else
			{
				((Control)ms3).Text = "断开";
			}
		}
		else
		{
			((Control)ms).Text = "**";
			((Control)ms1).Text = "**";
			((Control)ms2).Text = "**";
			((Control)ms3).Text = "**";
		}
		if (((bb[78] >> 7) & 1) == 1)
		{
			((Control)ts).Text = "打开";
			if (((bb[78] >> 4) & 1) == 1)
			{
				((Control)ts1).Text = "闭合";
			}
			else
			{
				((Control)ts1).Text = "断开";
			}
			if (((bb[78] >> 5) & 1) == 1)
			{
				((Control)ts2).Text = "闭合";
			}
			else
			{
				((Control)ts2).Text = "断开";
			}
			if (((bb[78] >> 6) & 1) == 1)
			{
				((Control)ts3).Text = "闭合";
			}
			else
			{
				((Control)ts3).Text = "断开";
			}
		}
		else
		{
			((Control)ts).Text = "**";
			((Control)ts1).Text = "**";
			((Control)ts2).Text = "**";
			((Control)ts3).Text = "**";
		}
		num = (bb[90] << 8) | bb[91];
		num = Convert.ToDouble(num);
		((Control)最大需量).Text = num.ToString("f0");
		string text = bb[95].ToString("00") + "-" + bb[94].ToString("00") + "  " + bb[93].ToString("00") + ":" + bb[92].ToString("00");
		((Control)需量时间).Text = text;
		string text2 = bb[83].ToString("00") + "-" + bb[84].ToString("00") + "-" + bb[85].ToString("00") + "  " + bb[87].ToString("00") + ":" + bb[88].ToString("00") + ":" + bb[89].ToString("00") + "  星期" + bb[86].ToString("00");
		((Control)时间显示).Text = text2;
	}

	private void 关闭串口_Click(object sender, EventArgs e)
	{
		//IL_0039: Unknown result type (might be due to invalid IL or missing references)
		//IL_002a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		if (m.close())
		{
			PortFalshInit();
			MessageBox.Show("The serial port is closed");
		}
		else
		{
			MessageBox.Show("Error closing, please check the connection");
		}
	}

	private void 强控设置_Click(object sender, EventArgs e)
	{
		//IL_011c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0166: Unknown result type (might be due to invalid IL or missing references)
		//IL_013d: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 87;
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = 0;
		if (强控关.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		array[9] = 0;
		if (强制合闸.Checked)
		{
			array[10] = 0;
		}
		else
		{
			array[10] = 1;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 运行状态设置_Click(object sender, EventArgs e)
	{
		//IL_023c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0286: Unknown result type (might be due to invalid IL or missing references)
		//IL_025d: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 34;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (单费率.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		if (电能脉冲.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 2;
		}
		if (红外.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 4;
		}
		if (内控.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 8;
		}
		if (无射频.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 16;
		}
		if (加密开.Checked)
		{
			array[8] |= 32;
		}
		else
		{
			array[8] |= 0;
		}
		if (DDSY.Checked)
		{
			array[8] |= 64;
		}
		else
		{
			array[8] |= 0;
		}
		if (三相四线.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 128;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 运行状态读取_Click(object sender, EventArgs e)
	{
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0127: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 34;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			运行状态显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 运行状态显示(byte[] bb)
	{
		if ((bb[4] & 1) == 1)
		{
			复费率.Checked = true;
		}
		else
		{
			单费率.Checked = true;
		}
		if ((bb[4] & 2) == 2)
		{
			时钟脉冲.Checked = true;
		}
		else
		{
			电能脉冲.Checked = true;
		}
		if ((bb[4] & 4) == 4)
		{
			副通讯.Checked = true;
		}
		else
		{
			红外.Checked = true;
		}
		if ((bb[4] & 8) == 8)
		{
			外控.Checked = true;
		}
		else
		{
			内控.Checked = true;
		}
		if ((bb[4] & 0x10) == 16)
		{
			有射频.Checked = true;
		}
		else
		{
			无射频.Checked = true;
		}
		if ((bb[4] & 0x20) == 32)
		{
			加密开.Checked = true;
		}
		else
		{
			加密关.Checked = true;
		}
		if ((bb[4] & 0x40) == 64)
		{
			DDSY.Checked = true;
		}
		else
		{
			DDSF.Checked = true;
		}
		if ((bb[4] & 0x80) == 128)
		{
			三相三线.Checked = true;
		}
		else
		{
			三相四线.Checked = true;
		}
	}

	private void 读取预付费参数_Click(object sender, EventArgs e)
	{
		//IL_00d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0129: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f8: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[61];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 70;
		array[4] = 0;
		array[5] = 28;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			预付费参数显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 预付费参数显示(byte[] bb)
	{
		double num = (bb[3] << 24) | (bb[4] << 16) | (bb[5] << 8) | bb[6];
		((Control)BJ1).Text = num.ToString("f0");
		num = (bb[7] << 24) | (bb[8] << 16) | (bb[9] << 8) | bb[10];
		((Control)BJ2).Text = num.ToString("f0");
		num = (bb[11] << 24) | (bb[12] << 16) | (bb[13] << 8) | bb[14];
		((Control)SQJE).Text = num.ToString("f0");
		int num2 = (bb[19] << 8) | bb[20];
		((Control)BuyTime).Text = num2.ToString("f0");
		num = (bb[21] << 24) | (bb[22] << 16) | (bb[23] << 8) | bb[24];
		((Control)SYJE).Text = num.ToString("f0");
		num2 = bb[33];
		((Control)FKState).Text = num2.ToString("f0");
		num = (bb[41] << 24) | (bb[42] << 16) | (bb[43] << 8) | bb[44];
		((Control)PriceJ).Text = num.ToString("f0");
		num = (bb[45] << 24) | (bb[46] << 16) | (bb[47] << 8) | bb[48];
		((Control)PriceF).Text = num.ToString("f0");
		num = (bb[49] << 24) | (bb[50] << 16) | (bb[51] << 8) | bb[52];
		((Control)PriceP).Text = num.ToString("f0");
		num = (bb[53] << 24) | (bb[54] << 16) | (bb[55] << 8) | bb[56];
		((Control)PriceG).Text = num.ToString("f0");
		num2 = (bb[57] << 8) | bb[58];
		((Control)PMAX).Text = num2.ToString("f0");
	}

	private void 设置预付费参数_Click(object sender, EventArgs e)
	{
		//IL_048d: Unknown result type (might be due to invalid IL or missing references)
		//IL_04d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_04ae: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[65];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 170;
		array[2] = 0;
		array[3] = 70;
		array[4] = 0;
		array[5] = 28;
		array[6] = 56;
		array[7] = (byte)(Convert.ToInt32(((Control)BJ1).Text) >> 24);
		array[8] = (byte)(Convert.ToInt32(((Control)BJ1).Text) >> 16);
		array[9] = (byte)(Convert.ToInt32(((Control)BJ1).Text) >> 8);
		array[10] = (byte)Convert.ToInt32(((Control)BJ1).Text);
		array[11] = (byte)(Convert.ToInt32(((Control)BJ2).Text) >> 24);
		array[12] = (byte)(Convert.ToInt32(((Control)BJ2).Text) >> 16);
		array[13] = (byte)(Convert.ToInt32(((Control)BJ2).Text) >> 8);
		array[14] = (byte)Convert.ToInt32(((Control)BJ2).Text);
		array[15] = (byte)(Convert.ToInt32(((Control)SQJE).Text) >> 24);
		array[16] = (byte)(Convert.ToInt32(((Control)SQJE).Text) >> 16);
		array[17] = (byte)(Convert.ToInt32(((Control)SQJE).Text) >> 8);
		array[18] = (byte)Convert.ToInt32(((Control)SQJE).Text);
		array[19] = 0;
		array[20] = 0;
		array[21] = 0;
		array[22] = 0;
		array[23] = (byte)(Convert.ToInt16(((Control)BuyTime).Text) >> 8);
		array[24] = (byte)Convert.ToInt16(((Control)BuyTime).Text);
		array[25] = (byte)(Convert.ToInt32(((Control)SYJE).Text) >> 24);
		array[26] = (byte)(Convert.ToInt32(((Control)SYJE).Text) >> 16);
		array[27] = (byte)(Convert.ToInt32(((Control)SYJE).Text) >> 8);
		array[28] = (byte)Convert.ToInt32(((Control)SYJE).Text);
		array[29] = 0;
		array[30] = 0;
		array[31] = 0;
		array[32] = 0;
		array[33] = 0;
		array[34] = 0;
		array[35] = 0;
		array[36] = 0;
		array[37] = (byte)Convert.ToSByte(((Control)FKState).Text);
		array[38] = 0;
		array[39] = 0;
		array[40] = 0;
		array[41] = 0;
		array[42] = 0;
		array[43] = 0;
		array[44] = 0;
		array[45] = (byte)(Convert.ToInt32(((Control)PriceJ).Text) >> 24);
		array[46] = (byte)(Convert.ToInt32(((Control)PriceJ).Text) >> 16);
		array[47] = (byte)(Convert.ToInt32(((Control)PriceJ).Text) >> 8);
		array[48] = (byte)Convert.ToInt32(((Control)PriceJ).Text);
		array[49] = (byte)(Convert.ToInt32(((Control)PriceF).Text) >> 24);
		array[50] = (byte)(Convert.ToInt32(((Control)PriceF).Text) >> 16);
		array[51] = (byte)(Convert.ToInt32(((Control)PriceF).Text) >> 8);
		array[52] = (byte)Convert.ToInt32(((Control)PriceF).Text);
		array[53] = (byte)(Convert.ToInt32(((Control)PriceP).Text) >> 24);
		array[54] = (byte)(Convert.ToInt32(((Control)PriceP).Text) >> 16);
		array[55] = (byte)(Convert.ToInt32(((Control)PriceP).Text) >> 8);
		array[56] = (byte)Convert.ToInt32(((Control)PriceP).Text);
		array[57] = (byte)(Convert.ToInt32(((Control)PriceG).Text) >> 24);
		array[58] = (byte)(Convert.ToInt32(((Control)PriceG).Text) >> 16);
		array[59] = (byte)(Convert.ToInt32(((Control)PriceG).Text) >> 8);
		array[60] = (byte)Convert.ToInt32(((Control)PriceG).Text);
		array[61] = (byte)(Convert.ToUInt16(((Control)PMAX).Text) >> 8);
		array[62] = (byte)Convert.ToUInt16(((Control)PMAX).Text);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 地址设置_Click(object sender, EventArgs e)
	{
		//IL_0185: Unknown result type (might be due to invalid IL or missing references)
		//IL_01cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a6: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[19];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 3;
		if (主通讯.Checked)
		{
			array[3] = 96;
		}
		else
		{
			array[3] = 101;
		}
		array[4] = 0;
		array[5] = 5;
		array[6] = 10;
		array[7] = Convert.ToByte(((Control)地址textBox).Text);
		array[8] = (byte)((ListControl)波特率comboBox).SelectedIndex;
		array[9] = (byte)((ListControl)校验位comboBox).SelectedIndex;
		array[10] = (byte)((ListControl)停止位comboBox).SelectedIndex;
		GetMeterID();
		array[11] = MeterIDToSet[0];
		array[12] = MeterIDToSet[1];
		array[13] = MeterIDToSet[2];
		array[14] = MeterIDToSet[3];
		array[15] = MeterIDToSet[4];
		array[16] = MeterIDToSet[5];
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 地址读取_Click(object sender, EventArgs e)
	{
		//IL_00ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_0140: Unknown result type (might be due to invalid IL or missing references)
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 3;
		if (主通讯.Checked)
		{
			array[3] = 96;
		}
		else
		{
			array[3] = 101;
		}
		array[4] = 0;
		array[5] = 5;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			地址显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 地址显示(byte[] bb)
	{
		((Control)地址textBox).Text = bb[3].ToString();
		((ListControl)波特率comboBox).SelectedIndex = bb[4];
		((ListControl)校验位comboBox).SelectedIndex = bb[5];
		((ListControl)停止位comboBox).SelectedIndex = bb[6];
		string text = "";
		int[] array = new int[6];
		for (int i = 0; i < 6; i++)
		{
			array[i] = bb[7 + i] / 16 * 10 + bb[7 + i] % 16;
		}
		for (int j = 0; j < 6; j++)
		{
			text = ((array[j] != 0) ? ((array[j] >= 10 || array[j] <= 0) ? (text + array[j]) : (text + "0" + array[j])) : (text + "00"));
		}
		((Control)表号textBox).Text = text;
	}

	private int CheckMeterIDSet()
	{
		int num = 0;
		int num2 = 0;
		if (((Control)表号textBox).Text.Trim() == "")
		{
			return 1;
		}
		string text = ((Control)表号textBox).Text.Trim();
		foreach (char c in text)
		{
			if (c < '0' || c > '9')
			{
				num2++;
			}
		}
		if (num2 > 0)
		{
			return 2;
		}
		return 0;
	}

	private void GetMeterID()
	{
		string text = "";
		int num = 12 - ((Control)表号textBox).Text.Length;
		for (int i = 0; i < num; i++)
		{
			text += "0";
		}
		((Control)表号textBox).Text = text + ((Control)表号textBox).Text;
		int num2 = 0;
		int num3 = 0;
		while (num2 < 6)
		{
			MeterIDToSet[num3] = (byte)(Convert.ToInt16(((Control)表号textBox).Text.Substring(num2 * 2, 2)) / 10 * 16 + Convert.ToInt16(((Control)表号textBox).Text.Substring(num2 * 2, 2)) % 10);
			num2++;
			num3++;
		}
	}

	private void GetMeterID3()
	{
		string text = "";
		int num = 10 - ((Control)ADF表号).Text.Length;
		for (int i = 0; i < num; i++)
		{
			text += "0";
		}
		((Control)ADF表号).Text = text + ((Control)ADF表号).Text;
		int num2 = 0;
		int num3 = 0;
		while (num2 < 5)
		{
			MeterIDToSet[num3] = (byte)(Convert.ToInt16(((Control)ADF表号).Text.Substring(num2 * 2, 2)) / 10 * 16 + Convert.ToInt16(((Control)ADF表号).Text.Substring(num2 * 2, 2)) % 10);
			num2++;
			num3++;
		}
	}

	private void GetMeterID4()
	{
		string text = "";
		int num = 16 - ((Control)序列号).Text.Length;
		for (int i = 0; i < num; i++)
		{
			text += "0";
		}
		((Control)序列号).Text = text + ((Control)序列号).Text;
		int num2 = 0;
		int num3 = 0;
		while (num2 < 8)
		{
			MeterIDToSet[num3] = (byte)(Convert.ToInt16(((Control)序列号).Text.Substring(num2 * 2, 2)) / 10 * 16 + Convert.ToInt16(((Control)序列号).Text.Substring(num2 * 2, 2)) % 10);
			num2++;
			num3++;
		}
	}

	private void GetMeterID5()
	{
		string text = "";
		int num = 10 - ((Control)ADF400表号).Text.Length;
		for (int i = 0; i < num; i++)
		{
			text += "0";
		}
		((Control)ADF400表号).Text = text + ((Control)ADF400表号).Text;
		int num2 = 0;
		int num3 = 0;
		while (num2 < 5)
		{
			MeterIDToSet[num3] = (byte)(Convert.ToInt16(((Control)ADF400表号).Text.Substring(num2 * 2, 2)) / 10 * 16 + Convert.ToInt16(((Control)ADF400表号).Text.Substring(num2 * 2, 2)) % 10);
			num2++;
			num3++;
		}
	}

	private void button11_Click(object sender, EventArgs e)
	{
		//IL_0169: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_003c: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_018a: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		num = CheckMeterIDSet();
		GetMeterID();
		switch (num)
		{
		case 2:
			MessageBox.Show("Please confirm that the input table number does not contain other characters！");
			return;
		case 1:
			MessageBox.Show("Please confirm that the account number or table number has been entered！");
			return;
		}
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 67;
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		array[7] = MeterIDToSet[0];
		array[8] = MeterIDToSet[1];
		array[9] = MeterIDToSet[2];
		array[10] = MeterIDToSet[3];
		array[11] = MeterIDToSet[4];
		array[12] = MeterIDToSet[5];
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button10_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0128: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f7: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[11];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 67;
		array[4] = 0;
		array[5] = 3;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			表号显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 表号显示(byte[] bb)
	{
		string text = "";
		int[] array = new int[6];
		for (int i = 0; i < 6; i++)
		{
			array[i] = bb[3 + i] / 16 * 10 + bb[3 + i] % 16;
		}
		for (int j = 0; j < 6; j++)
		{
			text = ((array[j] != 0) ? ((array[j] >= 10 || array[j] <= 0) ? (text + array[j]) : (text + "0" + array[j])) : (text + "00"));
		}
		((Control)表号textBox).Text = text;
	}

	private void button13_Click(object sender, EventArgs e)
	{
		//IL_0139: Unknown result type (might be due to invalid IL or missing references)
		//IL_0183: Unknown result type (might be due to invalid IL or missing references)
		//IL_015a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 55;
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = (byte)(Convert.ToInt16(((Control)CTValue).Text) / 256);
		array[8] = (byte)Convert.ToInt16(((Control)CTValue).Text);
		array[9] = (byte)(Convert.ToInt16(((Control)PTValue).Text) / 256);
		array[10] = (byte)Convert.ToInt16(((Control)PTValue).Text);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void GetTimeSche1()
	{
		TimeSchedule.Price1 = (byte)((ListControl)comboBoxCharge1_S1).SelectedIndex;
		if (TimeSchedule.Price1 == byte.MaxValue)
		{
			TimeSchedule.Price1 = 0;
		}
		TimeSchedule.Price2 = (byte)((ListControl)comboBoxCharge2_S1).SelectedIndex;
		if (TimeSchedule.Price2 == byte.MaxValue)
		{
			TimeSchedule.Price2 = 0;
		}
		TimeSchedule.Price3 = (byte)((ListControl)comboBoxCharge3_S1).SelectedIndex;
		if (TimeSchedule.Price3 == byte.MaxValue)
		{
			TimeSchedule.Price3 = 0;
		}
		TimeSchedule.Price4 = (byte)((ListControl)comboBoxCharge4_S1).SelectedIndex;
		if (TimeSchedule.Price4 == byte.MaxValue)
		{
			TimeSchedule.Price4 = 0;
		}
		TimeSchedule.Price5 = (byte)((ListControl)comboBoxCharge5_S1).SelectedIndex;
		if (TimeSchedule.Price5 == byte.MaxValue)
		{
			TimeSchedule.Price5 = 0;
		}
		TimeSchedule.Price6 = (byte)((ListControl)comboBoxCharge6_S1).SelectedIndex;
		if (TimeSchedule.Price6 == byte.MaxValue)
		{
			TimeSchedule.Price6 = 0;
		}
		TimeSchedule.Price7 = (byte)((ListControl)comboBoxCharge7_S1).SelectedIndex;
		if (TimeSchedule.Price7 == byte.MaxValue)
		{
			TimeSchedule.Price7 = 0;
		}
		TimeSchedule.Price8 = (byte)((ListControl)comboBoxCharge8_S1).SelectedIndex;
		if (TimeSchedule.Price8 == byte.MaxValue)
		{
			TimeSchedule.Price8 = 0;
		}
		TimeSchedule.Price9 = (byte)((ListControl)comboBoxCharge9_S1).SelectedIndex;
		if (TimeSchedule.Price9 == byte.MaxValue)
		{
			TimeSchedule.Price9 = 0;
		}
		TimeSchedule.Price10 = (byte)((ListControl)comboBoxCharge10_S1).SelectedIndex;
		if (TimeSchedule.Price10 == byte.MaxValue)
		{
			TimeSchedule.Price10 = 0;
		}
		TimeSchedule.Price11 = (byte)((ListControl)comboBoxCharge11_S1).SelectedIndex;
		if (TimeSchedule.Price11 == byte.MaxValue)
		{
			TimeSchedule.Price11 = 0;
		}
		TimeSchedule.Price12 = (byte)((ListControl)comboBoxCharge12_S1).SelectedIndex;
		if (TimeSchedule.Price12 == byte.MaxValue)
		{
			TimeSchedule.Price12 = 0;
		}
		TimeSchedule.Price13 = (byte)((ListControl)comboBoxCharge13_S1).SelectedIndex;
		if (TimeSchedule.Price13 == byte.MaxValue)
		{
			TimeSchedule.Price13 = 0;
		}
		TimeSchedule.Price14 = (byte)((ListControl)comboBoxCharge14_S1).SelectedIndex;
		if (TimeSchedule.Price14 == byte.MaxValue)
		{
			TimeSchedule.Price14 = 0;
		}
		TimeSchedule.Minute1 = Convert.ToByte(((Control)textBoxMinute1_S1).Text);
		TimeSchedule.Minute2 = Convert.ToByte(((Control)textBoxMinute2_S1).Text);
		TimeSchedule.Minute3 = Convert.ToByte(((Control)textBoxMinute3_S1).Text);
		TimeSchedule.Minute4 = Convert.ToByte(((Control)textBoxMinute4_S1).Text);
		TimeSchedule.Minute5 = Convert.ToByte(((Control)textBoxMinute5_S1).Text);
		TimeSchedule.Minute6 = Convert.ToByte(((Control)textBoxMinute6_S1).Text);
		TimeSchedule.Minute7 = Convert.ToByte(((Control)textBoxMinute7_S1).Text);
		TimeSchedule.Minute8 = Convert.ToByte(((Control)textBoxMinute8_S1).Text);
		TimeSchedule.Minute9 = Convert.ToByte(((Control)textBoxMinute9_S1).Text);
		TimeSchedule.Minute10 = Convert.ToByte(((Control)textBoxMinute10_S1).Text);
		TimeSchedule.Minute11 = Convert.ToByte(((Control)textBoxMinute11_S1).Text);
		TimeSchedule.Minute12 = Convert.ToByte(((Control)textBoxMinute12_S1).Text);
		TimeSchedule.Minute13 = Convert.ToByte(((Control)textBoxMinute13_S1).Text);
		TimeSchedule.Minute14 = Convert.ToByte(((Control)textBoxMinute14_S1).Text);
		TimeSchedule.Hour1 = Convert.ToByte(((Control)textBoxHour1_S1).Text);
		TimeSchedule.Hour2 = Convert.ToByte(((Control)textBoxHour2_S1).Text);
		TimeSchedule.Hour3 = Convert.ToByte(((Control)textBoxHour3_S1).Text);
		TimeSchedule.Hour4 = Convert.ToByte(((Control)textBoxHour4_S1).Text);
		TimeSchedule.Hour5 = Convert.ToByte(((Control)textBoxHour5_S1).Text);
		TimeSchedule.Hour6 = Convert.ToByte(((Control)textBoxHour6_S1).Text);
		TimeSchedule.Hour7 = Convert.ToByte(((Control)textBoxHour7_S1).Text);
		TimeSchedule.Hour8 = Convert.ToByte(((Control)textBoxHour8_S1).Text);
		TimeSchedule.Hour9 = Convert.ToByte(((Control)textBoxHour9_S1).Text);
		TimeSchedule.Hour10 = Convert.ToByte(((Control)textBoxHour10_S1).Text);
		TimeSchedule.Hour11 = Convert.ToByte(((Control)textBoxHour11_S1).Text);
		TimeSchedule.Hour12 = Convert.ToByte(((Control)textBoxHour12_S1).Text);
		TimeSchedule.Hour13 = Convert.ToByte(((Control)textBoxHour13_S1).Text);
		TimeSchedule.Hour14 = Convert.ToByte(((Control)textBoxHour14_S1).Text);
	}

	private int CheckTimeScheSet1()
	{
		int num = 0;
		int num2 = 0;
		int[] array = new int[28];
		if (((Control)textBoxMinute1_S1).Text.Trim() == "" || ((Control)textBoxHour1_S1).Text.Trim() == "" || ((Control)textBoxMinute2_S1).Text.Trim() == "" || ((Control)textBoxHour2_S1).Text.Trim() == "" || ((Control)textBoxMinute3_S1).Text.Trim() == "" || ((Control)textBoxHour3_S1).Text.Trim() == "" || ((Control)textBoxMinute4_S1).Text.Trim() == "" || ((Control)textBoxHour4_S1).Text.Trim() == "" || ((Control)textBoxMinute5_S1).Text.Trim() == "" || ((Control)textBoxHour5_S1).Text.Trim() == "" || ((Control)textBoxMinute6_S1).Text.Trim() == "" || ((Control)textBoxHour6_S1).Text.Trim() == "" || ((Control)textBoxMinute7_S1).Text.Trim() == "" || ((Control)textBoxHour7_S1).Text.Trim() == "" || ((Control)textBoxMinute8_S1).Text.Trim() == "" || ((Control)textBoxHour8_S1).Text.Trim() == "" || ((Control)textBoxMinute9_S1).Text.Trim() == "" || ((Control)textBoxHour9_S1).Text.Trim() == "" || ((Control)textBoxMinute10_S1).Text.Trim() == "" || ((Control)textBoxHour10_S1).Text.Trim() == "" || ((Control)textBoxMinute11_S1).Text.Trim() == "" || ((Control)textBoxHour11_S1).Text.Trim() == "" || ((Control)textBoxMinute12_S1).Text.Trim() == "" || ((Control)textBoxHour12_S1).Text.Trim() == "" || ((Control)textBoxMinute13_S1).Text.Trim() == "" || ((Control)textBoxHour13_S1).Text.Trim() == "" || ((Control)textBoxMinute14_S1).Text.Trim() == "" || ((Control)textBoxHour14_S1).Text.Trim() == "")
		{
			return 1;
		}
		string text = ((Control)textBoxMinute1_S1).Text.Trim();
		foreach (char c in text)
		{
			if (c < '0' || c > '9')
			{
				num2++;
			}
		}
		string text2 = ((Control)textBoxHour1_S1).Text.Trim();
		foreach (char c2 in text2)
		{
			if (c2 < '0' || c2 > '9')
			{
				num2++;
			}
		}
		string text3 = ((Control)textBoxMinute2_S1).Text.Trim();
		foreach (char c3 in text3)
		{
			if (c3 < '0' || c3 > '9')
			{
				num2++;
			}
		}
		string text4 = ((Control)textBoxHour2_S1).Text.Trim();
		foreach (char c4 in text4)
		{
			if (c4 < '0' || c4 > '9')
			{
				num2++;
			}
		}
		string text5 = ((Control)textBoxMinute3_S1).Text.Trim();
		foreach (char c5 in text5)
		{
			if (c5 < '0' || c5 > '9')
			{
				num2++;
			}
		}
		string text6 = ((Control)textBoxHour3_S1).Text.Trim();
		foreach (char c6 in text6)
		{
			if (c6 < '0' || c6 > '9')
			{
				num2++;
			}
		}
		string text7 = ((Control)textBoxMinute4_S1).Text.Trim();
		foreach (char c7 in text7)
		{
			if (c7 < '0' || c7 > '9')
			{
				num2++;
			}
		}
		string text8 = ((Control)textBoxHour4_S1).Text.Trim();
		foreach (char c8 in text8)
		{
			if (c8 < '0' || c8 > '9')
			{
				num2++;
			}
		}
		string text9 = ((Control)textBoxMinute5_S1).Text.Trim();
		foreach (char c9 in text9)
		{
			if (c9 < '0' || c9 > '9')
			{
				num2++;
			}
		}
		string text10 = ((Control)textBoxHour5_S1).Text.Trim();
		foreach (char c10 in text10)
		{
			if (c10 < '0' || c10 > '9')
			{
				num2++;
			}
		}
		string text11 = ((Control)textBoxMinute6_S1).Text.Trim();
		foreach (char c11 in text11)
		{
			if (c11 < '0' || c11 > '9')
			{
				num2++;
			}
		}
		string text12 = ((Control)textBoxHour6_S1).Text.Trim();
		foreach (char c12 in text12)
		{
			if (c12 < '0' || c12 > '9')
			{
				num2++;
			}
		}
		string text13 = ((Control)textBoxMinute7_S1).Text.Trim();
		foreach (char c13 in text13)
		{
			if (c13 < '0' || c13 > '9')
			{
				num2++;
			}
		}
		string text14 = ((Control)textBoxHour7_S1).Text.Trim();
		foreach (char c14 in text14)
		{
			if (c14 < '0' || c14 > '9')
			{
				num2++;
			}
		}
		string text15 = ((Control)textBoxMinute8_S1).Text.Trim();
		foreach (char c15 in text15)
		{
			if (c15 < '0' || c15 > '9')
			{
				num2++;
			}
		}
		string text16 = ((Control)textBoxHour8_S1).Text.Trim();
		foreach (char c16 in text16)
		{
			if (c16 < '0' || c16 > '9')
			{
				num2++;
			}
		}
		string text17 = ((Control)textBoxMinute9_S1).Text.Trim();
		foreach (char c17 in text17)
		{
			if (c17 < '0' || c17 > '9')
			{
				num2++;
			}
		}
		string text18 = ((Control)textBoxHour9_S1).Text.Trim();
		foreach (char c18 in text18)
		{
			if (c18 < '0' || c18 > '9')
			{
				num2++;
			}
		}
		string text19 = ((Control)textBoxMinute10_S1).Text.Trim();
		foreach (char c19 in text19)
		{
			if (c19 < '0' || c19 > '9')
			{
				num2++;
			}
		}
		string text20 = ((Control)textBoxHour10_S1).Text.Trim();
		foreach (char c20 in text20)
		{
			if (c20 < '0' || c20 > '9')
			{
				num2++;
			}
		}
		string text21 = ((Control)textBoxMinute11_S1).Text.Trim();
		foreach (char c21 in text21)
		{
			if (c21 < '0' || c21 > '9')
			{
				num2++;
			}
		}
		string text22 = ((Control)textBoxHour11_S1).Text.Trim();
		foreach (char c22 in text22)
		{
			if (c22 < '0' || c22 > '9')
			{
				num2++;
			}
		}
		string text23 = ((Control)textBoxMinute12_S1).Text.Trim();
		foreach (char c23 in text23)
		{
			if (c23 < '0' || c23 > '9')
			{
				num2++;
			}
		}
		string text24 = ((Control)textBoxHour12_S1).Text.Trim();
		foreach (char c24 in text24)
		{
			if (c24 < '0' || c24 > '9')
			{
				num2++;
			}
		}
		string text25 = ((Control)textBoxMinute13_S1).Text.Trim();
		foreach (char c25 in text25)
		{
			if (c25 < '0' || c25 > '9')
			{
				num2++;
			}
		}
		string text26 = ((Control)textBoxHour13_S1).Text.Trim();
		foreach (char c26 in text26)
		{
			if (c26 < '0' || c26 > '9')
			{
				num2++;
			}
		}
		string text27 = ((Control)textBoxMinute14_S1).Text.Trim();
		foreach (char c27 in text27)
		{
			if (c27 < '0' || c27 > '9')
			{
				num2++;
			}
		}
		string text28 = ((Control)textBoxHour14_S1).Text.Trim();
		foreach (char c28 in text28)
		{
			if (c28 < '0' || c28 > '9')
			{
				num2++;
			}
		}
		if (num2 > 0)
		{
			return 2;
		}
		array[0] = Convert.ToInt16(((Control)textBoxMinute1_S1).Text);
		array[1] = Convert.ToInt16(((Control)textBoxMinute2_S1).Text);
		array[2] = Convert.ToInt16(((Control)textBoxMinute3_S1).Text);
		array[3] = Convert.ToInt16(((Control)textBoxMinute4_S1).Text);
		array[4] = Convert.ToInt16(((Control)textBoxMinute5_S1).Text);
		array[5] = Convert.ToInt16(((Control)textBoxMinute6_S1).Text);
		array[6] = Convert.ToInt16(((Control)textBoxMinute7_S1).Text);
		array[7] = Convert.ToInt16(((Control)textBoxMinute8_S1).Text);
		array[8] = Convert.ToInt16(((Control)textBoxMinute9_S1).Text);
		array[9] = Convert.ToInt16(((Control)textBoxMinute10_S1).Text);
		array[10] = Convert.ToInt16(((Control)textBoxMinute11_S1).Text);
		array[11] = Convert.ToInt16(((Control)textBoxMinute12_S1).Text);
		array[12] = Convert.ToInt16(((Control)textBoxMinute13_S1).Text);
		array[13] = Convert.ToInt16(((Control)textBoxMinute14_S1).Text);
		array[14] = Convert.ToInt16(((Control)textBoxHour1_S1).Text);
		array[15] = Convert.ToInt16(((Control)textBoxHour2_S1).Text);
		array[16] = Convert.ToInt16(((Control)textBoxHour3_S1).Text);
		array[17] = Convert.ToInt16(((Control)textBoxHour4_S1).Text);
		array[18] = Convert.ToInt16(((Control)textBoxHour5_S1).Text);
		array[19] = Convert.ToInt16(((Control)textBoxHour6_S1).Text);
		array[20] = Convert.ToInt16(((Control)textBoxHour7_S1).Text);
		array[21] = Convert.ToInt16(((Control)textBoxHour8_S1).Text);
		array[22] = Convert.ToInt16(((Control)textBoxHour9_S1).Text);
		array[23] = Convert.ToInt16(((Control)textBoxHour10_S1).Text);
		array[24] = Convert.ToInt16(((Control)textBoxHour11_S1).Text);
		array[25] = Convert.ToInt16(((Control)textBoxHour12_S1).Text);
		array[26] = Convert.ToInt16(((Control)textBoxHour13_S1).Text);
		array[27] = Convert.ToInt16(((Control)textBoxHour14_S1).Text);
		for (int num25 = 0; num25 < 14; num25++)
		{
			if (array[num25] > 59)
			{
				return 3;
			}
		}
		for (int num26 = 0; num26 < 14; num26++)
		{
			if (array[num26 + 14] > 23)
			{
				return 4;
			}
		}
		return 0;
	}

	private void buttonSetSched1_Click(object sender, EventArgs e)
	{
		//IL_0323: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_004a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0065: Unknown result type (might be due to invalid IL or missing references)
		//IL_0080: Unknown result type (might be due to invalid IL or missing references)
		//IL_036d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0344: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		if (!CheckAddr())
		{
			return;
		}
		switch (CheckTimeScheSet1())
		{
		case 2:
			MessageBox.Show("请确认输入的时段表不包含其他字符！");
			return;
		case 1:
			MessageBox.Show("请确认已输入时段表！");
			return;
		case 3:
			MessageBox.Show("请确认已输入正确的分钟！");
			return;
		case 4:
			MessageBox.Show("请确认已输入正确的时间！");
			return;
		}
		GetTimeSche1();
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[51];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 20;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 6;
		}
		else
		{
			array[2] = 32;
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 21;
		array[6] = 42;
		array[7] = TimeSchedule.Price1;
		array[8] = TimeSchedule.Minute1;
		array[9] = TimeSchedule.Hour1;
		array[10] = TimeSchedule.Price2;
		array[11] = TimeSchedule.Minute2;
		array[12] = TimeSchedule.Hour2;
		array[13] = TimeSchedule.Price3;
		array[14] = TimeSchedule.Minute3;
		array[15] = TimeSchedule.Hour3;
		array[16] = TimeSchedule.Price4;
		array[17] = TimeSchedule.Minute4;
		array[18] = TimeSchedule.Hour4;
		array[19] = TimeSchedule.Price5;
		array[20] = TimeSchedule.Minute5;
		array[21] = TimeSchedule.Hour5;
		array[22] = TimeSchedule.Price6;
		array[23] = TimeSchedule.Minute6;
		array[24] = TimeSchedule.Hour6;
		array[25] = TimeSchedule.Price7;
		array[26] = TimeSchedule.Minute7;
		array[27] = TimeSchedule.Hour7;
		array[28] = TimeSchedule.Price8;
		array[29] = TimeSchedule.Minute8;
		array[30] = TimeSchedule.Hour8;
		array[31] = TimeSchedule.Price9;
		array[32] = TimeSchedule.Minute9;
		array[33] = TimeSchedule.Hour9;
		array[34] = TimeSchedule.Price10;
		array[35] = TimeSchedule.Minute10;
		array[36] = TimeSchedule.Hour10;
		array[37] = TimeSchedule.Price11;
		array[38] = TimeSchedule.Minute11;
		array[39] = TimeSchedule.Hour11;
		array[40] = TimeSchedule.Price12;
		array[41] = TimeSchedule.Minute12;
		array[42] = TimeSchedule.Hour12;
		array[43] = TimeSchedule.Price13;
		array[44] = TimeSchedule.Minute13;
		array[45] = TimeSchedule.Hour13;
		array[46] = TimeSchedule.Price14;
		array[47] = TimeSchedule.Minute14;
		array[48] = TimeSchedule.Hour14;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void GetTimeSche2()
	{
		TimeSchedule.Price1 = (byte)((ListControl)comboBoxCharge1_S2).SelectedIndex;
		if (TimeSchedule.Price1 == byte.MaxValue)
		{
			TimeSchedule.Price1 = 0;
		}
		TimeSchedule.Price2 = (byte)((ListControl)comboBoxCharge2_S2).SelectedIndex;
		if (TimeSchedule.Price2 == byte.MaxValue)
		{
			TimeSchedule.Price2 = 0;
		}
		TimeSchedule.Price3 = (byte)((ListControl)comboBoxCharge3_S2).SelectedIndex;
		if (TimeSchedule.Price3 == byte.MaxValue)
		{
			TimeSchedule.Price3 = 0;
		}
		TimeSchedule.Price4 = (byte)((ListControl)comboBoxCharge4_S2).SelectedIndex;
		if (TimeSchedule.Price4 == byte.MaxValue)
		{
			TimeSchedule.Price4 = 0;
		}
		TimeSchedule.Price5 = (byte)((ListControl)comboBoxCharge5_S2).SelectedIndex;
		if (TimeSchedule.Price5 == byte.MaxValue)
		{
			TimeSchedule.Price5 = 0;
		}
		TimeSchedule.Price6 = (byte)((ListControl)comboBoxCharge6_S2).SelectedIndex;
		if (TimeSchedule.Price6 == byte.MaxValue)
		{
			TimeSchedule.Price6 = 0;
		}
		TimeSchedule.Price7 = (byte)((ListControl)comboBoxCharge7_S2).SelectedIndex;
		if (TimeSchedule.Price7 == byte.MaxValue)
		{
			TimeSchedule.Price7 = 0;
		}
		TimeSchedule.Price8 = (byte)((ListControl)comboBoxCharge8_S2).SelectedIndex;
		if (TimeSchedule.Price8 == byte.MaxValue)
		{
			TimeSchedule.Price8 = 0;
		}
		TimeSchedule.Price9 = (byte)((ListControl)comboBoxCharge9_S2).SelectedIndex;
		if (TimeSchedule.Price9 == byte.MaxValue)
		{
			TimeSchedule.Price9 = 0;
		}
		TimeSchedule.Price10 = (byte)((ListControl)comboBoxCharge10_S2).SelectedIndex;
		if (TimeSchedule.Price10 == byte.MaxValue)
		{
			TimeSchedule.Price10 = 0;
		}
		TimeSchedule.Price11 = (byte)((ListControl)comboBoxCharge11_S2).SelectedIndex;
		if (TimeSchedule.Price11 == byte.MaxValue)
		{
			TimeSchedule.Price11 = 0;
		}
		TimeSchedule.Price12 = (byte)((ListControl)comboBoxCharge12_S2).SelectedIndex;
		if (TimeSchedule.Price12 == byte.MaxValue)
		{
			TimeSchedule.Price12 = 0;
		}
		TimeSchedule.Price13 = (byte)((ListControl)comboBoxCharge13_S2).SelectedIndex;
		if (TimeSchedule.Price13 == byte.MaxValue)
		{
			TimeSchedule.Price13 = 0;
		}
		TimeSchedule.Price14 = (byte)((ListControl)comboBoxCharge14_S2).SelectedIndex;
		if (TimeSchedule.Price14 == byte.MaxValue)
		{
			TimeSchedule.Price14 = 0;
		}
		TimeSchedule.Minute1 = Convert.ToByte(((Control)textBoxMinute1_S2).Text);
		TimeSchedule.Minute2 = Convert.ToByte(((Control)textBoxMinute2_S2).Text);
		TimeSchedule.Minute3 = Convert.ToByte(((Control)textBoxMinute3_S2).Text);
		TimeSchedule.Minute4 = Convert.ToByte(((Control)textBoxMinute4_S2).Text);
		TimeSchedule.Minute5 = Convert.ToByte(((Control)textBoxMinute5_S2).Text);
		TimeSchedule.Minute6 = Convert.ToByte(((Control)textBoxMinute6_S2).Text);
		TimeSchedule.Minute7 = Convert.ToByte(((Control)textBoxMinute7_S2).Text);
		TimeSchedule.Minute8 = Convert.ToByte(((Control)textBoxMinute8_S2).Text);
		TimeSchedule.Minute9 = Convert.ToByte(((Control)textBoxMinute9_S2).Text);
		TimeSchedule.Minute10 = Convert.ToByte(((Control)textBoxMinute10_S2).Text);
		TimeSchedule.Minute11 = Convert.ToByte(((Control)textBoxMinute11_S2).Text);
		TimeSchedule.Minute12 = Convert.ToByte(((Control)textBoxMinute12_S2).Text);
		TimeSchedule.Minute13 = Convert.ToByte(((Control)textBoxMinute13_S2).Text);
		TimeSchedule.Minute14 = Convert.ToByte(((Control)textBoxMinute14_S2).Text);
		TimeSchedule.Hour1 = Convert.ToByte(((Control)textBoxHour1_S2).Text);
		TimeSchedule.Hour2 = Convert.ToByte(((Control)textBoxHour2_S2).Text);
		TimeSchedule.Hour3 = Convert.ToByte(((Control)textBoxHour3_S2).Text);
		TimeSchedule.Hour4 = Convert.ToByte(((Control)textBoxHour4_S2).Text);
		TimeSchedule.Hour5 = Convert.ToByte(((Control)textBoxHour5_S2).Text);
		TimeSchedule.Hour6 = Convert.ToByte(((Control)textBoxHour6_S2).Text);
		TimeSchedule.Hour7 = Convert.ToByte(((Control)textBoxHour7_S2).Text);
		TimeSchedule.Hour8 = Convert.ToByte(((Control)textBoxHour8_S2).Text);
		TimeSchedule.Hour9 = Convert.ToByte(((Control)textBoxHour9_S2).Text);
		TimeSchedule.Hour10 = Convert.ToByte(((Control)textBoxHour10_S2).Text);
		TimeSchedule.Hour11 = Convert.ToByte(((Control)textBoxHour11_S2).Text);
		TimeSchedule.Hour12 = Convert.ToByte(((Control)textBoxHour12_S2).Text);
		TimeSchedule.Hour13 = Convert.ToByte(((Control)textBoxHour13_S2).Text);
		TimeSchedule.Hour14 = Convert.ToByte(((Control)textBoxHour14_S2).Text);
	}

	private int CheckTimeScheSet2()
	{
		int num = 0;
		int num2 = 0;
		int[] array = new int[28];
		if (((Control)textBoxMinute1_S2).Text.Trim() == "" || ((Control)textBoxHour1_S2).Text.Trim() == "" || ((Control)textBoxMinute2_S2).Text.Trim() == "" || ((Control)textBoxHour2_S2).Text.Trim() == "" || ((Control)textBoxMinute3_S2).Text.Trim() == "" || ((Control)textBoxHour3_S2).Text.Trim() == "" || ((Control)textBoxMinute4_S2).Text.Trim() == "" || ((Control)textBoxHour4_S2).Text.Trim() == "" || ((Control)textBoxMinute5_S2).Text.Trim() == "" || ((Control)textBoxHour5_S2).Text.Trim() == "" || ((Control)textBoxMinute6_S2).Text.Trim() == "" || ((Control)textBoxHour6_S2).Text.Trim() == "" || ((Control)textBoxMinute7_S2).Text.Trim() == "" || ((Control)textBoxHour7_S2).Text.Trim() == "" || ((Control)textBoxMinute8_S2).Text.Trim() == "" || ((Control)textBoxHour8_S2).Text.Trim() == "" || ((Control)textBoxMinute9_S2).Text.Trim() == "" || ((Control)textBoxHour9_S2).Text.Trim() == "" || ((Control)textBoxMinute10_S2).Text.Trim() == "" || ((Control)textBoxHour10_S2).Text.Trim() == "" || ((Control)textBoxMinute11_S2).Text.Trim() == "" || ((Control)textBoxHour11_S2).Text.Trim() == "" || ((Control)textBoxMinute12_S2).Text.Trim() == "" || ((Control)textBoxHour12_S2).Text.Trim() == "" || ((Control)textBoxMinute13_S2).Text.Trim() == "" || ((Control)textBoxHour13_S2).Text.Trim() == "" || ((Control)textBoxMinute14_S2).Text.Trim() == "" || ((Control)textBoxHour14_S2).Text.Trim() == "")
		{
			return 1;
		}
		string text = ((Control)textBoxMinute1_S2).Text.Trim();
		foreach (char c in text)
		{
			if (c < '0' || c > '9')
			{
				num2++;
			}
		}
		string text2 = ((Control)textBoxHour1_S2).Text.Trim();
		foreach (char c2 in text2)
		{
			if (c2 < '0' || c2 > '9')
			{
				num2++;
			}
		}
		string text3 = ((Control)textBoxMinute2_S2).Text.Trim();
		foreach (char c3 in text3)
		{
			if (c3 < '0' || c3 > '9')
			{
				num2++;
			}
		}
		string text4 = ((Control)textBoxHour2_S2).Text.Trim();
		foreach (char c4 in text4)
		{
			if (c4 < '0' || c4 > '9')
			{
				num2++;
			}
		}
		string text5 = ((Control)textBoxMinute3_S2).Text.Trim();
		foreach (char c5 in text5)
		{
			if (c5 < '0' || c5 > '9')
			{
				num2++;
			}
		}
		string text6 = ((Control)textBoxHour3_S2).Text.Trim();
		foreach (char c6 in text6)
		{
			if (c6 < '0' || c6 > '9')
			{
				num2++;
			}
		}
		string text7 = ((Control)textBoxMinute4_S2).Text.Trim();
		foreach (char c7 in text7)
		{
			if (c7 < '0' || c7 > '9')
			{
				num2++;
			}
		}
		string text8 = ((Control)textBoxHour4_S2).Text.Trim();
		foreach (char c8 in text8)
		{
			if (c8 < '0' || c8 > '9')
			{
				num2++;
			}
		}
		string text9 = ((Control)textBoxMinute5_S2).Text.Trim();
		foreach (char c9 in text9)
		{
			if (c9 < '0' || c9 > '9')
			{
				num2++;
			}
		}
		string text10 = ((Control)textBoxHour5_S2).Text.Trim();
		foreach (char c10 in text10)
		{
			if (c10 < '0' || c10 > '9')
			{
				num2++;
			}
		}
		string text11 = ((Control)textBoxMinute6_S2).Text.Trim();
		foreach (char c11 in text11)
		{
			if (c11 < '0' || c11 > '9')
			{
				num2++;
			}
		}
		string text12 = ((Control)textBoxHour6_S2).Text.Trim();
		foreach (char c12 in text12)
		{
			if (c12 < '0' || c12 > '9')
			{
				num2++;
			}
		}
		string text13 = ((Control)textBoxMinute7_S2).Text.Trim();
		foreach (char c13 in text13)
		{
			if (c13 < '0' || c13 > '9')
			{
				num2++;
			}
		}
		string text14 = ((Control)textBoxHour7_S2).Text.Trim();
		foreach (char c14 in text14)
		{
			if (c14 < '0' || c14 > '9')
			{
				num2++;
			}
		}
		string text15 = ((Control)textBoxMinute8_S2).Text.Trim();
		foreach (char c15 in text15)
		{
			if (c15 < '0' || c15 > '9')
			{
				num2++;
			}
		}
		string text16 = ((Control)textBoxHour8_S2).Text.Trim();
		foreach (char c16 in text16)
		{
			if (c16 < '0' || c16 > '9')
			{
				num2++;
			}
		}
		string text17 = ((Control)textBoxMinute9_S2).Text.Trim();
		foreach (char c17 in text17)
		{
			if (c17 < '0' || c17 > '9')
			{
				num2++;
			}
		}
		string text18 = ((Control)textBoxHour9_S2).Text.Trim();
		foreach (char c18 in text18)
		{
			if (c18 < '0' || c18 > '9')
			{
				num2++;
			}
		}
		string text19 = ((Control)textBoxMinute10_S2).Text.Trim();
		foreach (char c19 in text19)
		{
			if (c19 < '0' || c19 > '9')
			{
				num2++;
			}
		}
		string text20 = ((Control)textBoxHour10_S2).Text.Trim();
		foreach (char c20 in text20)
		{
			if (c20 < '0' || c20 > '9')
			{
				num2++;
			}
		}
		string text21 = ((Control)textBoxMinute11_S2).Text.Trim();
		foreach (char c21 in text21)
		{
			if (c21 < '0' || c21 > '9')
			{
				num2++;
			}
		}
		string text22 = ((Control)textBoxHour11_S2).Text.Trim();
		foreach (char c22 in text22)
		{
			if (c22 < '0' || c22 > '9')
			{
				num2++;
			}
		}
		string text23 = ((Control)textBoxMinute12_S2).Text.Trim();
		foreach (char c23 in text23)
		{
			if (c23 < '0' || c23 > '9')
			{
				num2++;
			}
		}
		string text24 = ((Control)textBoxHour12_S2).Text.Trim();
		foreach (char c24 in text24)
		{
			if (c24 < '0' || c24 > '9')
			{
				num2++;
			}
		}
		string text25 = ((Control)textBoxMinute13_S2).Text.Trim();
		foreach (char c25 in text25)
		{
			if (c25 < '0' || c25 > '9')
			{
				num2++;
			}
		}
		string text26 = ((Control)textBoxHour13_S2).Text.Trim();
		foreach (char c26 in text26)
		{
			if (c26 < '0' || c26 > '9')
			{
				num2++;
			}
		}
		string text27 = ((Control)textBoxMinute14_S2).Text.Trim();
		foreach (char c27 in text27)
		{
			if (c27 < '0' || c27 > '9')
			{
				num2++;
			}
		}
		string text28 = ((Control)textBoxHour14_S2).Text.Trim();
		foreach (char c28 in text28)
		{
			if (c28 < '0' || c28 > '9')
			{
				num2++;
			}
		}
		if (num2 > 0)
		{
			return 2;
		}
		array[0] = Convert.ToInt16(((Control)textBoxMinute1_S2).Text);
		array[1] = Convert.ToInt16(((Control)textBoxMinute2_S2).Text);
		array[2] = Convert.ToInt16(((Control)textBoxMinute3_S2).Text);
		array[3] = Convert.ToInt16(((Control)textBoxMinute4_S2).Text);
		array[4] = Convert.ToInt16(((Control)textBoxMinute5_S2).Text);
		array[5] = Convert.ToInt16(((Control)textBoxMinute6_S2).Text);
		array[6] = Convert.ToInt16(((Control)textBoxMinute7_S2).Text);
		array[7] = Convert.ToInt16(((Control)textBoxMinute8_S2).Text);
		array[8] = Convert.ToInt16(((Control)textBoxMinute9_S2).Text);
		array[9] = Convert.ToInt16(((Control)textBoxMinute10_S2).Text);
		array[10] = Convert.ToInt16(((Control)textBoxMinute11_S2).Text);
		array[11] = Convert.ToInt16(((Control)textBoxMinute12_S2).Text);
		array[12] = Convert.ToInt16(((Control)textBoxMinute13_S2).Text);
		array[13] = Convert.ToInt16(((Control)textBoxMinute14_S2).Text);
		array[14] = Convert.ToInt16(((Control)textBoxHour1_S2).Text);
		array[15] = Convert.ToInt16(((Control)textBoxHour2_S2).Text);
		array[16] = Convert.ToInt16(((Control)textBoxHour3_S2).Text);
		array[17] = Convert.ToInt16(((Control)textBoxHour4_S2).Text);
		array[18] = Convert.ToInt16(((Control)textBoxHour5_S2).Text);
		array[19] = Convert.ToInt16(((Control)textBoxHour6_S2).Text);
		array[20] = Convert.ToInt16(((Control)textBoxHour7_S2).Text);
		array[21] = Convert.ToInt16(((Control)textBoxHour8_S2).Text);
		array[22] = Convert.ToInt16(((Control)textBoxHour9_S2).Text);
		array[23] = Convert.ToInt16(((Control)textBoxHour10_S2).Text);
		array[24] = Convert.ToInt16(((Control)textBoxHour11_S2).Text);
		array[25] = Convert.ToInt16(((Control)textBoxHour12_S1).Text);
		array[26] = Convert.ToInt16(((Control)textBoxHour13_S1).Text);
		array[27] = Convert.ToInt16(((Control)textBoxHour14_S1).Text);
		for (int num25 = 0; num25 < 14; num25++)
		{
			if (array[num25] > 59)
			{
				return 3;
			}
		}
		for (int num26 = 0; num26 < 14; num26++)
		{
			if (array[num26 + 14] > 23)
			{
				return 4;
			}
		}
		return 0;
	}

	private void buttonSetSched2_Click(object sender, EventArgs e)
	{
		//IL_032a: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_004a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0065: Unknown result type (might be due to invalid IL or missing references)
		//IL_0080: Unknown result type (might be due to invalid IL or missing references)
		//IL_0374: Unknown result type (might be due to invalid IL or missing references)
		//IL_034b: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		if (!CheckAddr())
		{
			return;
		}
		switch (CheckTimeScheSet2())
		{
		case 2:
			MessageBox.Show("请确认输入的时段表不包含其他字符！");
			return;
		case 1:
			MessageBox.Show("请确认已输入时段表！");
			return;
		case 3:
			MessageBox.Show("请确认已输入正确的分钟！");
			return;
		case 4:
			MessageBox.Show("请确认已输入正确的时间！");
			return;
		}
		GetTimeSche2();
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[51];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 32;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 41;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 27;
		}
		else
		{
			array[2] = 32;
			array[3] = 21;
		}
		array[4] = 0;
		array[5] = 21;
		array[6] = 42;
		array[7] = TimeSchedule.Price1;
		array[8] = TimeSchedule.Minute1;
		array[9] = TimeSchedule.Hour1;
		array[10] = TimeSchedule.Price2;
		array[11] = TimeSchedule.Minute2;
		array[12] = TimeSchedule.Hour2;
		array[13] = TimeSchedule.Price3;
		array[14] = TimeSchedule.Minute3;
		array[15] = TimeSchedule.Hour3;
		array[16] = TimeSchedule.Price4;
		array[17] = TimeSchedule.Minute4;
		array[18] = TimeSchedule.Hour4;
		array[19] = TimeSchedule.Price5;
		array[20] = TimeSchedule.Minute5;
		array[21] = TimeSchedule.Hour5;
		array[22] = TimeSchedule.Price6;
		array[23] = TimeSchedule.Minute6;
		array[24] = TimeSchedule.Hour6;
		array[25] = TimeSchedule.Price7;
		array[26] = TimeSchedule.Minute7;
		array[27] = TimeSchedule.Hour7;
		array[28] = TimeSchedule.Price8;
		array[29] = TimeSchedule.Minute8;
		array[30] = TimeSchedule.Hour8;
		array[31] = TimeSchedule.Price9;
		array[32] = TimeSchedule.Minute9;
		array[33] = TimeSchedule.Hour9;
		array[34] = TimeSchedule.Price10;
		array[35] = TimeSchedule.Minute10;
		array[36] = TimeSchedule.Hour10;
		array[37] = TimeSchedule.Price11;
		array[38] = TimeSchedule.Minute11;
		array[39] = TimeSchedule.Hour11;
		array[40] = TimeSchedule.Price12;
		array[41] = TimeSchedule.Minute12;
		array[42] = TimeSchedule.Hour12;
		array[43] = TimeSchedule.Price13;
		array[44] = TimeSchedule.Minute13;
		array[45] = TimeSchedule.Hour13;
		array[46] = TimeSchedule.Price14;
		array[47] = TimeSchedule.Minute14;
		array[48] = TimeSchedule.Hour14;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private int CheckTimeZoneSet()
	{
		int num = 0;
		int num2 = 0;
		int[] array = new int[8];
		if (((Control)textBoxDay1).Text.Trim() == "" || ((Control)textBoxDay2).Text.Trim() == "" || ((Control)textBoxDay3).Text.Trim() == "" || ((Control)textBoxDay4).Text.Trim() == "" || ((Control)textBoxMonth1).Text.Trim() == "" || ((Control)textBoxMonth2).Text.Trim() == "" || ((Control)textBoxMonth3).Text.Trim() == "" || ((Control)textBoxMonth4).Text.Trim() == "")
		{
			return 1;
		}
		string text = ((Control)textBoxDay1).Text.Trim();
		foreach (char c in text)
		{
			if (c < '0' || c > '9')
			{
				num2++;
			}
		}
		string text2 = ((Control)textBoxDay2).Text.Trim();
		foreach (char c2 in text2)
		{
			if (c2 < '0' || c2 > '9')
			{
				num2++;
			}
		}
		string text3 = ((Control)textBoxDay3).Text.Trim();
		foreach (char c3 in text3)
		{
			if (c3 < '0' || c3 > '9')
			{
				num2++;
			}
		}
		string text4 = ((Control)textBoxDay4).Text.Trim();
		foreach (char c4 in text4)
		{
			if (c4 < '0' || c4 > '9')
			{
				num2++;
			}
		}
		string text5 = ((Control)textBoxMonth1).Text.Trim();
		foreach (char c5 in text5)
		{
			if (c5 < '0' || c5 > '9')
			{
				num2++;
			}
		}
		string text6 = ((Control)textBoxMonth2).Text.Trim();
		foreach (char c6 in text6)
		{
			if (c6 < '0' || c6 > '9')
			{
				num2++;
			}
		}
		string text7 = ((Control)textBoxMonth3).Text.Trim();
		foreach (char c7 in text7)
		{
			if (c7 < '0' || c7 > '9')
			{
				num2++;
			}
		}
		string text8 = ((Control)textBoxMonth4).Text.Trim();
		foreach (char c8 in text8)
		{
			if (c8 < '0' || c8 > '9')
			{
				num2++;
			}
		}
		if (num2 > 0)
		{
			return 2;
		}
		array[0] = Convert.ToInt16(((Control)textBoxDay1).Text);
		array[1] = Convert.ToInt16(((Control)textBoxDay2).Text);
		array[2] = Convert.ToInt16(((Control)textBoxDay3).Text);
		array[3] = Convert.ToInt16(((Control)textBoxDay4).Text);
		array[4] = Convert.ToInt16(((Control)textBoxMonth1).Text);
		array[5] = Convert.ToInt16(((Control)textBoxMonth2).Text);
		array[6] = Convert.ToInt16(((Control)textBoxMonth3).Text);
		array[7] = Convert.ToInt16(((Control)textBoxMonth4).Text);
		for (int num5 = 0; num5 < 4; num5++)
		{
			if (array[num5] > 31)
			{
				return 3;
			}
		}
		for (int num6 = 0; num6 < 4; num6++)
		{
			if (array[num6 + 4] > 12)
			{
				return 4;
			}
		}
		return 0;
	}

	private void GetTimeZone()
	{
		TimeZone.Schedule1 = (byte)((ListControl)comboBoxschedu1).SelectedIndex;
		TimeZone.Schedule2 = (byte)((ListControl)comboBoxschedu2).SelectedIndex;
		TimeZone.Schedule3 = (byte)((ListControl)comboBoxschedu3).SelectedIndex;
		TimeZone.Schedule4 = (byte)((ListControl)comboBoxschedu4).SelectedIndex;
		TimeZone.Day1 = Convert.ToByte(((Control)textBoxDay1).Text);
		TimeZone.Day2 = Convert.ToByte(((Control)textBoxDay2).Text);
		TimeZone.Day3 = Convert.ToByte(((Control)textBoxDay3).Text);
		TimeZone.Day4 = Convert.ToByte(((Control)textBoxDay4).Text);
		TimeZone.Month1 = Convert.ToByte(((Control)textBoxMonth1).Text);
		TimeZone.Month2 = Convert.ToByte(((Control)textBoxMonth2).Text);
		TimeZone.Month3 = Convert.ToByte(((Control)textBoxMonth3).Text);
		TimeZone.Month4 = Convert.ToByte(((Control)textBoxMonth4).Text);
	}

	private void buttonSetTimeZone_Click(object sender, EventArgs e)
	{
		//IL_0214: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_004a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0065: Unknown result type (might be due to invalid IL or missing references)
		//IL_0080: Unknown result type (might be due to invalid IL or missing references)
		//IL_025e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0235: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		if (!CheckAddr())
		{
			return;
		}
		switch (CheckTimeZoneSet())
		{
		case 2:
			MessageBox.Show("请确认输入的时段表不包含其他字符！");
			return;
		case 1:
			MessageBox.Show("请确认已输入时段表！");
			return;
		case 3:
			MessageBox.Show("请确认已输入正确的分钟！");
			return;
		case 4:
			MessageBox.Show("请确认已输入正确的时间！");
			return;
		}
		GetTimeZone();
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[21];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 62;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 0;
		}
		else
		{
			array[2] = 0;
			array[3] = 40;
		}
		array[4] = 0;
		array[5] = 6;
		array[6] = 12;
		array[7] = TimeZone.Schedule1;
		array[8] = TimeZone.Day1;
		array[9] = TimeZone.Month1;
		array[10] = TimeZone.Schedule2;
		array[11] = TimeZone.Day2;
		array[12] = TimeZone.Month2;
		array[13] = TimeZone.Schedule3;
		array[14] = TimeZone.Day3;
		array[15] = TimeZone.Month3;
		array[16] = TimeZone.Schedule4;
		array[17] = TimeZone.Day4;
		array[18] = TimeZone.Month4;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ShowTimeSchedu(byte[] message, int type)
	{
		TimeSchedule.Price1 = message[3];
		TimeSchedule.Minute1 = message[4];
		TimeSchedule.Hour1 = message[5];
		TimeSchedule.Price2 = message[6];
		TimeSchedule.Minute2 = message[7];
		TimeSchedule.Hour2 = message[8];
		TimeSchedule.Price3 = message[9];
		TimeSchedule.Minute3 = message[10];
		TimeSchedule.Hour3 = message[11];
		TimeSchedule.Price4 = message[12];
		TimeSchedule.Minute4 = message[13];
		TimeSchedule.Hour4 = message[14];
		TimeSchedule.Price5 = message[15];
		TimeSchedule.Minute5 = message[16];
		TimeSchedule.Hour5 = message[17];
		TimeSchedule.Price6 = message[18];
		TimeSchedule.Minute6 = message[19];
		TimeSchedule.Hour6 = message[20];
		TimeSchedule.Price7 = message[21];
		TimeSchedule.Minute7 = message[22];
		TimeSchedule.Hour7 = message[23];
		TimeSchedule.Price8 = message[24];
		TimeSchedule.Minute8 = message[25];
		TimeSchedule.Hour8 = message[26];
		TimeSchedule.Price9 = message[27];
		TimeSchedule.Minute9 = message[28];
		TimeSchedule.Hour9 = message[29];
		TimeSchedule.Price10 = message[30];
		TimeSchedule.Minute10 = message[31];
		TimeSchedule.Hour10 = message[32];
		TimeSchedule.Price11 = message[33];
		TimeSchedule.Minute11 = message[34];
		TimeSchedule.Hour11 = message[35];
		TimeSchedule.Price12 = message[36];
		TimeSchedule.Minute12 = message[37];
		TimeSchedule.Hour12 = message[38];
		TimeSchedule.Price13 = message[39];
		TimeSchedule.Minute13 = message[40];
		TimeSchedule.Hour13 = message[41];
		TimeSchedule.Price14 = message[42];
		TimeSchedule.Minute14 = message[43];
		TimeSchedule.Hour14 = message[44];
		if (type == 1)
		{
			((ListControl)comboBoxCharge1_S1).SelectedIndex = TimeSchedule.Price1;
			((ListControl)comboBoxCharge2_S1).SelectedIndex = TimeSchedule.Price2;
			((ListControl)comboBoxCharge3_S1).SelectedIndex = TimeSchedule.Price3;
			((ListControl)comboBoxCharge4_S1).SelectedIndex = TimeSchedule.Price4;
			((ListControl)comboBoxCharge5_S1).SelectedIndex = TimeSchedule.Price5;
			((ListControl)comboBoxCharge6_S1).SelectedIndex = TimeSchedule.Price6;
			((ListControl)comboBoxCharge7_S1).SelectedIndex = TimeSchedule.Price7;
			((ListControl)comboBoxCharge8_S1).SelectedIndex = TimeSchedule.Price8;
			((ListControl)comboBoxCharge9_S1).SelectedIndex = TimeSchedule.Price9;
			((ListControl)comboBoxCharge10_S1).SelectedIndex = TimeSchedule.Price10;
			((ListControl)comboBoxCharge11_S1).SelectedIndex = TimeSchedule.Price11;
			((ListControl)comboBoxCharge12_S1).SelectedIndex = TimeSchedule.Price12;
			((ListControl)comboBoxCharge13_S1).SelectedIndex = TimeSchedule.Price13;
			((ListControl)comboBoxCharge14_S1).SelectedIndex = TimeSchedule.Price14;
			((Control)textBoxMinute1_S1).Text = TimeSchedule.Minute1.ToString();
			((Control)textBoxMinute2_S1).Text = TimeSchedule.Minute2.ToString();
			((Control)textBoxMinute3_S1).Text = TimeSchedule.Minute3.ToString();
			((Control)textBoxMinute4_S1).Text = TimeSchedule.Minute4.ToString();
			((Control)textBoxMinute5_S1).Text = TimeSchedule.Minute5.ToString();
			((Control)textBoxMinute6_S1).Text = TimeSchedule.Minute6.ToString();
			((Control)textBoxMinute7_S1).Text = TimeSchedule.Minute7.ToString();
			((Control)textBoxMinute8_S1).Text = TimeSchedule.Minute8.ToString();
			((Control)textBoxMinute9_S1).Text = TimeSchedule.Minute9.ToString();
			((Control)textBoxMinute10_S1).Text = TimeSchedule.Minute10.ToString();
			((Control)textBoxMinute11_S1).Text = TimeSchedule.Minute11.ToString();
			((Control)textBoxMinute12_S1).Text = TimeSchedule.Minute12.ToString();
			((Control)textBoxMinute13_S1).Text = TimeSchedule.Minute13.ToString();
			((Control)textBoxMinute14_S1).Text = TimeSchedule.Minute14.ToString();
			((Control)textBoxHour1_S1).Text = TimeSchedule.Hour1.ToString();
			((Control)textBoxHour2_S1).Text = TimeSchedule.Hour2.ToString();
			((Control)textBoxHour3_S1).Text = TimeSchedule.Hour3.ToString();
			((Control)textBoxHour4_S1).Text = TimeSchedule.Hour4.ToString();
			((Control)textBoxHour5_S1).Text = TimeSchedule.Hour5.ToString();
			((Control)textBoxHour6_S1).Text = TimeSchedule.Hour6.ToString();
			((Control)textBoxHour7_S1).Text = TimeSchedule.Hour7.ToString();
			((Control)textBoxHour8_S1).Text = TimeSchedule.Hour8.ToString();
			((Control)textBoxHour9_S1).Text = TimeSchedule.Hour9.ToString();
			((Control)textBoxHour10_S1).Text = TimeSchedule.Hour10.ToString();
			((Control)textBoxHour11_S1).Text = TimeSchedule.Hour11.ToString();
			((Control)textBoxHour12_S1).Text = TimeSchedule.Hour12.ToString();
			((Control)textBoxHour13_S1).Text = TimeSchedule.Hour13.ToString();
			((Control)textBoxHour14_S1).Text = TimeSchedule.Hour14.ToString();
		}
		else
		{
			((ListControl)comboBoxCharge1_S2).SelectedIndex = TimeSchedule.Price1;
			((ListControl)comboBoxCharge2_S2).SelectedIndex = TimeSchedule.Price2;
			((ListControl)comboBoxCharge3_S2).SelectedIndex = TimeSchedule.Price3;
			((ListControl)comboBoxCharge4_S2).SelectedIndex = TimeSchedule.Price4;
			((ListControl)comboBoxCharge5_S2).SelectedIndex = TimeSchedule.Price5;
			((ListControl)comboBoxCharge6_S2).SelectedIndex = TimeSchedule.Price6;
			((ListControl)comboBoxCharge7_S2).SelectedIndex = TimeSchedule.Price7;
			((ListControl)comboBoxCharge8_S2).SelectedIndex = TimeSchedule.Price8;
			((ListControl)comboBoxCharge9_S2).SelectedIndex = TimeSchedule.Price9;
			((ListControl)comboBoxCharge10_S2).SelectedIndex = TimeSchedule.Price10;
			((ListControl)comboBoxCharge11_S2).SelectedIndex = TimeSchedule.Price11;
			((ListControl)comboBoxCharge12_S2).SelectedIndex = TimeSchedule.Price12;
			((ListControl)comboBoxCharge13_S2).SelectedIndex = TimeSchedule.Price13;
			((ListControl)comboBoxCharge14_S2).SelectedIndex = TimeSchedule.Price14;
			((Control)textBoxMinute1_S2).Text = TimeSchedule.Minute1.ToString();
			((Control)textBoxMinute2_S2).Text = TimeSchedule.Minute2.ToString();
			((Control)textBoxMinute3_S2).Text = TimeSchedule.Minute3.ToString();
			((Control)textBoxMinute4_S2).Text = TimeSchedule.Minute4.ToString();
			((Control)textBoxMinute5_S2).Text = TimeSchedule.Minute5.ToString();
			((Control)textBoxMinute6_S2).Text = TimeSchedule.Minute6.ToString();
			((Control)textBoxMinute7_S2).Text = TimeSchedule.Minute7.ToString();
			((Control)textBoxMinute8_S2).Text = TimeSchedule.Minute8.ToString();
			((Control)textBoxMinute9_S2).Text = TimeSchedule.Minute9.ToString();
			((Control)textBoxMinute10_S2).Text = TimeSchedule.Minute10.ToString();
			((Control)textBoxMinute11_S2).Text = TimeSchedule.Minute11.ToString();
			((Control)textBoxMinute12_S2).Text = TimeSchedule.Minute12.ToString();
			((Control)textBoxMinute13_S2).Text = TimeSchedule.Minute13.ToString();
			((Control)textBoxMinute14_S2).Text = TimeSchedule.Minute14.ToString();
			((Control)textBoxHour1_S2).Text = TimeSchedule.Hour1.ToString();
			((Control)textBoxHour2_S2).Text = TimeSchedule.Hour2.ToString();
			((Control)textBoxHour3_S2).Text = TimeSchedule.Hour3.ToString();
			((Control)textBoxHour4_S2).Text = TimeSchedule.Hour4.ToString();
			((Control)textBoxHour5_S2).Text = TimeSchedule.Hour5.ToString();
			((Control)textBoxHour6_S2).Text = TimeSchedule.Hour6.ToString();
			((Control)textBoxHour7_S2).Text = TimeSchedule.Hour7.ToString();
			((Control)textBoxHour8_S2).Text = TimeSchedule.Hour8.ToString();
			((Control)textBoxHour9_S2).Text = TimeSchedule.Hour9.ToString();
			((Control)textBoxHour10_S2).Text = TimeSchedule.Hour10.ToString();
			((Control)textBoxHour11_S2).Text = TimeSchedule.Hour11.ToString();
			((Control)textBoxHour12_S2).Text = TimeSchedule.Hour12.ToString();
			((Control)textBoxHour13_S2).Text = TimeSchedule.Hour13.ToString();
			((Control)textBoxHour14_S2).Text = TimeSchedule.Hour14.ToString();
		}
	}

	private void buttonReadSched1_Click(object sender, EventArgs e)
	{
		//IL_0112: Unknown result type (might be due to invalid IL or missing references)
		//IL_0165: Unknown result type (might be due to invalid IL or missing references)
		//IL_0133: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[52];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 20;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 6;
		}
		else
		{
			array[2] = 32;
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 21;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			ShowTimeSchedu(response, 1);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取失败！");
		}
	}

	private void buttonReadSched2_Click(object sender, EventArgs e)
	{
		//IL_0119: Unknown result type (might be due to invalid IL or missing references)
		//IL_016c: Unknown result type (might be due to invalid IL or missing references)
		//IL_013a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[52];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 41;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 27;
		}
		else
		{
			array[2] = 32;
			array[3] = 21;
		}
		array[4] = 0;
		array[5] = 21;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			ShowTimeSchedu(response, 2);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取失败！");
		}
	}

	private void buttonReadTimeZone_Click(object sender, EventArgs e)
	{
		//IL_0111: Unknown result type (might be due to invalid IL or missing references)
		//IL_0163: Unknown result type (might be due to invalid IL or missing references)
		//IL_0132: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[17];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		if (MeterType == 3)
		{
			array[2] = 9;
			array[3] = 62;
		}
		else if (MeterType == 1)
		{
			array[2] = 32;
			array[3] = 0;
		}
		else
		{
			array[2] = 0;
			array[3] = 40;
		}
		array[4] = 0;
		array[5] = 6;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			ShowTimeZone(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取失败！");
		}
	}

	private void ShowTimeZone(byte[] message)
	{
		((ListControl)comboBoxschedu1).SelectedIndex = message[3];
		((Control)textBoxDay1).Text = message[4].ToString();
		((Control)textBoxMonth1).Text = message[5].ToString();
		((ListControl)comboBoxschedu2).SelectedIndex = message[6];
		((Control)textBoxDay2).Text = message[7].ToString();
		((Control)textBoxMonth2).Text = message[8].ToString();
		((ListControl)comboBoxschedu3).SelectedIndex = message[9];
		((Control)textBoxDay3).Text = message[10].ToString();
		((Control)textBoxMonth3).Text = message[11].ToString();
		((ListControl)comboBoxschedu4).SelectedIndex = message[12];
		((Control)textBoxDay4).Text = message[13].ToString();
		((Control)textBoxMonth4).Text = message[14].ToString();
	}

	private void 初始化_Click(object sender, EventArgs e)
	{
		//IL_0204: Unknown result type (might be due to invalid IL or missing references)
		//IL_024e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0225: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 152;
		array[2] = 100;
		array[3] = 1;
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		if (((ListControl)comboBoxUn).SelectedIndex == 0)
		{
			array[7] = 2;
			array[8] = 65;
		}
		else if (((ListControl)comboBoxUn).SelectedIndex == 1)
		{
			array[7] = 8;
			array[8] = 152;
		}
		else
		{
			array[7] = 14;
			array[8] = 216;
		}
		if (((Control)comboBoxIb).Text == "1")
		{
			array[9] = 0;
			array[10] = 100;
		}
		if (((Control)comboBoxIb).Text == "10")
		{
			array[9] = 3;
			array[10] = 232;
		}
		if (((Control)comboBoxEc).Text == "400")
		{
			array[11] = 1;
			array[12] = 144;
		}
		else if (((Control)comboBoxEc).Text == "1600")
		{
			array[11] = 6;
			array[12] = 64;
		}
		else if (((Control)comboBoxEc).Text == "6400")
		{
			array[11] = 25;
			array[12] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 初始化成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 增益_Click(object sender, EventArgs e)
	{
		//IL_00f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_013b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0112: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 153;
		array[2] = 103;
		array[3] = 1;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 校准成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void GetDate()
	{
		dh = DateTime.Now;
		CorrectTime.Second = (byte)dh.Second;
		CorrectTime.Minute = (byte)dh.Minute;
		CorrectTime.Hour = (byte)dh.Hour;
		CorrectTime.Day = (byte)dh.Day;
		CorrectTime.Month = (byte)dh.Month;
		CorrectTime.DayOfWeek = (byte)dh.DayOfWeek;
		if (dh.Year >= 2000)
		{
			CorrectTime.Year = (byte)(dh.Year - 2000);
		}
		else
		{
			CorrectTime.Year = (byte)(dh.Year - 1900);
		}
	}

	private void button14_Click(object sender, EventArgs e)
	{
		//IL_013b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0185: Unknown result type (might be due to invalid IL or missing references)
		//IL_015c: Unknown result type (might be due to invalid IL or missing references)
		GetDate();
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[19];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 3;
		array[3] = 84;
		array[4] = 0;
		array[5] = 5;
		array[6] = 10;
		array[7] = CorrectTime.Second;
		array[8] = CorrectTime.Minute;
		array[9] = CorrectTime.Hour;
		array[10] = CorrectTime.DayOfWeek;
		array[11] = CorrectTime.Day;
		array[12] = CorrectTime.Month;
		array[13] = CorrectTime.Year;
		array[14] = 0;
		array[15] = 0;
		array[16] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 校时成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button1_Click(object sender, EventArgs e)
	{
		//IL_00f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_013b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0112: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 170;
		array[2] = 100;
		array[3] = 1;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 清零成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void comboBoxIb_SelectedIndexChanged(object sender, EventArgs e)
	{
		if (((ListControl)comboBoxIb).SelectedIndex == 1)
		{
			if (MeterType == 1)
			{
				((ListControl)comboBoxEc).SelectedIndex = 1;
			}
			else
			{
				((ListControl)comboBoxEc).SelectedIndex = 0;
			}
		}
	}

	private void 读取地址_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0169: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 55;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			((Control)CTValue).Text = ((response[3] << 8) | response[4]).ToString("f0");
			((Control)PTValue).Text = ((response[5] << 8) | response[6]).ToString("f0");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void GetMeterID2()
	{
		string text = "";
		int num = 12 - ((Control)textBox8).Text.Length;
		for (int i = 0; i < num; i++)
		{
			text += "0";
		}
		((Control)textBox8).Text = text + ((Control)textBox8).Text;
		int num2 = 0;
		int num3 = 0;
		while (num2 < 6)
		{
			MeterIDToSet[num3] = (byte)(Convert.ToInt16(((Control)textBox8).Text.Substring(num2 * 2, 2)) / 10 * 16 + Convert.ToInt16(((Control)textBox8).Text.Substring(num2 * 2, 2)) % 10);
			num2++;
			num3++;
		}
	}

	public static uint ConvertByteArrayToUInt(byte[] In, int len)
	{
		return (uint)((In[len] << 24) | (In[len + 1] << 16) | (In[len + 2] << 8) | In[len + 3]);
	}

	public static byte[] ConvertUIntToByteArray(uint n)
	{
		return new byte[4]
		{
			(byte)(n >> 24),
			(byte)(n >> 16),
			(byte)(n >> 8),
			(byte)n
		};
	}

	public static byte[] Encrypt(byte[] IN, int size, uint[] key)
	{
		int num = IN.Length % 4;
		if (num != 0)
		{
			num = 4 - num;
		}
		int num2 = size + num;
		byte[] array = new byte[num2];
		Array.Copy(IN, array, size);
		ushort[] array2 = new ushort[num2 / 2];
		for (int i = 0; i < num; i++)
		{
			array[size + i] = 0;
		}
		for (int j = 0; j < array2.Length; j++)
		{
			array2[j] = (ushort)((array[j * 2] << 8) | array[j * 2 + 1]);
		}
		uint num3 = 0u;
		uint num4 = 2654435769u;
		for (int k = 0; k < array2.Length / 2; k++)
		{
			ushort num5 = array2[k * 2];
			ushort num6 = array2[k * 2 + 1];
			for (int l = 0; l < 16; l++)
			{
				num3 += num4;
				num5 += (ushort)(((num6 << 4) + key[0]) ^ (num6 + num3) ^ ((num6 >> 5) + key[1]));
				num6 += (ushort)(((num5 << 4) + key[2]) ^ (num5 + num3) ^ ((num5 >> 5) + key[3]));
			}
			num3 = 0u;
			array2[k * 2] = num5;
			array2[k * 2 + 1] = num6;
		}
		for (int m = 0; m < array2.Length; m++)
		{
			array[m * 2 + 1] = (byte)array2[m];
			array[m * 2] = (byte)(array2[m] >> 8);
		}
		return array;
	}

	private void MoneyControl_Click(object sender, EventArgs e)
	{
		//IL_0709: Unknown result type (might be due to invalid IL or missing references)
		//IL_0753: Unknown result type (might be due to invalid IL or missing references)
		//IL_072a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[69];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 2;
		array[3] = 0;
		array[4] = 0;
		array[5] = 30;
		array[6] = 60;
		if (FKEN0.Checked)
		{
			array[7] = 1;
		}
		else
		{
			array[7] = 0;
		}
		if (ONFK.Checked)
		{
			array[8] = 1;
		}
		else
		{
			array[8] = 0;
		}
		if (FKEN1.Checked)
		{
			array[9] = 1;
			array[10] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 24);
			array[11] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 16);
			array[12] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 8);
			array[13] = (byte)Convert.ToInt32(((Control)LeaveE).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (FKEN2.Checked)
		{
			array[14] = 1;
			array[15] = (byte)(Convert.ToInt16(((Control)BuyTimes).Text) >> 8);
			array[16] = (byte)Convert.ToInt16(((Control)BuyTimes).Text);
		}
		else
		{
			array[14] = 0;
		}
		if (FKEN3.Checked)
		{
			array[17] = 1;
			array[18] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 24);
			array[19] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 16);
			array[20] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 8);
			array[21] = (byte)Convert.ToInt32(((Control)TotalE).Text);
		}
		else
		{
			array[17] = 0;
		}
		if (FKEN4.Checked)
		{
			array[22] = 1;
			array[23] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 24);
			array[24] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 16);
			array[25] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 8);
			array[26] = (byte)Convert.ToInt32(((Control)BaseE).Text);
		}
		else
		{
			array[22] = 0;
		}
		if (FKEN5.Checked)
		{
			array[27] = 1;
			array[28] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 24);
			array[29] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 16);
			array[30] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 8);
			array[31] = (byte)Convert.ToInt32(((Control)Alarm1).Text);
			array[32] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 24);
			array[33] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 16);
			array[34] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 8);
			array[35] = (byte)Convert.ToInt32(((Control)Alarm2).Text);
		}
		else
		{
			array[27] = 0;
		}
		if (FKEN6.Checked)
		{
			array[36] = 1;
			array[37] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 24);
			array[38] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 16);
			array[39] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 8);
			array[40] = (byte)Convert.ToInt32(((Control)textBoxPrice1).Text);
			array[41] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 24);
			array[42] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 16);
			array[43] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 8);
			array[44] = (byte)Convert.ToInt32(((Control)textBoxPrice2).Text);
			array[45] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 24);
			array[46] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 16);
			array[47] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 8);
			array[48] = (byte)Convert.ToInt32(((Control)textBoxPrice3).Text);
			array[49] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 24);
			array[50] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 16);
			array[51] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 8);
			array[52] = (byte)Convert.ToInt32(((Control)textBoxPrice4).Text);
		}
		else
		{
			array[36] = 0;
		}
		if (FKEN7.Checked)
		{
			array[53] = 1;
			array[54] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 24);
			array[55] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 16);
			array[56] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 8);
			array[57] = (byte)Convert.ToInt32(((Control)TouZhi).Text);
		}
		else
		{
			array[53] = 0;
		}
		if (FKEN8.Checked)
		{
			array[58] = 1;
			array[59] = Convert.ToByte(((Control)textBox7).Text);
		}
		else
		{
			array[58] = 0;
		}
		if (FKEN10.Checked)
		{
			array[60] = 1;
			GetMeterID2();
			array[61] = MeterIDToSet[0];
			array[62] = MeterIDToSet[1];
			array[63] = MeterIDToSet[2];
			array[64] = MeterIDToSet[3];
			array[65] = MeterIDToSet[4];
			array[66] = MeterIDToSet[5];
		}
		else
		{
			array[60] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		if (radioButton2.Checked)
		{
			byte[] array2 = new byte[72];
			SysKey[0] = uint.Parse(((Control)密钥1).Text, NumberStyles.HexNumber);
			SysKey[1] = uint.Parse(((Control)密钥2).Text, NumberStyles.HexNumber);
			SysKey[2] = uint.Parse(((Control)密钥3).Text, NumberStyles.HexNumber);
			SysKey[3] = uint.Parse(((Control)密钥4).Text, NumberStyles.HexNumber);
			array2 = Encrypt(array, array.Length, SysKey);
			array = array2;
		}
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void PowerControl_Click(object sender, EventArgs e)
	{
		//IL_0356: Unknown result type (might be due to invalid IL or missing references)
		//IL_03a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_0377: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[35];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 4;
		if (FKL1.Checked)
		{
			array[3] = 0;
		}
		else if (FKL2.Checked)
		{
			array[3] = 13;
		}
		else if (FKL3.Checked)
		{
			array[3] = 26;
		}
		else
		{
			array[3] = 0;
		}
		if (FKALL.Checked)
		{
			array[7] = byte.MaxValue;
		}
		else
		{
			array[7] = 0;
		}
		array[4] = 0;
		array[5] = 13;
		array[6] = 26;
		if (checkBoxPowerEN0.Checked)
		{
			if (FKALL.Checked)
			{
				array[7] = byte.MaxValue;
			}
			else
			{
				array[7] = 1;
			}
			if (OpenPower.Checked)
			{
				array[8] = 1;
			}
			else
			{
				array[8] = 0;
			}
		}
		if (checkBoxPowerEN1.Checked)
		{
			array[9] = 1;
			array[10] = (byte)(Convert.ToInt32(((Control)MaxPower).Text) >> 8);
			array[11] = (byte)Convert.ToInt32(((Control)MaxPower).Text);
			array[12] = (byte)(Convert.ToInt32(((Control)textBoxMaxPAdd).Text) >> 8);
			array[13] = (byte)Convert.ToInt32(((Control)textBoxMaxPAdd).Text);
			array[14] = (byte)(Convert.ToInt32(((Control)textBoxMaxPF).Text) >> 8);
			array[15] = (byte)Convert.ToInt32(((Control)textBoxMaxPF).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (checkBoxPowerEN3.Checked)
		{
			array[16] = 1;
			array[17] = Convert.ToByte(((Control)RecoverTime).Text);
		}
		else
		{
			array[16] = 0;
		}
		if (checkBoxPowerEN4.Checked)
		{
			array[18] = 1;
			array[19] = (byte)(Convert.ToInt32(((Control)MaxOverCount).Text) >> 8);
			array[20] = (byte)Convert.ToInt32(((Control)MaxOverCount).Text);
		}
		else
		{
			array[18] = 0;
		}
		if (checkBox9.Checked)
		{
			array[21] = 1;
			array[22] = (byte)(Convert.ToInt32(((Control)textBox9).Text) >> 8);
			array[23] = (byte)Convert.ToInt32(((Control)textBox9).Text);
		}
		else
		{
			array[21] = 0;
		}
		if (checkBox10.Checked)
		{
			array[24] = 1;
			array[25] = Convert.ToByte(((Control)textBox10).Text);
		}
		array[26] = 0;
		array[27] = 0;
		array[28] = 0;
		array[29] = 0;
		array[30] = 0;
		array[31] = 0;
		array[32] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void TimeControl_Click(object sender, EventArgs e)
	{
		//IL_07db: Unknown result type (might be due to invalid IL or missing references)
		//IL_0825: Unknown result type (might be due to invalid IL or missing references)
		//IL_07fc: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[65];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 3;
		if (SKL1.Checked)
		{
			array[3] = 0;
		}
		else if (SKL2.Checked)
		{
			array[3] = 28;
		}
		else if (SKL3.Checked)
		{
			array[3] = 56;
		}
		else
		{
			array[3] = 0;
		}
		if (SKALL.Checked)
		{
			array[7] = byte.MaxValue;
		}
		array[4] = 0;
		array[5] = 28;
		array[6] = 56;
		if (checkBox2.Checked)
		{
			if (SKALL.Checked)
			{
				array[7] = byte.MaxValue;
			}
			else
			{
				array[7] = 1;
			}
			if (OpenTime.Checked)
			{
				array[8] = 1;
			}
			else
			{
				array[8] = 0;
			}
		}
		else
		{
			array[7] = 0;
			array[8] = 0;
		}
		if (checkBoxTimeEN1.Checked)
		{
			array[9] = 1;
			array[10] = 0;
			array[11] = 0;
			if (checkBoxL1Sun.Checked)
			{
				array[11] |= 128;
			}
			if (checkBoxL1Sat.Checked)
			{
				array[11] |= 64;
			}
			if (checkBoxL1Fri.Checked)
			{
				array[11] |= 32;
			}
			if (checkBoxL1Thu.Checked)
			{
				array[11] |= 16;
			}
			if (checkBoxL1Wed.Checked)
			{
				array[11] |= 8;
			}
			if (checkBoxL1Tue.Checked)
			{
				array[11] |= 4;
			}
			if (checkBoxL1Mon.Checked)
			{
				array[11] |= 2;
			}
			array[12] = Convert.ToByte(((Control)textBox1).Text);
			array[13] = Convert.ToByte(((Control)textBox2).Text);
		}
		else
		{
			array[10] = 0;
		}
		if (checkBox11.Checked)
		{
			array[14] = 1;
			if (((Control)comboBoxL1Free1).Text == "通")
			{
				array[15] = 1;
			}
			else
			{
				array[15] = 0;
			}
			array[16] = Convert.ToByte(((Control)textBoxL1FreeM1).Text);
			array[17] = Convert.ToByte(((Control)textBoxL1FreeH1).Text);
			if (((Control)comboBoxL1Free2).Text == "通")
			{
				array[18] = 1;
			}
			else
			{
				array[18] = 0;
			}
			array[19] = Convert.ToByte(((Control)textBoxL1FreeM2).Text);
			array[20] = Convert.ToByte(((Control)textBoxL1FreeH2).Text);
			if (((Control)comboBoxL1Free3).Text == "通")
			{
				array[21] = 1;
			}
			else
			{
				array[21] = 0;
			}
			array[22] = Convert.ToByte(((Control)textBoxL1FreeM3).Text);
			array[23] = Convert.ToByte(((Control)textBoxL1FreeH3).Text);
			if (((Control)comboBoxL1Free4).Text == "通")
			{
				array[24] = 1;
			}
			else
			{
				array[24] = 0;
			}
			array[25] = Convert.ToByte(((Control)textBoxL1FreeM4).Text);
			array[26] = Convert.ToByte(((Control)textBoxL1FreeH4).Text);
			if (((Control)comboBoxL1Free5).Text == "通")
			{
				array[27] = 1;
			}
			else
			{
				array[27] = 0;
			}
			array[28] = Convert.ToByte(((Control)textBoxL1FreeM5).Text);
			array[29] = Convert.ToByte(((Control)textBoxL1FreeH5).Text);
			if (((Control)comboBoxL1Free6).Text == "通")
			{
				array[30] = 1;
			}
			else
			{
				array[30] = 0;
			}
			array[31] = Convert.ToByte(((Control)textBoxL1FreeM6).Text);
			array[32] = Convert.ToByte(((Control)textBoxL1FreeH6).Text);
			if (((Control)comboBoxL1Free7).Text == "通")
			{
				array[33] = 1;
			}
			else
			{
				array[33] = 0;
			}
			array[34] = Convert.ToByte(((Control)textBoxL1FreeM7).Text);
			array[35] = Convert.ToByte(((Control)textBoxL1FreeH7).Text);
			if (((Control)comboBoxL1Free8).Text == "通")
			{
				array[36] = 1;
			}
			else
			{
				array[36] = 0;
			}
			array[37] = Convert.ToByte(((Control)textBoxL1FreeM8).Text);
			array[38] = Convert.ToByte(((Control)textBoxL1FreeH8).Text);
			if (((Control)comboBoxL1Work1).Text == "通")
			{
				array[39] = 1;
			}
			else
			{
				array[39] = 0;
			}
			array[40] = Convert.ToByte(((Control)textBoxL1WorkM1).Text);
			array[41] = Convert.ToByte(((Control)textBoxL1WorkH1).Text);
			if (((Control)comboBoxL1Work2).Text == "通")
			{
				array[42] = 1;
			}
			else
			{
				array[42] = 0;
			}
			array[43] = Convert.ToByte(((Control)textBoxL1WorkM2).Text);
			array[44] = Convert.ToByte(((Control)textBoxL1WorkH2).Text);
			if (((Control)comboBoxL1Work3).Text == "通")
			{
				array[45] = 1;
			}
			else
			{
				array[45] = 0;
			}
			array[46] = Convert.ToByte(((Control)textBoxL1WorkM3).Text);
			array[47] = Convert.ToByte(((Control)textBoxL1WorkH3).Text);
			if (((Control)comboBoxL1Work4).Text == "通")
			{
				array[48] = 1;
			}
			else
			{
				array[48] = 0;
			}
			array[49] = Convert.ToByte(((Control)textBoxL1WorkM4).Text);
			array[50] = Convert.ToByte(((Control)textBoxL1WorkH4).Text);
			if (((Control)comboBoxL1Work5).Text == "通")
			{
				array[51] = 1;
			}
			else
			{
				array[51] = 0;
			}
			array[52] = Convert.ToByte(((Control)textBoxL1WorkM5).Text);
			array[53] = Convert.ToByte(((Control)textBoxL1WorkH5).Text);
			if (((Control)comboBoxL1Work6).Text == "通")
			{
				array[54] = 1;
			}
			else
			{
				array[54] = 0;
			}
			array[55] = Convert.ToByte(((Control)textBoxL1WorkM6).Text);
			array[56] = Convert.ToByte(((Control)textBoxL1WorkH6).Text);
			if (((Control)comboBoxL1Work7).Text == "通")
			{
				array[57] = 1;
			}
			else
			{
				array[57] = 0;
			}
			array[58] = Convert.ToByte(((Control)textBoxL1WorkM7).Text);
			array[59] = Convert.ToByte(((Control)textBoxL1WorkH7).Text);
			if (((Control)comboBoxL1Work8).Text == "通")
			{
				array[60] = 1;
			}
			else
			{
				array[60] = 0;
			}
			array[61] = Convert.ToByte(((Control)textBoxL1WorkM8).Text);
			array[62] = Convert.ToByte(((Control)textBoxL1WorkH8).Text);
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ForceControl_Click(object sender, EventArgs e)
	{
		//IL_0200: Unknown result type (might be due to invalid IL or missing references)
		//IL_024a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0221: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[20];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 5;
		array[3] = 0;
		array[4] = 0;
		array[5] = 5;
		array[6] = 10;
		if (checkBoxForceEN1.Checked)
		{
			array[7] = 1;
			if (L1ON.Checked)
			{
				array[8] = 1;
				if (L1Open.Checked)
				{
					array[9] = 1;
				}
				else
				{
					array[9] = 0;
				}
			}
			else
			{
				array[8] = 0;
				array[9] = 0;
			}
		}
		if (checkBoxForceEN2.Checked)
		{
			array[10] = 1;
			if (L2ON.Checked)
			{
				array[11] = 1;
				if (L2Open.Checked)
				{
					array[12] = 1;
				}
				else
				{
					array[12] = 0;
				}
			}
			else
			{
				array[11] = 0;
				array[12] = 0;
			}
		}
		if (checkBoxForceEN3.Checked)
		{
			array[13] = 1;
			if (L3ON.Checked)
			{
				array[14] = 1;
				if (L3Open.Checked)
				{
					array[15] = 1;
				}
				else
				{
					array[15] = 0;
				}
			}
			else
			{
				array[14] = 0;
				array[15] = 0;
			}
		}
		array[16] = 0;
		array[17] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ResetPC_Click(object sender, EventArgs e)
	{
		//IL_01a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ca: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[17];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 4;
		array[3] = 16;
		array[4] = 0;
		array[5] = 4;
		array[6] = 8;
		if (FWL1.Checked)
		{
			array[7] = 1;
			array[8] = (byte)Convert.ToInt32(((Control)OverCount1).Text);
		}
		else
		{
			array[7] = 0;
		}
		if (FWL2.Checked)
		{
			array[9] = 1;
			array[10] = (byte)Convert.ToInt32(((Control)OverCount2).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (FWL3.Checked)
		{
			array[11] = 1;
			array[12] = (byte)Convert.ToInt32(((Control)OverCount3).Text);
		}
		else
		{
			array[11] = 0;
		}
		if (FWALL.Checked)
		{
			array[13] = 1;
			array[14] = (byte)Convert.ToInt32(((Control)OverCountALL).Text);
		}
		else
		{
			array[13] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 输出方式设置_Click(object sender, EventArgs e)
	{
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_0144: Unknown result type (might be due to invalid IL or missing references)
		//IL_011b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 99;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (电平.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 输出方式读取_Click(object sender, EventArgs e)
	{
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0147: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 99;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 0)
			{
				电平.Checked = true;
			}
			else
			{
				脉冲.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 输出方式读取_Click_1(object sender, EventArgs e)
	{
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0147: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 99;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 0)
			{
				电平.Checked = true;
			}
			else
			{
				脉冲.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 输出方式设置_Click_1(object sender, EventArgs e)
	{
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_0144: Unknown result type (might be due to invalid IL or missing references)
		//IL_011b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 99;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (电平.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void buttonReadPhase_Click_1(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_02bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[21];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 3;
		array[4] = 0;
		array[5] = 8;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			((Control)单相数量).Text = response[6].ToString();
			((Control)三相数量).Text = response[4].ToString();
			string text = "";
			int[] array2 = new int[5];
			for (int i = 0; i < 5; i++)
			{
				array2[i] = response[7 + i] / 16 * 10 + response[7 + i] % 16;
			}
			for (int j = 0; j < 5; j++)
			{
				text = ((array2[j] != 0) ? ((array2[j] >= 10 || array2[j] <= 0) ? (text + array2[j]) : (text + "0" + array2[j])) : (text + "00"));
			}
			((Control)ADF表号).Text = text;
			if (response[13] == 1)
			{
				jiliangxing.Checked = true;
			}
			else
			{
				yufufei.Checked = true;
			}
			if (response[14] == 1)
			{
				dlt645xieyi.Checked = true;
			}
			else
			{
				dlt645xieyi.Checked = false;
			}
			if (response[18] == 1)
			{
				使能IC.Checked = true;
			}
			else
			{
				无IC.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private byte[] GetResponseCount()
	{
		if (MeterType2 == 0)
		{
			return new byte[17];
		}
		if (MeterType2 == 1)
		{
			return new byte[13];
		}
		if (MeterType2 == 2)
		{
			return new byte[9];
		}
		return new byte[17];
	}

	public void ReadAllSetResponse(byte[] response)
	{
		//IL_03d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_031e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0223: Unknown result type (might be due to invalid IL or missing references)
		//IL_0166: Unknown result type (might be due to invalid IL or missing references)
		//IL_039d: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a2: Unknown result type (might be due to invalid IL or missing references)
		int num = 0;
		int[] array = new int[12];
		try
		{
			if (MeterType2 == 0)
			{
				AllSetResult[0] = response[3];
				AllSetResult[1] = response[4];
				AllSetResult[2] = response[5];
				AllSetResult[3] = response[6];
				AllSetResult[4] = response[7];
				AllSetResult[5] = response[8];
				AllSetResult[6] = response[9];
				AllSetResult[7] = response[10];
				AllSetResult[8] = response[11];
				AllSetResult[9] = response[12];
				AllSetResult[10] = response[13];
				AllSetResult[11] = response[14];
				for (int i = 3; i < 15; i++)
				{
					if (response[i] == 2)
					{
						array[i - 3] = 1;
						num++;
					}
				}
				if (num == 0)
				{
					MessageBox.Show("所有下板Set successfully！");
					return;
				}
				string text = "第";
				for (int j = 0; j < 12; j++)
				{
					if (array[j] == 1)
					{
						text += j + 1;
						text += ",";
					}
				}
				text = text.Remove(text.Length - 1);
				text += "块下板的广播下发失败，请确认！";
				MessageBox.Show(text);
				return;
			}
			if (MeterType2 == 1)
			{
				AllSetResult[0] = response[3];
				AllSetResult[1] = response[4];
				AllSetResult[2] = response[5];
				AllSetResult[3] = response[6];
				AllSetResult[4] = response[7];
				AllSetResult[5] = response[8];
				AllSetResult[6] = response[9];
				AllSetResult[7] = response[10];
				for (int k = 3; k < 11; k++)
				{
					if (response[k] == 2)
					{
						array[k - 3] = 1;
						num++;
					}
				}
				if (num == 0)
				{
					MessageBox.Show("所有下板Set successfully！");
					return;
				}
				string text2 = "第";
				for (int l = 0; l < 12; l++)
				{
					if (array[l] == 1)
					{
						text2 += l + 1;
						text2 += ",";
					}
				}
				text2 = text2.Remove(text2.Length - 1);
				text2 += "块下板的广播下发失败，请确认！";
				MessageBox.Show(text2);
				return;
			}
			AllSetResult[0] = response[3];
			AllSetResult[1] = response[4];
			AllSetResult[2] = response[5];
			AllSetResult[3] = response[6];
			for (int m = 3; m < 7; m++)
			{
				if (response[m] == 2)
				{
					array[m - 3] = 1;
					num++;
				}
			}
			if (num == 0)
			{
				MessageBox.Show("所有下板Set successfully！");
				return;
			}
			string text3 = "第";
			for (int n = 0; n < 12; n++)
			{
				if (array[n] == 1)
				{
					text3 += n + 1;
					text3 += ",";
				}
			}
			text3 = text3.Remove(text3.Length - 1);
			text3 += "块下板的广播下发失败，请确认！";
			MessageBox.Show(text3);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " 请设置ADF300型号规格！");
		}
	}

	private void buttonChangePhase_Click(object sender, EventArgs e)
	{
		//IL_01f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0243: Unknown result type (might be due to invalid IL or missing references)
		//IL_0212: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		GetMeterID3();
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		int num = 0;
		byte[] array = new byte[25];
		num = ((MeterType2 == 0) ? 16 : ((MeterType2 != 1) ? 8 : 12));
		byte[] response = new byte[num];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 3;
		array[4] = 0;
		array[5] = 8;
		array[6] = 16;
		array[7] = 0;
		array[8] = (byte)Convert.ToInt16(((Control)三相数量).Text);
		array[9] = 0;
		array[10] = (byte)Convert.ToInt16(((Control)单相数量).Text);
		GetMeterID3();
		array[11] = MeterIDToSet[0];
		array[12] = MeterIDToSet[1];
		array[13] = MeterIDToSet[2];
		array[14] = MeterIDToSet[3];
		array[15] = MeterIDToSet[4];
		array[16] = 0;
		if (yufufei.Checked)
		{
			array[17] = 0;
		}
		else
		{
			array[17] = 1;
		}
		if (dlt645xieyi.Checked)
		{
			array[18] = 1;
		}
		else
		{
			array[18] = 0;
		}
		array[19] = 0;
		array[20] = 0;
		array[21] = 0;
		if (使能IC.Checked)
		{
			array[22] = 1;
		}
		else
		{
			array[22] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			ReadAllSetResponse(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button3_Click(object sender, EventArgs e)
	{
		//IL_00ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0115: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		if (ADF副通讯.Checked)
		{
			array[3] = 17;
		}
		else
		{
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			if (MeterType2 == 0)
			{
				((ListControl)ADF300地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 36);
			}
			else if (MeterType2 == 1)
			{
				((ListControl)ADF300地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 24);
			}
			else if (MeterType2 == 2)
			{
				((ListControl)ADF300地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 12);
			}
			else
			{
				((ListControl)ADF300地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 36);
			}
			((ListControl)ADF300波特率).SelectedIndex = response[6];
			((Control)地址).Text = Convert.ToString(response[4]);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button2_Click(object sender, EventArgs e)
	{
		//IL_01a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c4: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		if (ADF副通讯.Checked)
		{
			array[3] = 17;
		}
		else
		{
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = 0;
		if (MeterType2 == 0)
		{
			array[8] = Convert.ToByte(((ListControl)ADF300地址).SelectedIndex * 36 + 1);
		}
		else if (MeterType2 == 1)
		{
			array[8] = Convert.ToByte(((ListControl)ADF300地址).SelectedIndex * 24 + 1);
		}
		else if (MeterType2 == 2)
		{
			array[8] = Convert.ToByte(((ListControl)ADF300地址).SelectedIndex * 12 + 1);
		}
		else
		{
			array[8] = Convert.ToByte(((ListControl)ADF300地址).SelectedIndex * 24 + 1);
		}
		array[9] = 0;
		array[10] = Convert.ToByte(((ListControl)ADF300波特率).SelectedIndex);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 脉冲_Click(object sender, EventArgs e)
	{
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		Form val = (Form)(object)new 脉冲参数设置();
		val.ShowDialog();
	}

	private void ADF300清零_Click(object sender, EventArgs e)
	{
		//IL_00e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0104: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = 0;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF300广播清零_Click(object sender, EventArgs e)
	{
		//IL_00e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0131: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF300地址_Click(object sender, EventArgs e)
	{
		if (MeterType2 == 0)
		{
			ADF300地址.Items.Clear();
			ADF300地址.Items.AddRange(new object[7] { 1, 37, 73, 109, 145, 181, 217 });
		}
		else if (MeterType2 == 1)
		{
			ADF300地址.Items.Clear();
			ADF300地址.Items.AddRange(new object[10] { 1, 25, 49, 73, 97, 121, 145, 169, 193, 217 });
		}
		else
		{
			ADF300地址.Items.Clear();
			ADF300地址.Items.AddRange(new object[20]
			{
				1, 13, 25, 37, 49, 61, 73, 85, 97, 109,
				121, 133, 145, 157, 169, 181, 193, 205, 217, 229
			});
			MeterType2 = 2;
		}
	}

	private void Init_Click(object sender, EventArgs e)
	{
		//IL_0202: Unknown result type (might be due to invalid IL or missing references)
		//IL_024c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0223: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 152;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 100;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		if (((ListControl)ADF电压).SelectedIndex == 0)
		{
			array[7] = 2;
			array[8] = 65;
		}
		else if (((ListControl)ADF电压).SelectedIndex == 1)
		{
			array[7] = 8;
			array[8] = 152;
		}
		else
		{
			array[7] = 14;
			array[8] = 216;
		}
		if (((ListControl)ADF电流).SelectedIndex == 0)
		{
			array[9] = 0;
			array[10] = 100;
		}
		else
		{
			array[9] = 3;
			array[10] = 232;
		}
		if (((Control)ADF脉冲常数).Text == "400")
		{
			array[11] = 1;
			array[12] = 144;
		}
		else if (((Control)ADF脉冲常数).Text == "6400")
		{
			array[11] = 25;
			array[12] = 0;
		}
		else if (((Control)ADF脉冲常数).Text == "1600")
		{
			array[11] = 6;
			array[12] = 64;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 初始化成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void CorrectMeter_Click(object sender, EventArgs e)
	{
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0159: Unknown result type (might be due to invalid IL or missing references)
		//IL_0130: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 153;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 103;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 校准成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ReadMoneyControl_Click(object sender, EventArgs e)
	{
		//IL_010a: Unknown result type (might be due to invalid IL or missing references)
		//IL_040a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0706: Unknown result type (might be due to invalid IL or missing references)
		//IL_0432: Unknown result type (might be due to invalid IL or missing references)
		//IL_0313: Unknown result type (might be due to invalid IL or missing references)
		//IL_0131: Unknown result type (might be due to invalid IL or missing references)
		if (MeterType == 3)
		{
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array = new byte[8];
			byte[] response = new byte[41];
			byte[] CRC = new byte[2];
			array[0] = Convert.ToByte(Variable.Address);
			array[1] = 3;
			if (IS3P == 1)
			{
				array[2] = 5;
				array[3] = 54;
			}
			else
			{
				array[2] = 5;
				array[3] = 0;
			}
			array[4] = 0;
			array[5] = 18;
			m.GetCRC(array, ref CRC);
			array[^2] = CRC[0];
			array[^1] = CRC[1];
			try
			{
				Modbus.sp.Write(array, 0, array.Length);
				m.GetResponse(ref response);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response, 0))
			{
				MessageBox.Show(" Read successfully！");
				if (((response[3] << 8) | response[4]) == 0)
				{
					OFFFK.Checked = true;
				}
				else
				{
					ONFK.Checked = true;
				}
				double num = (response[5] << 24) | (response[6] << 16) | (response[7] << 8) | response[8];
				((Control)textBoxPrice1).Text = num.ToString("f0");
				num = (response[9] << 24) | (response[10] << 16) | (response[11] << 8) | response[12];
				((Control)textBoxPrice2).Text = num.ToString("f0");
				num = (response[13] << 24) | (response[14] << 16) | (response[15] << 8) | response[16];
				((Control)textBoxPrice3).Text = num.ToString("f0");
				num = (response[17] << 24) | (response[18] << 16) | (response[19] << 8) | response[20];
				((Control)textBoxPrice4).Text = num.ToString("f0");
				num = (response[21] << 24) | (response[22] << 16) | (response[23] << 8) | response[24];
				((Control)Alarm1).Text = num.ToString("f0");
				num = (response[25] << 24) | (response[26] << 16) | (response[27] << 8) | response[28];
				((Control)Alarm2).Text = num.ToString("f0");
				num = Convert.ToDouble(((Control)基础电量).Text);
				((Control)BaseE).Text = (num * 100.0).ToString("f0");
				((Control)BuyTimes).Text = Convert.ToString((response[33] << 8) | response[34]);
				主轮抄定时器.Enabled = true;
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
			return;
		}
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array2 = new byte[8];
		byte[] response2 = new byte[55];
		byte[] CRC2 = new byte[2];
		array2[0] = Convert.ToByte(Variable.Address);
		array2[1] = 3;
		array2[2] = 4;
		array2[3] = 0;
		array2[4] = 0;
		array2[5] = 25;
		m.GetCRC(array2, ref CRC2);
		array2[^2] = CRC2[0];
		array2[^1] = CRC2[1];
		try
		{
			Modbus.sp.Write(array2, 0, array2.Length);
			m.GetResponse(ref response2);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex2)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex2.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response2, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (((response2[3] << 8) | response2[4]) == 0)
			{
				OFFFK.Checked = true;
			}
			else
			{
				ONFK.Checked = true;
			}
			((Control)BuyTimes).Text = Convert.ToString((response2[5] << 8) | response2[6]);
			double num = (response2[7] << 24) | (response2[8] << 16) | (response2[9] << 8) | response2[10];
			((Control)textBoxPrice1).Text = num.ToString("f0");
			num = (response2[11] << 24) | (response2[12] << 16) | (response2[13] << 8) | response2[14];
			((Control)textBoxPrice2).Text = num.ToString("f0");
			num = (response2[15] << 24) | (response2[16] << 16) | (response2[17] << 8) | response2[18];
			((Control)textBoxPrice3).Text = num.ToString("f0");
			num = (response2[19] << 24) | (response2[20] << 16) | (response2[21] << 8) | response2[22];
			((Control)textBoxPrice4).Text = num.ToString("f0");
			num = (response2[23] << 24) | (response2[24] << 16) | (response2[25] << 8) | response2[26];
			((Control)Alarm1).Text = num.ToString("f0");
			num = (response2[27] << 24) | (response2[28] << 16) | (response2[29] << 8) | response2[30];
			((Control)Alarm2).Text = num.ToString("f0");
			num = (response2[31] << 24) | (response2[32] << 16) | (response2[33] << 8) | response2[34];
			((Control)TouZhi).Text = num.ToString("f0");
			num = (response2[39] << 24) | (response2[40] << 16) | (response2[41] << 8) | response2[42];
			((Control)TotalE).Text = num.ToString("f0");
			num = (response2[43] << 24) | (response2[44] << 16) | (response2[45] << 8) | response2[46];
			((Control)LeaveE).Text = num.ToString("f0");
			num = (response2[47] << 24) | (response2[48] << 16) | (response2[49] << 8) | response2[50];
			((Control)BaseE).Text = num.ToString("f0");
			num = (response2[51] << 8) | response2[52];
			((Control)textBox7).Text = num.ToString("f0");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取失败！");
		}
	}

	private void ReadPowerControl_Click(object sender, EventArgs e)
	{
		//IL_0169: Unknown result type (might be due to invalid IL or missing references)
		//IL_03b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b6c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a55: Unknown result type (might be due to invalid IL or missing references)
		//IL_0933: Unknown result type (might be due to invalid IL or missing references)
		//IL_03dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0190: Unknown result type (might be due to invalid IL or missing references)
		if (MeterType == 3)
		{
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array = new byte[8];
			byte[] response = new byte[21];
			byte[] CRC = new byte[2];
			array[0] = Convert.ToByte(Variable.Address);
			array[1] = 3;
			if (IS3P == 1)
			{
				if (FKALL.Checked)
				{
					array[2] = 7;
					array[3] = 24;
				}
				else if (FKL2.Checked)
				{
					array[0] = Convert.ToByte(array[0] + 1);
				}
				else if (FKL3.Checked)
				{
					array[0] = Convert.ToByte(array[0] + 2);
				}
				else
				{
					array[2] = 7;
					array[3] = 0;
				}
			}
			else
			{
				array[2] = 7;
				array[3] = 0;
			}
			array[4] = 0;
			array[5] = 8;
			m.GetCRC(array, ref CRC);
			array[^2] = CRC[0];
			array[^1] = CRC[1];
			try
			{
				Modbus.sp.Write(array, 0, array.Length);
				m.GetResponse(ref response);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response, 0))
			{
				MessageBox.Show(" Set successfully！");
				if (((response[3] << 8) | response[4]) == 0)
				{
					ClosePower.Checked = true;
				}
				else
				{
					OpenPower.Checked = true;
				}
				((Control)MaxPower).Text = Convert.ToString((response[5] << 8) | response[6]);
				((Control)textBoxMaxPAdd).Text = Convert.ToString((response[7] << 8) | response[8]);
				((Control)textBoxMaxPF).Text = Convert.ToString((response[9] << 8) | response[10]);
				((Control)textBox9).Text = Convert.ToString((response[11] << 8) | response[12]);
				((Control)MaxOverCount).Text = Convert.ToString((response[13] << 8) | response[14]);
				((Control)RecoverTime).Text = Convert.ToString((response[15] << 8) | response[16]);
				((Control)textBox10).Text = Convert.ToString((response[17] << 8) | response[18]);
				主轮抄定时器.Enabled = true;
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
			return;
		}
		if (MeterType == 2)
		{
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array2 = new byte[8];
			byte[] response2 = new byte[43];
			byte[] CRC2 = new byte[2];
			array2[0] = Convert.ToByte(Variable.Address);
			array2[1] = 3;
			array2[2] = 4;
			array2[3] = 128;
			array2[4] = 0;
			array2[5] = 19;
			m.GetCRC(array2, ref CRC2);
			array2[^2] = CRC2[0];
			array2[^1] = CRC2[1];
			try
			{
				Modbus.sp.Write(array2, 0, array2.Length);
				m.GetResponse(ref response2);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex2)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex2.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response2, 0))
			{
				MessageBox.Show(" Set successfully！");
				if (FKALL.Checked)
				{
					if (((response2[4] >> 3) & 1) == 1)
					{
						ClosePower.Checked = true;
					}
					else
					{
						OpenPower.Checked = true;
					}
					((Control)MaxPower).Text = Convert.ToString((response2[5] << 8) | response2[6]);
					((Control)textBoxMaxPAdd).Text = Convert.ToString((response2[7] << 8) | response2[8]);
					((Control)textBoxMaxPF).Text = Convert.ToString((response2[9] << 8) | response2[10]);
					((Control)textBox9).Text = Convert.ToString((response2[11] << 8) | response2[12]);
					((Control)MaxOverCount).Text = Convert.ToString((response2[13] << 8) | response2[14]);
					((Control)RecoverTime).Text = Convert.ToString(response2[15]);
					((Control)textBox10).Text = Convert.ToString(response2[16]);
					主轮抄定时器.Enabled = true;
				}
				else if (FKL1.Checked)
				{
					if (((response2[4] >> 2) & 1) == 1)
					{
						ClosePower.Checked = true;
					}
					else
					{
						OpenPower.Checked = true;
					}
					((Control)MaxPower).Text = Convert.ToString((response2[5] << 8) | response2[6]);
					((Control)textBoxMaxPAdd).Text = Convert.ToString((response2[7] << 8) | response2[8]);
					((Control)textBoxMaxPF).Text = Convert.ToString((response2[9] << 8) | response2[10]);
					((Control)textBox9).Text = Convert.ToString((response2[11] << 8) | response2[12]);
					((Control)MaxOverCount).Text = Convert.ToString((response2[13] << 8) | response2[14]);
					((Control)RecoverTime).Text = Convert.ToString(response2[15]);
					((Control)textBox10).Text = Convert.ToString(response2[16]);
					主轮抄定时器.Enabled = true;
				}
				else if (FKL2.Checked)
				{
					if (((response2[4] >> 1) & 1) == 1)
					{
						ClosePower.Checked = true;
					}
					else
					{
						OpenPower.Checked = true;
					}
					((Control)MaxPower).Text = Convert.ToString((response2[17] << 8) | response2[18]);
					((Control)textBoxMaxPAdd).Text = Convert.ToString((response2[19] << 8) | response2[20]);
					((Control)textBoxMaxPF).Text = Convert.ToString((response2[21] << 8) | response2[22]);
					((Control)textBox9).Text = Convert.ToString((response2[23] << 8) | response2[24]);
					((Control)MaxOverCount).Text = Convert.ToString((response2[25] << 8) | response2[26]);
					((Control)RecoverTime).Text = Convert.ToString(response2[27]);
					((Control)textBox10).Text = Convert.ToString(response2[28]);
					主轮抄定时器.Enabled = true;
				}
				else if (FKL3.Checked)
				{
					if ((response2[4] & 1) == 1)
					{
						ClosePower.Checked = true;
					}
					else
					{
						OpenPower.Checked = true;
					}
					((Control)MaxPower).Text = Convert.ToString((response2[29] << 8) | response2[30]);
					((Control)textBoxMaxPAdd).Text = Convert.ToString((response2[31] << 8) | response2[32]);
					((Control)textBoxMaxPF).Text = Convert.ToString((response2[33] << 8) | response2[34]);
					((Control)textBox9).Text = Convert.ToString((response2[35] << 8) | response2[36]);
					((Control)MaxOverCount).Text = Convert.ToString((response2[37] << 8) | response2[38]);
					((Control)RecoverTime).Text = Convert.ToString(response2[39]);
					((Control)textBox10).Text = Convert.ToString(response2[40]);
					主轮抄定时器.Enabled = true;
				}
				else
				{
					if (response2[4] == 1)
					{
						ClosePower.Checked = true;
					}
					else
					{
						OpenPower.Checked = true;
					}
					((Control)MaxPower).Text = Convert.ToString((response2[5] << 8) | response2[6]);
					((Control)textBoxMaxPAdd).Text = Convert.ToString((response2[7] << 8) | response2[8]);
					((Control)textBoxMaxPF).Text = Convert.ToString((response2[9] << 8) | response2[10]);
					((Control)textBox9).Text = Convert.ToString((response2[11] << 8) | response2[12]);
					((Control)MaxOverCount).Text = Convert.ToString((response2[13] << 8) | response2[14]);
					((Control)RecoverTime).Text = Convert.ToString(response2[15]);
					((Control)textBox10).Text = Convert.ToString(response2[16]);
				}
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
			return;
		}
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array3 = new byte[8];
		byte[] response3 = new byte[19];
		byte[] CRC3 = new byte[2];
		array3[0] = Convert.ToByte(Variable.Address);
		array3[1] = 3;
		array3[2] = 4;
		array3[3] = 128;
		array3[4] = 0;
		array3[5] = 7;
		m.GetCRC(array3, ref CRC3);
		array3[^2] = CRC3[0];
		array3[^1] = CRC3[1];
		try
		{
			Modbus.sp.Write(array3, 0, array3.Length);
			m.GetResponse(ref response3);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex3)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex3.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response3, 0))
		{
			MessageBox.Show(" Set successfully！");
			if (((response3[3] << 8) | response3[4]) == 0)
			{
				ClosePower.Checked = true;
			}
			else
			{
				OpenPower.Checked = true;
			}
			((Control)MaxPower).Text = Convert.ToString((response3[5] << 8) | response3[6]);
			((Control)textBoxMaxPAdd).Text = Convert.ToString((response3[7] << 8) | response3[8]);
			((Control)textBoxMaxPF).Text = Convert.ToString((response3[9] << 8) | response3[10]);
			((Control)textBox9).Text = Convert.ToString((response3[11] << 8) | response3[12]);
			((Control)MaxOverCount).Text = Convert.ToString((response3[13] << 8) | response3[14]);
			((Control)RecoverTime).Text = Convert.ToString(response3[15]);
			((Control)textBox10).Text = Convert.ToString(response3[16]);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void AllMoneyControl_Click(object sender, EventArgs e)
	{
		//IL_0669: Unknown result type (might be due to invalid IL or missing references)
		//IL_06b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_068a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[69];
		byte[] response = GetResponseCount();
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 2;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 30;
		array[6] = 60;
		if (FKEN0.Checked)
		{
			array[7] = 1;
		}
		else
		{
			array[7] = 0;
		}
		if (ONFK.Checked)
		{
			array[8] = 1;
		}
		else
		{
			array[8] = 0;
		}
		if (FKEN1.Checked)
		{
			array[9] = 1;
			array[10] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 24);
			array[11] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 16);
			array[12] = (byte)(Convert.ToInt32(((Control)LeaveE).Text) >> 8);
			array[13] = (byte)Convert.ToInt32(((Control)LeaveE).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (FKEN2.Checked)
		{
			array[14] = 1;
			array[15] = (byte)(Convert.ToInt16(((Control)BuyTimes).Text) >> 8);
			array[16] = (byte)Convert.ToInt16(((Control)BuyTimes).Text);
		}
		else
		{
			array[14] = 0;
		}
		if (FKEN3.Checked)
		{
			array[17] = 1;
			array[18] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 24);
			array[19] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 16);
			array[20] = (byte)(Convert.ToInt32(((Control)TotalE).Text) >> 8);
			array[21] = (byte)Convert.ToInt32(((Control)TotalE).Text);
		}
		else
		{
			array[17] = 0;
		}
		if (FKEN4.Checked)
		{
			array[22] = 1;
			array[23] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 24);
			array[24] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 16);
			array[25] = (byte)(Convert.ToInt32(((Control)BaseE).Text) >> 8);
			array[26] = (byte)Convert.ToInt32(((Control)BaseE).Text);
		}
		else
		{
			array[22] = 0;
		}
		if (FKEN5.Checked)
		{
			array[27] = 1;
			array[28] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 24);
			array[29] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 16);
			array[30] = (byte)(Convert.ToInt32(((Control)Alarm1).Text) >> 8);
			array[31] = (byte)Convert.ToInt32(((Control)Alarm1).Text);
			array[32] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 24);
			array[33] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 16);
			array[34] = (byte)(Convert.ToInt32(((Control)Alarm2).Text) >> 8);
			array[35] = (byte)Convert.ToInt32(((Control)Alarm2).Text);
		}
		else
		{
			array[27] = 0;
		}
		if (FKEN6.Checked)
		{
			array[36] = 1;
			array[37] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 24);
			array[38] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 16);
			array[39] = (byte)(Convert.ToInt32(((Control)textBoxPrice1).Text) >> 8);
			array[40] = (byte)Convert.ToInt32(((Control)textBoxPrice1).Text);
			array[41] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 24);
			array[42] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 16);
			array[43] = (byte)(Convert.ToInt32(((Control)textBoxPrice2).Text) >> 8);
			array[44] = (byte)Convert.ToInt32(((Control)textBoxPrice2).Text);
			array[45] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 24);
			array[46] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 16);
			array[47] = (byte)(Convert.ToInt32(((Control)textBoxPrice3).Text) >> 8);
			array[48] = (byte)Convert.ToInt32(((Control)textBoxPrice3).Text);
			array[49] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 24);
			array[50] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 16);
			array[51] = (byte)(Convert.ToInt32(((Control)textBoxPrice4).Text) >> 8);
			array[52] = (byte)Convert.ToInt32(((Control)textBoxPrice4).Text);
		}
		else
		{
			array[36] = 0;
		}
		if (FKEN7.Checked)
		{
			array[53] = 1;
			array[54] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 24);
			array[55] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 16);
			array[56] = (byte)(Convert.ToInt32(((Control)TouZhi).Text) >> 8);
			array[57] = (byte)Convert.ToInt32(((Control)TouZhi).Text);
		}
		else
		{
			array[53] = 0;
		}
		if (FKEN8.Checked)
		{
			array[58] = 1;
			array[59] = Convert.ToByte(((Control)textBox7).Text);
		}
		else
		{
			array[58] = 0;
		}
		if (FKEN10.Checked)
		{
			array[60] = 1;
			GetMeterID2();
			array[61] = MeterIDToSet[0];
			array[62] = MeterIDToSet[1];
			array[63] = MeterIDToSet[2];
			array[64] = MeterIDToSet[3];
			array[65] = MeterIDToSet[4];
			array[66] = MeterIDToSet[5];
		}
		else
		{
			array[60] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void FKALL_CheckedChanged(object sender, EventArgs e)
	{
		checkBoxPowerEN0.Checked = true;
	}

	private void AllPowerControl_Click(object sender, EventArgs e)
	{
		//IL_0312: Unknown result type (might be due to invalid IL or missing references)
		//IL_035c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0333: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[35];
		byte[] response = GetResponseCount();
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 4;
		array[3] = byte.MaxValue;
		if (FKALL.Checked)
		{
			array[7] = byte.MaxValue;
		}
		else
		{
			array[7] = 0;
		}
		array[4] = 0;
		array[5] = 13;
		array[6] = 26;
		if (checkBoxPowerEN0.Checked)
		{
			if (FKALL.Checked)
			{
				array[7] = byte.MaxValue;
			}
			else
			{
				array[7] = 1;
			}
			if (OpenPower.Checked)
			{
				array[8] = 1;
			}
			else
			{
				array[8] = 0;
			}
		}
		if (checkBoxPowerEN1.Checked)
		{
			array[9] = 1;
			array[10] = (byte)(Convert.ToInt32(((Control)MaxPower).Text) >> 8);
			array[11] = (byte)Convert.ToInt32(((Control)MaxPower).Text);
			array[12] = (byte)(Convert.ToInt32(((Control)textBoxMaxPAdd).Text) >> 8);
			array[13] = (byte)Convert.ToInt32(((Control)textBoxMaxPAdd).Text);
			array[14] = (byte)(Convert.ToInt32(((Control)textBoxMaxPF).Text) >> 8);
			array[15] = (byte)Convert.ToInt32(((Control)textBoxMaxPF).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (checkBoxPowerEN3.Checked)
		{
			array[16] = 1;
			array[17] = Convert.ToByte(((Control)RecoverTime).Text);
		}
		else
		{
			array[16] = 0;
		}
		if (checkBoxPowerEN4.Checked)
		{
			array[18] = 1;
			array[19] = (byte)(Convert.ToInt32(((Control)MaxOverCount).Text) >> 8);
			array[20] = (byte)Convert.ToInt32(((Control)MaxOverCount).Text);
		}
		else
		{
			array[18] = 0;
		}
		if (checkBox9.Checked)
		{
			array[21] = 1;
			array[22] = (byte)(Convert.ToInt32(((Control)textBox9).Text) >> 8);
			array[23] = (byte)Convert.ToInt32(((Control)textBox9).Text);
		}
		else
		{
			array[21] = 0;
		}
		if (checkBox10.Checked)
		{
			array[24] = 1;
			array[25] = Convert.ToByte(((Control)textBox10).Text);
		}
		array[26] = 0;
		array[27] = 0;
		array[28] = 0;
		array[29] = 0;
		array[30] = 0;
		array[31] = 0;
		array[32] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button5_Click(object sender, EventArgs e)
	{
		//IL_01ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_01cc: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[17];
		byte[] response = GetResponseCount();
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 4;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 4;
		array[6] = 8;
		if (FWL1.Checked)
		{
			array[7] = 1;
			array[8] = (byte)Convert.ToInt32(((Control)OverCount1).Text);
		}
		else
		{
			array[7] = 0;
		}
		if (FWL2.Checked)
		{
			array[9] = 1;
			array[10] = (byte)Convert.ToInt32(((Control)OverCount2).Text);
		}
		else
		{
			array[9] = 0;
		}
		if (FWL3.Checked)
		{
			array[11] = 1;
			array[12] = (byte)Convert.ToInt32(((Control)OverCount3).Text);
		}
		else
		{
			array[11] = 0;
		}
		if (FWALL.Checked)
		{
			array[13] = 1;
			array[14] = (byte)Convert.ToInt32(((Control)OverCountALL).Text);
		}
		else
		{
			array[13] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void AllTimeControl_Click(object sender, EventArgs e)
	{
		//IL_07a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_07ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_07c1: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[65];
		byte[] response = GetResponseCount();
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 3;
		array[3] = byte.MaxValue;
		if (SKALL.Checked)
		{
			array[7] = byte.MaxValue;
		}
		else
		{
			array[7] = 0;
		}
		array[4] = 0;
		array[5] = 28;
		array[6] = 56;
		if (checkBox2.Checked)
		{
			if (SKALL.Checked)
			{
				array[7] = byte.MaxValue;
			}
			else
			{
				array[7] = 1;
			}
			if (OpenTime.Checked)
			{
				array[8] = 1;
			}
			else
			{
				array[8] = 0;
			}
		}
		else
		{
			array[7] = 0;
			array[8] = 0;
		}
		if (checkBoxTimeEN1.Checked)
		{
			array[9] = 1;
			array[10] = 0;
			array[11] = 0;
			if (checkBoxL1Sun.Checked)
			{
				array[11] |= 128;
			}
			if (checkBoxL1Sat.Checked)
			{
				array[11] |= 64;
			}
			if (checkBoxL1Fri.Checked)
			{
				array[11] |= 32;
			}
			if (checkBoxL1Thu.Checked)
			{
				array[11] |= 16;
			}
			if (checkBoxL1Wed.Checked)
			{
				array[11] |= 8;
			}
			if (checkBoxL1Tue.Checked)
			{
				array[11] |= 4;
			}
			if (checkBoxL1Mon.Checked)
			{
				array[11] |= 2;
			}
			array[12] = Convert.ToByte(((Control)textBox1).Text);
			array[13] = Convert.ToByte(((Control)textBox2).Text);
		}
		else
		{
			array[10] = 0;
		}
		if (checkBox11.Checked)
		{
			array[14] = 1;
			if (((Control)comboBoxL1Free1).Text == "通")
			{
				array[15] = 1;
			}
			else
			{
				array[15] = 0;
			}
			array[16] = Convert.ToByte(((Control)textBoxL1FreeM1).Text);
			array[17] = Convert.ToByte(((Control)textBoxL1FreeH1).Text);
			if (((Control)comboBoxL1Free2).Text == "通")
			{
				array[18] = 1;
			}
			else
			{
				array[18] = 0;
			}
			array[19] = Convert.ToByte(((Control)textBoxL1FreeM2).Text);
			array[20] = Convert.ToByte(((Control)textBoxL1FreeH2).Text);
			if (((Control)comboBoxL1Free3).Text == "通")
			{
				array[21] = 1;
			}
			else
			{
				array[21] = 0;
			}
			array[22] = Convert.ToByte(((Control)textBoxL1FreeM3).Text);
			array[23] = Convert.ToByte(((Control)textBoxL1FreeH3).Text);
			if (((Control)comboBoxL1Free4).Text == "通")
			{
				array[24] = 1;
			}
			else
			{
				array[24] = 0;
			}
			array[25] = Convert.ToByte(((Control)textBoxL1FreeM4).Text);
			array[26] = Convert.ToByte(((Control)textBoxL1FreeH4).Text);
			if (((Control)comboBoxL1Free5).Text == "通")
			{
				array[27] = 1;
			}
			else
			{
				array[27] = 0;
			}
			array[28] = Convert.ToByte(((Control)textBoxL1FreeM5).Text);
			array[29] = Convert.ToByte(((Control)textBoxL1FreeH5).Text);
			if (((Control)comboBoxL1Free6).Text == "通")
			{
				array[30] = 1;
			}
			else
			{
				array[30] = 0;
			}
			array[31] = Convert.ToByte(((Control)textBoxL1FreeM6).Text);
			array[32] = Convert.ToByte(((Control)textBoxL1FreeH6).Text);
			if (((Control)comboBoxL1Free7).Text == "通")
			{
				array[33] = 1;
			}
			else
			{
				array[33] = 0;
			}
			array[34] = Convert.ToByte(((Control)textBoxL1FreeM7).Text);
			array[35] = Convert.ToByte(((Control)textBoxL1FreeH7).Text);
			if (((Control)comboBoxL1Free8).Text == "通")
			{
				array[36] = 1;
			}
			else
			{
				array[36] = 0;
			}
			array[37] = Convert.ToByte(((Control)textBoxL1FreeM8).Text);
			array[38] = Convert.ToByte(((Control)textBoxL1FreeH8).Text);
			if (((Control)comboBoxL1Work1).Text == "通")
			{
				array[39] = 1;
			}
			else
			{
				array[39] = 0;
			}
			array[40] = Convert.ToByte(((Control)textBoxL1WorkM1).Text);
			array[41] = Convert.ToByte(((Control)textBoxL1WorkH1).Text);
			if (((Control)comboBoxL1Work2).Text == "通")
			{
				array[42] = 1;
			}
			else
			{
				array[42] = 0;
			}
			array[43] = Convert.ToByte(((Control)textBoxL1WorkM2).Text);
			array[44] = Convert.ToByte(((Control)textBoxL1WorkH2).Text);
			if (((Control)comboBoxL1Work3).Text == "通")
			{
				array[45] = 1;
			}
			else
			{
				array[45] = 0;
			}
			array[46] = Convert.ToByte(((Control)textBoxL1WorkM3).Text);
			array[47] = Convert.ToByte(((Control)textBoxL1WorkH3).Text);
			if (((Control)comboBoxL1Work4).Text == "通")
			{
				array[48] = 1;
			}
			else
			{
				array[48] = 0;
			}
			array[49] = Convert.ToByte(((Control)textBoxL1WorkM4).Text);
			array[50] = Convert.ToByte(((Control)textBoxL1WorkH4).Text);
			if (((Control)comboBoxL1Work5).Text == "通")
			{
				array[51] = 1;
			}
			else
			{
				array[51] = 0;
			}
			array[52] = Convert.ToByte(((Control)textBoxL1WorkM5).Text);
			array[53] = Convert.ToByte(((Control)textBoxL1WorkH5).Text);
			if (((Control)comboBoxL1Work6).Text == "通")
			{
				array[54] = 1;
			}
			else
			{
				array[54] = 0;
			}
			array[55] = Convert.ToByte(((Control)textBoxL1WorkM6).Text);
			array[56] = Convert.ToByte(((Control)textBoxL1WorkH6).Text);
			if (((Control)comboBoxL1Work7).Text == "通")
			{
				array[57] = 1;
			}
			else
			{
				array[57] = 0;
			}
			array[58] = Convert.ToByte(((Control)textBoxL1WorkM7).Text);
			array[59] = Convert.ToByte(((Control)textBoxL1WorkH7).Text);
			if (((Control)comboBoxL1Work8).Text == "通")
			{
				array[60] = 1;
			}
			else
			{
				array[60] = 0;
			}
			array[61] = Convert.ToByte(((Control)textBoxL1WorkM8).Text);
			array[62] = Convert.ToByte(((Control)textBoxL1WorkH8).Text);
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button7_Click(object sender, EventArgs e)
	{
		//IL_0203: Unknown result type (might be due to invalid IL or missing references)
		//IL_024d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0224: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[20];
		byte[] response = GetResponseCount();
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 5;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 5;
		array[6] = 10;
		if (checkBoxForceEN1.Checked)
		{
			array[7] = 1;
			if (L1ON.Checked)
			{
				array[8] = 1;
				if (L1Open.Checked)
				{
					array[9] = 1;
				}
				else
				{
					array[9] = 0;
				}
			}
			else
			{
				array[8] = 0;
				array[9] = 0;
			}
		}
		if (checkBoxForceEN2.Checked)
		{
			array[10] = 1;
			if (L2ON.Checked)
			{
				array[11] = 1;
				if (L2Open.Checked)
				{
					array[12] = 1;
				}
				else
				{
					array[12] = 0;
				}
			}
			else
			{
				array[11] = 0;
				array[12] = 0;
			}
		}
		if (checkBoxForceEN3.Checked)
		{
			array[13] = 1;
			if (L3ON.Checked)
			{
				array[14] = 1;
				if (L3Open.Checked)
				{
					array[15] = 1;
				}
				else
				{
					array[15] = 0;
				}
			}
			else
			{
				array[14] = 0;
				array[15] = 0;
			}
		}
		array[16] = 0;
		array[17] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 表号读取_Click(object sender, EventArgs e)
	{
		//IL_0106: Unknown result type (might be due to invalid IL or missing references)
		//IL_0215: Unknown result type (might be due to invalid IL or missing references)
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		string text = "";
		int[] array = new int[6];
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array2 = new byte[8];
		byte[] response = new byte[11];
		byte[] CRC = new byte[2];
		array2[0] = Convert.ToByte(Variable.Address);
		array2[1] = 3;
		if (MeterType == 3)
		{
			array2[2] = 9;
			array2[3] = 5;
		}
		else
		{
			array2[2] = 3;
			array2[3] = 98;
		}
		array2[4] = 0;
		array2[5] = 3;
		m.GetCRC(array2, ref CRC);
		array2[^2] = CRC[0];
		array2[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array2, 0, array2.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			for (int i = 0; i < 6; i++)
			{
				array[i] = response[3 + i] / 16 * 10 + response[3 + i] % 16;
			}
			for (int j = 0; j < 6; j++)
			{
				text = ((array[j] != 0) ? ((array[j] >= 10 || array[j] <= 0) ? (text + array[j]) : (text + "0" + array[j])) : (text + "00"));
			}
			((Control)textBox8).Text = text;
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取错误！");
		}
	}

	private void ReadTimeControl_Click(object sender, EventArgs e)
	{
		//IL_0125: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a84: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b79: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0aac: Unknown result type (might be due to invalid IL or missing references)
		//IL_340e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ba1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0977: Unknown result type (might be due to invalid IL or missing references)
		//IL_014c: Unknown result type (might be due to invalid IL or missing references)
		if (MeterType == 3)
		{
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array = new byte[8];
			byte[] response = new byte[59];
			byte[] CRC = new byte[2];
			array[0] = Convert.ToByte(Variable.Address);
			array[1] = 3;
			if (SKL2.Checked)
			{
				array[0] = Convert.ToByte(array[0] + 1);
			}
			if (SKL3.Checked)
			{
				array[0] = Convert.ToByte(array[0] + 2);
			}
			array[2] = 6;
			array[3] = 0;
			array[4] = 0;
			array[5] = 27;
			m.GetCRC(array, ref CRC);
			array[^2] = CRC[0];
			array[^1] = CRC[1];
			try
			{
				Modbus.sp.Write(array, 0, array.Length);
				m.GetResponse(ref response);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response, 0))
			{
				MessageBox.Show(" Set successfully！");
				if (((response[3] << 8) | response[4]) == 0)
				{
					CloseTime.Checked = true;
				}
				else
				{
					OpenTime.Checked = true;
				}
				if (response[5] == 1)
				{
					((ListControl)comboBoxL1Free1).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free1).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM1).Text = response[6].ToString("f0");
				((Control)textBoxL1FreeH1).Text = response[7].ToString("f0");
				if (response[8] == 1)
				{
					((ListControl)comboBoxL1Free2).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free2).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM2).Text = response[9].ToString("f0");
				((Control)textBoxL1FreeH2).Text = response[10].ToString("f0");
				if (response[11] == 1)
				{
					((ListControl)comboBoxL1Free3).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free3).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM3).Text = response[12].ToString("f0");
				((Control)textBoxL1FreeH3).Text = response[13].ToString("f0");
				if (response[14] == 1)
				{
					((ListControl)comboBoxL1Free4).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free4).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM4).Text = response[15].ToString("f0");
				((Control)textBoxL1FreeH4).Text = response[16].ToString("f0");
				if (response[17] == 1)
				{
					((ListControl)comboBoxL1Free5).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free5).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM5).Text = response[18].ToString("f0");
				((Control)textBoxL1FreeH5).Text = response[19].ToString("f0");
				if (response[20] == 1)
				{
					((ListControl)comboBoxL1Free6).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free6).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM6).Text = response[21].ToString("f0");
				((Control)textBoxL1FreeH6).Text = response[22].ToString("f0");
				if (response[23] == 1)
				{
					((ListControl)comboBoxL1Free7).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free7).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM7).Text = response[24].ToString("f0");
				((Control)textBoxL1FreeH7).Text = response[25].ToString("f0");
				if (response[26] == 1)
				{
					((ListControl)comboBoxL1Free8).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free8).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM8).Text = response[27].ToString("f0");
				((Control)textBoxL1FreeH8).Text = response[28].ToString("f0");
				if (response[29] == 1)
				{
					((ListControl)comboBoxL1Work1).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work1).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM1).Text = response[30].ToString("f0");
				((Control)textBoxL1WorkH1).Text = response[31].ToString("f0");
				if (response[32] == 1)
				{
					((ListControl)comboBoxL1Work2).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work2).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM2).Text = response[33].ToString("f0");
				((Control)textBoxL1WorkH2).Text = response[34].ToString("f0");
				if (response[35] == 1)
				{
					((ListControl)comboBoxL1Work3).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work3).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM3).Text = response[36].ToString("f0");
				((Control)textBoxL1WorkH3).Text = response[37].ToString("f0");
				if (response[38] == 1)
				{
					((ListControl)comboBoxL1Work4).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work4).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM4).Text = response[39].ToString("f0");
				((Control)textBoxL1WorkH4).Text = response[40].ToString("f0");
				if (response[41] == 1)
				{
					((ListControl)comboBoxL1Work5).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work5).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM5).Text = response[42].ToString("f0");
				((Control)textBoxL1WorkH5).Text = response[43].ToString("f0");
				if (response[44] == 1)
				{
					((ListControl)comboBoxL1Work6).SelectedIndex = 0;
				}
				((Control)textBoxL1WorkM6).Text = response[45].ToString("f0");
				((Control)textBoxL1WorkH6).Text = response[46].ToString("f0");
				if (response[47] == 1)
				{
					((ListControl)comboBoxL1Work7).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work7).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM7).Text = response[48].ToString("f0");
				((Control)textBoxL1WorkH7).Text = response[49].ToString("f0");
				if (response[50] == 1)
				{
					((ListControl)comboBoxL1Work8).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work8).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM8).Text = response[51].ToString("f0");
				((Control)textBoxL1WorkH8).Text = response[52].ToString("f0");
				((Control)textBox1).Text = response[55].ToString("f0");
				((Control)textBox2).Text = response[56].ToString("f0");
				if (((response[54] >> 7) & 1) == 1)
				{
					checkBoxL1Sun.Checked = true;
				}
				else
				{
					checkBoxL1Sun.Checked = false;
				}
				if (((response[54] >> 6) & 1) == 1)
				{
					checkBoxL1Sat.Checked = true;
				}
				else
				{
					checkBoxL1Sat.Checked = false;
				}
				if (((response[54] >> 5) & 1) == 1)
				{
					checkBoxL1Fri.Checked = true;
				}
				else
				{
					checkBoxL1Fri.Checked = false;
				}
				if (((response[54] >> 4) & 1) == 1)
				{
					checkBoxL1Thu.Checked = true;
				}
				else
				{
					checkBoxL1Thu.Checked = false;
				}
				if (((response[54] >> 3) & 1) == 1)
				{
					checkBoxL1Wed.Checked = true;
				}
				else
				{
					checkBoxL1Wed.Checked = false;
				}
				if (((response[54] >> 2) & 1) == 1)
				{
					checkBoxL1Tue.Checked = true;
				}
				else
				{
					checkBoxL1Tue.Checked = false;
				}
				if (((response[54] >> 1) & 1) == 1)
				{
					checkBoxL1Mon.Checked = true;
				}
				else
				{
					checkBoxL1Mon.Checked = false;
				}
				主轮抄定时器.Enabled = true;
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
		}
		else if (MeterType == 2)
		{
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array2 = new byte[8];
			byte[] response2 = new byte[163];
			byte[] CRC2 = new byte[2];
			array2[0] = Convert.ToByte(Variable.Address);
			array2[1] = 3;
			array2[2] = 4;
			array2[3] = 32;
			array2[4] = 0;
			array2[5] = 79;
			m.GetCRC(array2, ref CRC2);
			array2[^2] = CRC2[0];
			array2[^1] = CRC2[1];
			try
			{
				Modbus.sp.Write(array2, 0, array2.Length);
				m.GetResponse(ref response2);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex2)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex2.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response2, 0))
			{
				MessageBox.Show(" Set successfully！");
				if (SKALL.Checked)
				{
					if (((response2[3] << 8) | response2[4]) == 0)
					{
						CloseTime.Checked = true;
					}
					else
					{
						OpenTime.Checked = true;
					}
					if (((response2[6] >> 7) & 1) == 1)
					{
						checkBoxL1Sun.Checked = true;
					}
					else
					{
						checkBoxL1Sun.Checked = false;
					}
					if (((response2[6] >> 6) & 1) == 1)
					{
						checkBoxL1Sat.Checked = true;
					}
					else
					{
						checkBoxL1Sat.Checked = false;
					}
					if (((response2[6] >> 5) & 1) == 1)
					{
						checkBoxL1Fri.Checked = true;
					}
					else
					{
						checkBoxL1Fri.Checked = false;
					}
					if (((response2[6] >> 4) & 1) == 1)
					{
						checkBoxL1Thu.Checked = true;
					}
					else
					{
						checkBoxL1Thu.Checked = false;
					}
					if (((response2[6] >> 3) & 1) == 1)
					{
						checkBoxL1Wed.Checked = true;
					}
					else
					{
						checkBoxL1Wed.Checked = false;
					}
					if (((response2[6] >> 2) & 1) == 1)
					{
						checkBoxL1Tue.Checked = true;
					}
					else
					{
						checkBoxL1Tue.Checked = false;
					}
					if (((response2[6] >> 1) & 1) == 1)
					{
						checkBoxL1Mon.Checked = true;
					}
					else
					{
						checkBoxL1Mon.Checked = false;
					}
					((Control)textBox1).Text = response2[7].ToString("f0");
					((Control)textBox2).Text = response2[8].ToString("f0");
					if (response2[9] == 1)
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM1).Text = response2[10].ToString("f0");
					((Control)textBoxL1FreeH1).Text = response2[11].ToString("f0");
					if (response2[12] == 1)
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM2).Text = response2[13].ToString("f0");
					((Control)textBoxL1FreeH2).Text = response2[14].ToString("f0");
					if (response2[15] == 1)
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM3).Text = response2[16].ToString("f0");
					((Control)textBoxL1FreeH3).Text = response2[17].ToString("f0");
					if (response2[18] == 1)
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM4).Text = response2[19].ToString("f0");
					((Control)textBoxL1FreeH4).Text = response2[20].ToString("f0");
					if (response2[21] == 1)
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM5).Text = response2[22].ToString("f0");
					((Control)textBoxL1FreeH5).Text = response2[23].ToString("f0");
					if (response2[24] == 1)
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM6).Text = response2[25].ToString("f0");
					((Control)textBoxL1FreeH6).Text = response2[26].ToString("f0");
					if (response2[27] == 1)
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM7).Text = response2[28].ToString("f0");
					((Control)textBoxL1FreeH7).Text = response2[29].ToString("f0");
					if (response2[30] == 1)
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM8).Text = response2[31].ToString("f0");
					((Control)textBoxL1FreeH8).Text = response2[32].ToString("f0");
					if (response2[33] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM1).Text = response2[34].ToString("f0");
					((Control)textBoxL1WorkH1).Text = response2[35].ToString("f0");
					if (response2[36] == 1)
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM2).Text = response2[37].ToString("f0");
					((Control)textBoxL1WorkH2).Text = response2[38].ToString("f0");
					if (response2[39] == 1)
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM3).Text = response2[40].ToString("f0");
					((Control)textBoxL1WorkH3).Text = response2[41].ToString("f0");
					if (response2[42] == 1)
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM4).Text = response2[43].ToString("f0");
					((Control)textBoxL1WorkH4).Text = response2[44].ToString("f0");
					if (response2[45] == 1)
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM5).Text = response2[46].ToString("f0");
					((Control)textBoxL1WorkH5).Text = response2[47].ToString("f0");
					if (response2[48] == 1)
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM6).Text = response2[49].ToString("f0");
					((Control)textBoxL1WorkH6).Text = response2[50].ToString("f0");
					if (response2[51] == 1)
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM7).Text = response2[52].ToString("f0");
					((Control)textBoxL1WorkH7).Text = response2[53].ToString("f0");
					if (response2[54] == 1)
					{
						((ListControl)comboBoxL1Work8).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work8).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM8).Text = response2[55].ToString("f0");
					((Control)textBoxL1WorkH8).Text = response2[56].ToString("f0");
					主轮抄定时器.Enabled = true;
				}
				else if (SKL1.Checked)
				{
					if (((response2[4] >> 2) & 1) == 1)
					{
						CloseTime.Checked = true;
					}
					else
					{
						OpenTime.Checked = true;
					}
					if (((response2[6] >> 7) & 1) == 1)
					{
						checkBoxL1Sun.Checked = true;
					}
					else
					{
						checkBoxL1Sun.Checked = false;
					}
					if (((response2[6] >> 6) & 1) == 1)
					{
						checkBoxL1Sat.Checked = true;
					}
					else
					{
						checkBoxL1Sat.Checked = false;
					}
					if (((response2[6] >> 5) & 1) == 1)
					{
						checkBoxL1Fri.Checked = true;
					}
					else
					{
						checkBoxL1Fri.Checked = false;
					}
					if (((response2[6] >> 4) & 1) == 1)
					{
						checkBoxL1Thu.Checked = true;
					}
					else
					{
						checkBoxL1Thu.Checked = false;
					}
					if (((response2[6] >> 3) & 1) == 1)
					{
						checkBoxL1Wed.Checked = true;
					}
					else
					{
						checkBoxL1Wed.Checked = false;
					}
					if (((response2[6] >> 2) & 1) == 1)
					{
						checkBoxL1Tue.Checked = true;
					}
					else
					{
						checkBoxL1Tue.Checked = false;
					}
					if (((response2[6] >> 1) & 1) == 1)
					{
						checkBoxL1Mon.Checked = true;
					}
					else
					{
						checkBoxL1Mon.Checked = false;
					}
					((Control)textBox1).Text = response2[7].ToString("f0");
					((Control)textBox2).Text = response2[8].ToString("f0");
					if (response2[9] == 1)
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM1).Text = response2[10].ToString("f0");
					((Control)textBoxL1FreeH1).Text = response2[11].ToString("f0");
					if (response2[12] == 1)
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM2).Text = response2[13].ToString("f0");
					((Control)textBoxL1FreeH2).Text = response2[14].ToString("f0");
					if (response2[15] == 1)
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM3).Text = response2[16].ToString("f0");
					((Control)textBoxL1FreeH3).Text = response2[17].ToString("f0");
					if (response2[18] == 1)
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM4).Text = response2[19].ToString("f0");
					((Control)textBoxL1FreeH4).Text = response2[20].ToString("f0");
					if (response2[21] == 1)
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM5).Text = response2[22].ToString("f0");
					((Control)textBoxL1FreeH5).Text = response2[23].ToString("f0");
					if (response2[24] == 1)
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM6).Text = response2[25].ToString("f0");
					((Control)textBoxL1FreeH6).Text = response2[26].ToString("f0");
					if (response2[27] == 1)
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM7).Text = response2[28].ToString("f0");
					((Control)textBoxL1FreeH7).Text = response2[29].ToString("f0");
					if (response2[30] == 1)
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 1;
					}
					((Control)textBoxL1FreeM8).Text = response2[31].ToString("f0");
					((Control)textBoxL1FreeH8).Text = response2[32].ToString("f0");
					if (response2[33] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM1).Text = response2[34].ToString("f0");
					((Control)textBoxL1WorkH1).Text = response2[35].ToString("f0");
					if (response2[36] == 1)
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM2).Text = response2[37].ToString("f0");
					((Control)textBoxL1WorkH2).Text = response2[38].ToString("f0");
					if (response2[39] == 1)
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM3).Text = response2[40].ToString("f0");
					((Control)textBoxL1WorkH3).Text = response2[41].ToString("f0");
					if (response2[42] == 1)
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM4).Text = response2[43].ToString("f0");
					((Control)textBoxL1WorkH4).Text = response2[44].ToString("f0");
					if (response2[45] == 1)
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM5).Text = response2[46].ToString("f0");
					((Control)textBoxL1WorkH5).Text = response2[47].ToString("f0");
					if (response2[48] == 1)
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM6).Text = response2[49].ToString("f0");
					((Control)textBoxL1WorkH6).Text = response2[50].ToString("f0");
					if (response2[51] == 1)
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM7).Text = response2[52].ToString("f0");
					((Control)textBoxL1WorkH7).Text = response2[53].ToString("f0");
					if (response2[54] == 1)
					{
						((ListControl)comboBoxL1Work8).SelectedIndex = 0;
					}
					else
					{
						((ListControl)comboBoxL1Work8).SelectedIndex = 1;
					}
					((Control)textBoxL1WorkM8).Text = response2[55].ToString("f0");
					((Control)textBoxL1WorkH8).Text = response2[56].ToString("f0");
					主轮抄定时器.Enabled = true;
				}
				else if (SKL2.Checked)
				{
					if (((response2[4] >> 1) & 1) == 1)
					{
						CloseTime.Checked = true;
					}
					else
					{
						OpenTime.Checked = true;
					}
					if (((response2[58] >> 7) & 1) == 128)
					{
						checkBoxL1Sun.Checked = true;
					}
					if (((response2[58] >> 6) & 1) == 128)
					{
						checkBoxL1Sat.Checked = true;
					}
					if (((response2[58] >> 5) & 1) == 128)
					{
						checkBoxL1Fri.Checked = true;
					}
					if (((response2[58] >> 4) & 1) == 128)
					{
						checkBoxL1Thu.Checked = true;
					}
					if (((response2[58] >> 3) & 1) == 128)
					{
						checkBoxL1Wed.Checked = true;
					}
					if (((response2[58] >> 2) & 1) == 128)
					{
						checkBoxL1Tue.Checked = true;
					}
					if (((response2[58] >> 1) & 1) == 128)
					{
						checkBoxL1Mon.Checked = true;
					}
					((Control)textBox1).Text = response2[59].ToString("f0");
					((Control)textBox2).Text = response2[60].ToString("f0");
					if (response2[61] == 1)
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM1).Text = response2[62].ToString("f0");
					((Control)textBoxL1FreeH1).Text = response2[63].ToString("f0");
					if (response2[64] == 1)
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM2).Text = response2[65].ToString("f0");
					((Control)textBoxL1FreeH2).Text = response2[66].ToString("f0");
					if (response2[67] == 1)
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM3).Text = response2[68].ToString("f0");
					((Control)textBoxL1FreeH3).Text = response2[69].ToString("f0");
					if (response2[70] == 1)
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM4).Text = response2[71].ToString("f0");
					((Control)textBoxL1FreeH4).Text = response2[72].ToString("f0");
					if (response2[73] == 1)
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM5).Text = response2[74].ToString("f0");
					((Control)textBoxL1FreeH5).Text = response2[75].ToString("f0");
					if (response2[76] == 1)
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM6).Text = response2[77].ToString("f0");
					((Control)textBoxL1FreeH6).Text = response2[78].ToString("f0");
					if (response2[79] == 1)
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM7).Text = response2[80].ToString("f0");
					((Control)textBoxL1FreeH7).Text = response2[81].ToString("f0");
					if (response2[82] == 1)
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM8).Text = response2[83].ToString("f0");
					((Control)textBoxL1FreeH8).Text = response2[84].ToString("f0");
					if (response2[85] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM1).Text = response2[86].ToString("f0");
					((Control)textBoxL1WorkH1).Text = response2[87].ToString("f0");
					if (response2[88] == 1)
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM2).Text = response2[89].ToString("f0");
					((Control)textBoxL1WorkH2).Text = response2[90].ToString("f0");
					if (response2[91] == 1)
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM3).Text = response2[92].ToString("f0");
					((Control)textBoxL1WorkH3).Text = response2[93].ToString("f0");
					if (response2[94] == 1)
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM4).Text = response2[95].ToString("f0");
					((Control)textBoxL1WorkH4).Text = response2[96].ToString("f0");
					if (response2[97] == 1)
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM5).Text = response2[98].ToString("f0");
					((Control)textBoxL1WorkH5).Text = response2[99].ToString("f0");
					if (response2[100] == 1)
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM6).Text = response2[101].ToString("f0");
					((Control)textBoxL1WorkH6).Text = response2[102].ToString("f0");
					if (response2[103] == 1)
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM7).Text = response2[104].ToString("f0");
					((Control)textBoxL1WorkH7).Text = response2[105].ToString("f0");
					if (response2[106] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM8).Text = response2[107].ToString("f0");
					((Control)textBoxL1WorkH8).Text = response2[108].ToString("f0");
					主轮抄定时器.Enabled = true;
				}
				else if (SKL3.Checked)
				{
					if ((response2[4] & 1) == 1)
					{
						CloseTime.Checked = true;
					}
					else
					{
						OpenTime.Checked = true;
					}
					if (((response2[110] >> 7) & 1) == 128)
					{
						checkBoxL1Sun.Checked = true;
					}
					if (((response2[110] >> 6) & 1) == 128)
					{
						checkBoxL1Sat.Checked = true;
					}
					if (((response2[110] >> 5) & 1) == 128)
					{
						checkBoxL1Fri.Checked = true;
					}
					if (((response2[110] >> 4) & 1) == 128)
					{
						checkBoxL1Thu.Checked = true;
					}
					if (((response2[110] >> 3) & 1) == 128)
					{
						checkBoxL1Wed.Checked = true;
					}
					if (((response2[110] >> 2) & 1) == 128)
					{
						checkBoxL1Tue.Checked = true;
					}
					if (((response2[110] >> 1) & 1) == 128)
					{
						checkBoxL1Mon.Checked = true;
					}
					((Control)textBox1).Text = response2[111].ToString("f0");
					((Control)textBox2).Text = response2[112].ToString("f0");
					if (response2[113] == 1)
					{
						((ListControl)comboBoxL1Free1).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM1).Text = response2[114].ToString("f0");
					((Control)textBoxL1FreeH1).Text = response2[115].ToString("f0");
					if (response2[116] == 1)
					{
						((ListControl)comboBoxL1Free2).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM2).Text = response2[117].ToString("f0");
					((Control)textBoxL1FreeH2).Text = response2[118].ToString("f0");
					if (response2[119] == 1)
					{
						((ListControl)comboBoxL1Free3).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM3).Text = response2[120].ToString("f0");
					((Control)textBoxL1FreeH3).Text = response2[121].ToString("f0");
					if (response2[122] == 1)
					{
						((ListControl)comboBoxL1Free4).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM4).Text = response2[123].ToString("f0");
					((Control)textBoxL1FreeH4).Text = response2[124].ToString("f0");
					if (response2[125] == 1)
					{
						((ListControl)comboBoxL1Free5).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM5).Text = response2[126].ToString("f0");
					((Control)textBoxL1FreeH5).Text = response2[127].ToString("f0");
					if (response2[128] == 1)
					{
						((ListControl)comboBoxL1Free6).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM6).Text = response2[129].ToString("f0");
					((Control)textBoxL1FreeH6).Text = response2[130].ToString("f0");
					if (response2[131] == 1)
					{
						((ListControl)comboBoxL1Free7).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM7).Text = response2[132].ToString("f0");
					((Control)textBoxL1FreeH7).Text = response2[133].ToString("f0");
					if (response2[134] == 1)
					{
						((ListControl)comboBoxL1Free8).SelectedIndex = 0;
					}
					((Control)textBoxL1FreeM8).Text = response2[135].ToString("f0");
					((Control)textBoxL1FreeH8).Text = response2[136].ToString("f0");
					if (response2[137] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM1).Text = response2[138].ToString("f0");
					((Control)textBoxL1WorkH1).Text = response2[139].ToString("f0");
					if (response2[140] == 1)
					{
						((ListControl)comboBoxL1Work2).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM2).Text = response2[141].ToString("f0");
					((Control)textBoxL1WorkH2).Text = response2[142].ToString("f0");
					if (response2[143] == 1)
					{
						((ListControl)comboBoxL1Work3).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM3).Text = response2[144].ToString("f0");
					((Control)textBoxL1WorkH3).Text = response2[145].ToString("f0");
					if (response2[146] == 1)
					{
						((ListControl)comboBoxL1Work4).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM4).Text = response2[147].ToString("f0");
					((Control)textBoxL1WorkH4).Text = response2[148].ToString("f0");
					if (response2[149] == 1)
					{
						((ListControl)comboBoxL1Work5).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM5).Text = response2[150].ToString("f0");
					((Control)textBoxL1WorkH5).Text = response2[151].ToString("f0");
					if (response2[152] == 1)
					{
						((ListControl)comboBoxL1Work6).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM6).Text = response2[153].ToString("f0");
					((Control)textBoxL1WorkH6).Text = response2[154].ToString("f0");
					if (response2[155] == 1)
					{
						((ListControl)comboBoxL1Work7).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM7).Text = response2[156].ToString("f0");
					((Control)textBoxL1WorkH7).Text = response2[157].ToString("f0");
					if (response2[158] == 1)
					{
						((ListControl)comboBoxL1Work1).SelectedIndex = 0;
					}
					((Control)textBoxL1WorkM8).Text = response2[159].ToString("f0");
					((Control)textBoxL1WorkH8).Text = response2[160].ToString("f0");
					主轮抄定时器.Enabled = true;
				}
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
		}
		else
		{
			if (MeterType != 1)
			{
				return;
			}
			主轮抄定时器.Enabled = false;
			Modbus.sp.DiscardOutBuffer();
			Modbus.sp.DiscardInBuffer();
			byte[] array3 = new byte[8];
			byte[] response3 = new byte[59];
			byte[] CRC3 = new byte[2];
			array3[0] = Convert.ToByte(Variable.Address);
			array3[1] = 3;
			array3[2] = 4;
			array3[3] = 32;
			array3[4] = 0;
			array3[5] = 27;
			m.GetCRC(array3, ref CRC3);
			array3[^2] = CRC3[0];
			array3[^1] = CRC3[1];
			try
			{
				Modbus.sp.Write(array3, 0, array3.Length);
				m.GetResponse(ref response3);
				PortFalshGOOD();
				Thread.Sleep(20);
			}
			catch (Exception ex3)
			{
				主轮抄定时器.Enabled = true;
				PortFalshERROR();
				MessageBox.Show(ex3.Message + "Please confirm the serial port and address settings！");
				return;
			}
			if (m.CheckResponse(response3, 0))
			{
				MessageBox.Show(" Set successfully！");
				if (((response3[4] >> 3) & 1) == 1)
				{
					CloseTime.Checked = true;
				}
				else
				{
					OpenTime.Checked = true;
				}
				if (((response3[6] >> 7) & 1) == 1)
				{
					checkBoxL1Sun.Checked = true;
				}
				else
				{
					checkBoxL1Sun.Checked = false;
				}
				if (((response3[6] >> 6) & 1) == 1)
				{
					checkBoxL1Sat.Checked = true;
				}
				else
				{
					checkBoxL1Sat.Checked = false;
				}
				if (((response3[6] >> 5) & 1) == 1)
				{
					checkBoxL1Fri.Checked = true;
				}
				else
				{
					checkBoxL1Fri.Checked = false;
				}
				if (((response3[6] >> 4) & 1) == 1)
				{
					checkBoxL1Thu.Checked = true;
				}
				else
				{
					checkBoxL1Thu.Checked = false;
				}
				if (((response3[6] >> 3) & 1) == 1)
				{
					checkBoxL1Wed.Checked = true;
				}
				else
				{
					checkBoxL1Wed.Checked = false;
				}
				if (((response3[6] >> 2) & 1) == 1)
				{
					checkBoxL1Tue.Checked = true;
				}
				else
				{
					checkBoxL1Tue.Checked = false;
				}
				if (((response3[6] >> 1) & 1) == 1)
				{
					checkBoxL1Mon.Checked = true;
				}
				else
				{
					checkBoxL1Mon.Checked = false;
				}
				((Control)textBox1).Text = response3[7].ToString("f0");
				((Control)textBox2).Text = response3[8].ToString("f0");
				if (response3[9] == 1)
				{
					((ListControl)comboBoxL1Free1).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free1).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM1).Text = response3[10].ToString("f0");
				((Control)textBoxL1FreeH1).Text = response3[11].ToString("f0");
				if (response3[12] == 1)
				{
					((ListControl)comboBoxL1Free2).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free2).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM2).Text = response3[13].ToString("f0");
				((Control)textBoxL1FreeH2).Text = response3[14].ToString("f0");
				if (response3[15] == 1)
				{
					((ListControl)comboBoxL1Free3).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free3).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM3).Text = response3[16].ToString("f0");
				((Control)textBoxL1FreeH3).Text = response3[17].ToString("f0");
				if (response3[18] == 1)
				{
					((ListControl)comboBoxL1Free4).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free4).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM4).Text = response3[19].ToString("f0");
				((Control)textBoxL1FreeH4).Text = response3[20].ToString("f0");
				if (response3[21] == 1)
				{
					((ListControl)comboBoxL1Free5).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free5).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM5).Text = response3[22].ToString("f0");
				((Control)textBoxL1FreeH5).Text = response3[23].ToString("f0");
				if (response3[24] == 1)
				{
					((ListControl)comboBoxL1Free6).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free6).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM6).Text = response3[25].ToString("f0");
				((Control)textBoxL1FreeH6).Text = response3[26].ToString("f0");
				if (response3[27] == 1)
				{
					((ListControl)comboBoxL1Free7).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free7).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM7).Text = response3[28].ToString("f0");
				((Control)textBoxL1FreeH7).Text = response3[29].ToString("f0");
				if (response3[30] == 1)
				{
					((ListControl)comboBoxL1Free8).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Free8).SelectedIndex = 1;
				}
				((Control)textBoxL1FreeM8).Text = response3[31].ToString("f0");
				((Control)textBoxL1FreeH8).Text = response3[32].ToString("f0");
				if (response3[33] == 1)
				{
					((ListControl)comboBoxL1Work1).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work1).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM1).Text = response3[34].ToString("f0");
				((Control)textBoxL1WorkH1).Text = response3[35].ToString("f0");
				if (response3[36] == 1)
				{
					((ListControl)comboBoxL1Work2).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work2).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM2).Text = response3[37].ToString("f0");
				((Control)textBoxL1WorkH2).Text = response3[38].ToString("f0");
				if (response3[39] == 1)
				{
					((ListControl)comboBoxL1Work3).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work3).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM3).Text = response3[40].ToString("f0");
				((Control)textBoxL1WorkH3).Text = response3[41].ToString("f0");
				if (response3[42] == 1)
				{
					((ListControl)comboBoxL1Work4).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work4).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM4).Text = response3[43].ToString("f0");
				((Control)textBoxL1WorkH4).Text = response3[44].ToString("f0");
				if (response3[45] == 1)
				{
					((ListControl)comboBoxL1Work5).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work5).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM5).Text = response3[46].ToString("f0");
				((Control)textBoxL1WorkH5).Text = response3[47].ToString("f0");
				if (response3[48] == 1)
				{
					((ListControl)comboBoxL1Work6).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work6).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM6).Text = response3[49].ToString("f0");
				((Control)textBoxL1WorkH6).Text = response3[50].ToString("f0");
				if (response3[51] == 1)
				{
					((ListControl)comboBoxL1Work7).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work7).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM7).Text = response3[52].ToString("f0");
				((Control)textBoxL1WorkH7).Text = response3[53].ToString("f0");
				if (response3[54] == 1)
				{
					((ListControl)comboBoxL1Work8).SelectedIndex = 0;
				}
				else
				{
					((ListControl)comboBoxL1Work8).SelectedIndex = 1;
				}
				((Control)textBoxL1WorkM8).Text = response3[55].ToString("f0");
				((Control)textBoxL1WorkH8).Text = response3[56].ToString("f0");
				主轮抄定时器.Enabled = true;
			}
			else
			{
				主轮抄定时器.Enabled = true;
				MessageBox.Show("Setting error！");
			}
		}
	}

	private void ADF300类型设置_Click(object sender, EventArgs e)
	{
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0177: Unknown result type (might be due to invalid IL or missing references)
		//IL_014e: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 16;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (I.Checked)
		{
			array[8] = 12;
		}
		else if (II.Checked)
		{
			array[8] = 24;
		}
		else if (III.Checked)
		{
			array[8] = 36;
		}
		else
		{
			array[8] = 24;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF300类型读取_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01be: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0195: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 16;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 12)
			{
				I.Checked = true;
				((Control)三相数量).Text = "4";
			}
			else if (response[4] == 24)
			{
				II.Checked = true;
				((Control)三相数量).Text = "8";
			}
			else if (response[4] == 36)
			{
				III.Checked = true;
				((Control)三相数量).Text = "12";
			}
			else
			{
				MessageBox.Show(" 返回数值不对！");
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取错误！");
		}
	}

	private void 读取ADF_Click(object sender, EventArgs e)
	{
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ff: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[25];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 80;
		array[4] = 0;
		array[5] = 10;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 1)
			{
				ADF三相三线.Checked = true;
			}
			else if (response[4] == 24)
			{
				ADF三相四线.Checked = true;
			}
			((Control)ADFPT).Text = ((response[5] << 8) | response[6]).ToString("f0");
			((Control)ADFCT1).Text = ((response[7] << 8) | response[8]).ToString("f0");
			((Control)ADFCT2).Text = ((response[9] << 8) | response[10]).ToString("f0");
			((Control)ADFCT3).Text = ((response[11] << 8) | response[12]).ToString("f0");
			((Control)ADFCT4).Text = ((response[13] << 8) | response[14]).ToString("f0");
			if (response[16] == 1)
			{
				ADF脉冲.Checked = true;
			}
			else
			{
				ADF电平.Checked = true;
			}
			((Control)ADF脉宽).Text = ((response[17] << 8) | response[18]).ToString("f0");
			((Control)ADF间隔).Text = ((response[19] << 8) | response[20]).ToString("f0");
			if (response[22] == 1)
			{
				有无线.Checked = true;
			}
			else
			{
				无无线.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 设置ADF_Click(object sender, EventArgs e)
	{
		//IL_0291: Unknown result type (might be due to invalid IL or missing references)
		//IL_02db: Unknown result type (might be due to invalid IL or missing references)
		//IL_02b2: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[29];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 80;
		array[4] = 0;
		array[5] = 10;
		array[6] = 20;
		array[7] = 0;
		if (ADF三相四线.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		array[9] = (byte)(Convert.ToInt16(((Control)ADFPT).Text) / 256);
		array[10] = (byte)Convert.ToInt16(((Control)ADFPT).Text);
		array[11] = (byte)(Convert.ToInt16(((Control)ADFCT1).Text) / 256);
		array[12] = (byte)Convert.ToInt16(((Control)ADFCT1).Text);
		array[13] = (byte)(Convert.ToInt16(((Control)ADFCT2).Text) / 256);
		array[14] = (byte)Convert.ToInt16(((Control)ADFCT2).Text);
		array[15] = (byte)(Convert.ToInt16(((Control)ADFCT3).Text) / 256);
		array[16] = (byte)Convert.ToInt16(((Control)ADFCT3).Text);
		array[17] = (byte)(Convert.ToInt16(((Control)ADFCT4).Text) / 256);
		array[18] = (byte)Convert.ToInt16(((Control)ADFCT4).Text);
		array[19] = 0;
		if (ADF脉冲.Checked)
		{
			array[20] = 1;
		}
		else
		{
			array[20] = 0;
		}
		array[21] = (byte)(Convert.ToInt16(((Control)ADF脉宽).Text) / 256);
		array[22] = (byte)Convert.ToInt16(((Control)ADF脉宽).Text);
		array[23] = (byte)(Convert.ToInt16(((Control)ADF间隔).Text) / 256);
		array[24] = (byte)Convert.ToInt16(((Control)ADF间隔).Text);
		array[25] = 0;
		if (有无线.Checked)
		{
			array[26] = 1;
		}
		else
		{
			array[26] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void groupBox28_Enter(object sender, EventArgs e)
	{
	}

	private void ADF电流_SelectedIndexChanged(object sender, EventArgs e)
	{
	}

	private void button6_Click(object sender, EventArgs e)
	{
		//IL_0825: Unknown result type (might be due to invalid IL or missing references)
		//IL_086f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0846: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[113];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		int[] array2 = new int[8];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		if (DDSYDTSY.Checked)
		{
			array[2] = 19;
			array[3] = 0;
		}
		else if (ADF300.Checked)
		{
			array[2] = 16;
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 52;
		array[6] = 104;
		array[7] = (byte)(Convert.ToInt16(((Control)无线调制信息).Text) >> 8);
		array[8] = (byte)Convert.ToInt16(((Control)无线调制信息).Text);
		array[9] = (byte)(Convert.ToInt16(((Control)数据上报间隔).Text) >> 8);
		array[10] = (byte)Convert.ToInt16(((Control)数据上报间隔).Text);
		string s = Convert.ToString(((Control)序列号).Text);
		byte[] bytes = Encoding.ASCII.GetBytes(s);
		int num = 16 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[11 + i] = bytes[i];
		}
		for (int j = 0; j < num; j++)
		{
			array[11 + bytes.Length + j] = 0;
		}
		array[27] = Convert.ToByte(((Control)IP1).Text);
		array[28] = Convert.ToByte(((Control)IP2).Text);
		array[29] = Convert.ToByte(((Control)IP3).Text);
		array[30] = Convert.ToByte(((Control)IP4).Text);
		array[31] = (byte)(Convert.ToInt16(((Control)端口号).Text) >> 8);
		array[32] = (byte)Convert.ToInt16(((Control)端口号).Text);
		array[33] = Convert.ToByte(((Control)协议模式).Text);
		array[34] = 0;
		string s2 = Convert.ToString(((Control)域名).Text);
		byte[] bytes2 = Encoding.ASCII.GetBytes(s2);
		int num2 = 24 - bytes2.Length;
		for (int k = 0; k < bytes2.Length; k++)
		{
			array[35 + k] = bytes2[k];
		}
		for (int l = 0; l < num2; l++)
		{
			array[35 + bytes2.Length + l] = 0;
		}
		array[59] = Convert.ToByte(((Control)设备数量).Text);
		array[60] = Convert.ToByte(((Control)数据段数量).Text);
		array[61] = Convert.ToByte(((Control)告警段数量).Text);
		array[62] = Convert.ToByte(((Control)TCP).Text);
		string s3 = ((Control)Addr1).Text.Substring(2, 4);
		array[63] = (byte)(short.Parse(s3, NumberStyles.HexNumber) >> 8);
		array[64] = (byte)short.Parse(s3, NumberStyles.HexNumber);
		string s4 = ((Control)Addr2).Text.Substring(2, 4);
		array[65] = (byte)(short.Parse(s4, NumberStyles.HexNumber) >> 8);
		array[66] = (byte)short.Parse(s4, NumberStyles.HexNumber);
		string s5 = ((Control)Addr3).Text.Substring(2, 4);
		array[67] = (byte)(short.Parse(s5, NumberStyles.HexNumber) >> 8);
		array[68] = (byte)short.Parse(s5, NumberStyles.HexNumber);
		string s6 = ((Control)Addr4).Text.Substring(2, 4);
		array[69] = (byte)(short.Parse(s6, NumberStyles.HexNumber) >> 8);
		array[70] = (byte)short.Parse(s6, NumberStyles.HexNumber);
		string s7 = ((Control)Addr5).Text.Substring(2, 4);
		array[71] = (byte)(short.Parse(s7, NumberStyles.HexNumber) >> 8);
		array[72] = (byte)short.Parse(s7, NumberStyles.HexNumber);
		string s8 = ((Control)Addr6).Text.Substring(2, 4);
		array[73] = (byte)(short.Parse(s8, NumberStyles.HexNumber) >> 8);
		array[74] = (byte)short.Parse(s8, NumberStyles.HexNumber);
		string s9 = ((Control)Addr7).Text.Substring(2, 4);
		array[75] = (byte)(short.Parse(s9, NumberStyles.HexNumber) >> 8);
		array[76] = (byte)short.Parse(s9, NumberStyles.HexNumber);
		string s10 = ((Control)Addr8).Text.Substring(2, 4);
		array[77] = (byte)(short.Parse(s10, NumberStyles.HexNumber) >> 8);
		array[78] = (byte)short.Parse(s10, NumberStyles.HexNumber);
		string s11 = ((Control)LONG1).Text.Substring(2, 4);
		array[79] = (byte)(short.Parse(s11, NumberStyles.HexNumber) >> 8);
		array[80] = (byte)short.Parse(s11, NumberStyles.HexNumber);
		string s12 = ((Control)LONG2).Text.Substring(2, 4);
		array[81] = (byte)(short.Parse(s12, NumberStyles.HexNumber) >> 8);
		array[82] = (byte)short.Parse(s12, NumberStyles.HexNumber);
		string s13 = ((Control)LONG3).Text.Substring(2, 4);
		array[83] = (byte)(short.Parse(s13, NumberStyles.HexNumber) >> 8);
		array[84] = (byte)short.Parse(s13, NumberStyles.HexNumber);
		string s14 = ((Control)LONG4).Text.Substring(2, 4);
		array[85] = (byte)(short.Parse(s14, NumberStyles.HexNumber) >> 8);
		array[86] = (byte)short.Parse(s14, NumberStyles.HexNumber);
		string s15 = ((Control)LONG5).Text.Substring(2, 4);
		array[87] = (byte)(short.Parse(s15, NumberStyles.HexNumber) >> 8);
		array[88] = (byte)short.Parse(s15, NumberStyles.HexNumber);
		string s16 = ((Control)LONG6).Text.Substring(2, 4);
		array[89] = (byte)(short.Parse(s16, NumberStyles.HexNumber) >> 8);
		array[90] = (byte)short.Parse(s16, NumberStyles.HexNumber);
		string s17 = ((Control)LONG7).Text.Substring(2, 4);
		array[91] = (byte)(short.Parse(s17, NumberStyles.HexNumber) >> 8);
		array[92] = (byte)short.Parse(s17, NumberStyles.HexNumber);
		string s18 = ((Control)LONG8).Text.Substring(2, 4);
		array[93] = (byte)(short.Parse(s18, NumberStyles.HexNumber) >> 8);
		array[94] = (byte)short.Parse(s18, NumberStyles.HexNumber);
		array[95] = (byte)(Convert.ToByte(((Control)ALMM1).Text) >> 8);
		array[96] = Convert.ToByte(((Control)ALMM1).Text);
		array[97] = (byte)(Convert.ToByte(((Control)ALMM2).Text) >> 8);
		array[98] = Convert.ToByte(((Control)ALMM2).Text);
		array[99] = (byte)(Convert.ToByte(((Control)ALMM3).Text) >> 8);
		array[100] = Convert.ToByte(((Control)ALMM3).Text);
		array[101] = (byte)(Convert.ToByte(((Control)ALMM4).Text) >> 8);
		array[102] = Convert.ToByte(((Control)ALMM4).Text);
		array[103] = (byte)(Convert.ToByte(((Control)ALMM5).Text) >> 8);
		array[104] = Convert.ToByte(((Control)ALMM5).Text);
		array[105] = (byte)(Convert.ToByte(((Control)ALMM6).Text) >> 8);
		array[106] = Convert.ToByte(((Control)ALMM6).Text);
		array[107] = (byte)(Convert.ToByte(((Control)ALMM7).Text) >> 8);
		array[108] = Convert.ToByte(((Control)ALMM7).Text);
		array[109] = (byte)(Convert.ToByte(((Control)ALMM8).Text) >> 8);
		array[110] = Convert.ToByte(((Control)ALMM8).Text);
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button8_Click(object sender, EventArgs e)
	{
		//IL_00e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0112: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[93];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 23;
		array[3] = 0;
		array[4] = 0;
		array[5] = 44;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(20);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
		}
		((Control)编号).Text = ((response[3] << 8) | response[4]).ToString("f0");
		((Control)软件版本号).Text = ((response[5] << 8) | response[6]).ToString("f0");
		((Control)连接状态值).Text = response[7].ToString("f0");
		((Control)连接状态信号值).Text = response[8].ToString("f0");
		((Control)系统复位值).Text = response[9].ToString("f0");
		string text = "";
		byte[] array2 = new byte[24];
		for (int i = 0; i < 24; i++)
		{
			array2[i] = response[11 + i];
		}
		text = Encoding.ASCII.GetString(array2);
		text = text.Replace("\0", " ");
		((Control)CCID卡号值).Text = text;
		((Control)发送次数值).Text = ((response[39] << 8) | response[40]).ToString("f0");
		((Control)接受次数值).Text = ((response[41] << 8) | response[42]).ToString("f0");
		string text2 = "";
		byte[] array3 = new byte[20];
		for (int j = 0; j < 20; j++)
		{
			array3[j] = response[43 + j];
		}
		text2 = Encoding.ASCII.GetString(array3);
		text2 = text2.Replace("\0", " ");
		((Control)IMEI号值).Text = text2;
	}

	private void groupBox34_Enter(object sender, EventArgs e)
	{
	}

	private void button4_Click(object sender, EventArgs e)
	{
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		//IL_013c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[109];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		if (DDSYDTSY.Checked)
		{
			array[2] = 19;
			array[3] = 0;
		}
		else if (ADF300.Checked)
		{
			array[2] = 16;
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 52;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
			((Control)无线调制信息).Text = ((response[3] << 8) | response[4]).ToString("f0");
			((Control)数据上报间隔).Text = ((response[5] << 8) | response[6]).ToString("f0");
			string text = "";
			byte[] array2 = new byte[16];
			for (int i = 0; i < 16; i++)
			{
				array2[i] = response[7 + i];
			}
			text = Encoding.ASCII.GetString(array2);
			text = text.Replace("\0", " ");
			((Control)序列号).Text = text;
			((Control)IP1).Text = response[23].ToString("f0");
			((Control)IP2).Text = response[24].ToString("f0");
			((Control)IP3).Text = response[25].ToString("f0");
			((Control)IP4).Text = response[26].ToString("f0");
			((Control)端口号).Text = ((response[27] << 8) | response[28]).ToString("f0");
			((Control)协议模式).Text = response[29].ToString("f0");
			string text2 = "";
			byte[] array3 = new byte[24];
			for (int j = 0; j < 24; j++)
			{
				array3[j] = response[31 + j];
			}
			text2 = Encoding.ASCII.GetString(array3);
			text2 = text2.Replace("\0", " ");
			((Control)域名).Text = text2;
			((Control)设备数量).Text = response[55].ToString("f0");
			((Control)数据段数量).Text = response[56].ToString("f0");
			((Control)告警段数量).Text = response[57].ToString("f0");
			((Control)TCP).Text = response[58].ToString("f0");
			((Control)Addr1).Text = "0x" + ((response[59] << 8) | response[60]).ToString("x4");
			((Control)Addr2).Text = "0x" + ((response[61] << 8) | response[62]).ToString("x4");
			((Control)Addr3).Text = "0x" + ((response[63] << 8) | response[64]).ToString("x4");
			((Control)Addr4).Text = "0x" + ((response[65] << 8) | response[66]).ToString("x4");
			((Control)Addr5).Text = "0x" + ((response[67] << 8) | response[68]).ToString("x4");
			((Control)Addr6).Text = "0x" + ((response[69] << 8) | response[70]).ToString("x4");
			((Control)Addr7).Text = "0x" + ((response[71] << 8) | response[72]).ToString("x4");
			((Control)Addr8).Text = "0x" + ((response[73] << 8) | response[74]).ToString("x4");
			((Control)LONG1).Text = "0x" + ((response[75] << 8) | response[76]).ToString("x4");
			((Control)LONG2).Text = "0x" + ((response[77] << 8) | response[78]).ToString("x4");
			((Control)LONG3).Text = "0x" + ((response[79] << 8) | response[80]).ToString("x4");
			((Control)LONG4).Text = "0x" + ((response[81] << 8) | response[82]).ToString("x4");
			((Control)LONG5).Text = "0x" + ((response[83] << 8) | response[84]).ToString("x4");
			((Control)LONG6).Text = "0x" + ((response[85] << 8) | response[86]).ToString("x4");
			((Control)LONG7).Text = "0x" + ((response[87] << 8) | response[88]).ToString("x4");
			((Control)LONG8).Text = "0x" + ((response[89] << 8) | response[90]).ToString("x4");
			((Control)ALMM1).Text = ((response[91] << 8) | response[92]).ToString("f0");
			((Control)ALMM2).Text = ((response[93] << 8) | response[94]).ToString("f0");
			((Control)ALMM3).Text = ((response[95] << 8) | response[96]).ToString("f0");
			((Control)ALMM4).Text = ((response[97] << 8) | response[98]).ToString("f0");
			((Control)ALMM5).Text = ((response[99] << 8) | response[100]).ToString("f0");
			((Control)ALMM6).Text = ((response[101] << 8) | response[102]).ToString("f0");
			((Control)ALMM7).Text = ((response[103] << 8) | response[104]).ToString("f0");
			((Control)ALMM8).Text = ((response[105] << 8) | response[106]).ToString("f0");
		}
	}

	private void 无线调制信息_TextChanged(object sender, EventArgs e)
	{
	}

	private void 序列号_TextChanged(object sender, EventArgs e)
	{
	}

	private void v(object sender, EventArgs e)
	{
	}

	private void timer3_Tick(object sender, EventArgs e)
	{
	}

	private void 透传定时器_Tick(object sender, EventArgs e)
	{
	}

	private void tabPage6_Click(object sender, EventArgs e)
	{
	}

	private void button9_Click(object sender, EventArgs e)
	{
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0194: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 8;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[3] == 0)
			{
				yufufei.Checked = true;
			}
			else if (response[3] == 1)
			{
				jiliangxing.Checked = true;
			}
			else
			{
				MessageBox.Show(" 返回数值不对！");
			}
			if (response[4] == 1)
			{
				dlt645xieyi.Checked = true;
			}
			else
			{
				dlt645xieyi.Checked = false;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button10_Click_1(object sender, EventArgs e)
	{
		//IL_0111: Unknown result type (might be due to invalid IL or missing references)
		//IL_015b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0132: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 8;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		if (yufufei.Checked)
		{
			array[7] = 0;
		}
		else
		{
			array[7] = 1;
		}
		if (dlt645xieyi.Checked)
		{
			array[8] = 1;
		}
		else
		{
			array[8] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void groupBox43_Enter(object sender, EventArgs e)
	{
	}

	private void radioButton3_CheckedChanged(object sender, EventArgs e)
	{
	}

	private void groupBoxChangePhaseType_Enter(object sender, EventArgs e)
	{
	}

	private void groupBox39_Enter(object sender, EventArgs e)
	{
	}

	private void ADF电压_SelectedIndexChanged(object sender, EventArgs e)
	{
	}

	private void IMEI号值_Click(object sender, EventArgs e)
	{
	}

	private void radioButton3_CheckedChanged_1(object sender, EventArgs e)
	{
		if (外控.AutoCheck)
		{
			内控.Checked = true;
		}
		else
		{
			内控.Checked = false;
		}
		无射频.Checked = true;
	}

	private void radioButton4_CheckedChanged(object sender, EventArgs e)
	{
		if (外控.AutoCheck)
		{
			内控.Checked = true;
		}
		else
		{
			内控.Checked = false;
		}
		有射频.Checked = true;
	}

	private void radioButton5_CheckedChanged(object sender, EventArgs e)
	{
		外控.Checked = true;
		有射频.Checked = true;
	}

	private void checkBox3_CheckedChanged(object sender, EventArgs e)
	{
		if (单费率.Checked)
		{
			复费率.Checked = true;
		}
		else
		{
			单费率.Checked = true;
		}
	}

	private void checkBox4_CheckedChanged(object sender, EventArgs e)
	{
		if (红外.Checked)
		{
			副通讯.Checked = true;
		}
		else
		{
			红外.Checked = true;
		}
	}

	private void checkBox3_CheckStateChanged(object sender, EventArgs e)
	{
		单费率.Checked = true;
	}

	private void comboBoxIb_SelectionChangeCommitted(object sender, EventArgs e)
	{
		if (((ListControl)comboBoxIb).SelectedIndex == 0)
		{
			外控.Checked = true;
			外控.AutoCheck = false;
			内控.Checked = false;
			内控.AutoCheck = false;
			((Control)radioButton4).Visible = false;
			((ListControl)comboBoxEc).SelectedIndex = 2;
		}
		else
		{
			外控.AutoCheck = true;
			内控.AutoCheck = true;
			((Control)radioButton4).Visible = true;
			((ListControl)comboBoxEc).SelectedIndex = 0;
		}
	}

	private void 购电命令下发_Click(object sender, EventArgs e)
	{
		//IL_020f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0259: Unknown result type (might be due to invalid IL or missing references)
		//IL_0230: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[17];
		byte[] response = new byte[15];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 1;
		array[3] = 0;
		array[4] = 0;
		array[5] = 4;
		array[6] = 8;
		array[7] = (byte)(Convert.ToInt32(((Control)新购电量).Text) >> 24);
		array[8] = (byte)(Convert.ToInt32(((Control)新购电量).Text) >> 16);
		array[9] = (byte)(Convert.ToInt32(((Control)新购电量).Text) >> 8);
		array[10] = (byte)Convert.ToInt32(((Control)新购电量).Text);
		array[11] = (byte)(Convert.ToInt16(((Control)new购电次数).Text) >> 8);
		array[12] = (byte)Convert.ToInt16(((Control)new购电次数).Text);
		array[13] = 0;
		array[14] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		if (radioButton2.Checked)
		{
			byte[] array2 = new byte[20];
			SysKey[0] = uint.Parse(((Control)密钥1).Text, NumberStyles.HexNumber);
			SysKey[1] = uint.Parse(((Control)密钥2).Text, NumberStyles.HexNumber);
			SysKey[2] = uint.Parse(((Control)密钥3).Text, NumberStyles.HexNumber);
			SysKey[3] = uint.Parse(((Control)密钥4).Text, NumberStyles.HexNumber);
			array2 = Encrypt(array, array.Length, SysKey);
			array = array2;
		}
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 设置密钥_Click(object sender, EventArgs e)
	{
		//IL_016e: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_018f: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[17];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 171;
		array[2] = 102;
		array[3] = 1;
		array[4] = 0;
		array[5] = 4;
		array[6] = 8;
		int num = int.Parse(((Control)密钥1).Text, NumberStyles.HexNumber);
		array[7] = (byte)(num >> 8);
		array[8] = (byte)num;
		num = int.Parse(((Control)密钥2).Text, NumberStyles.HexNumber);
		array[9] = (byte)(num >> 8);
		array[10] = (byte)num;
		num = int.Parse(((Control)密钥3).Text, NumberStyles.HexNumber);
		array[11] = (byte)(num >> 8);
		array[12] = (byte)num;
		num = int.Parse(((Control)密钥4).Text, NumberStyles.HexNumber);
		array[13] = (byte)(num >> 8);
		array[14] = (byte)num;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button9_Click_1(object sender, EventArgs e)
	{
		//IL_00e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0132: Unknown result type (might be due to invalid IL or missing references)
		//IL_0109: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 171;
		array[2] = 102;
		array[3] = 2;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 9;
		array[8] = 16;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF电流_SelectionChangeCommitted(object sender, EventArgs e)
	{
		if (((ListControl)ADF电流).SelectedIndex == 0)
		{
			((ListControl)ADF脉冲常数).SelectedIndex = 0;
		}
		else if (((ListControl)ADF电流).SelectedIndex == 1)
		{
			((ListControl)ADF脉冲常数).SelectedIndex = 1;
		}
		else if (((ListControl)ADF电流).SelectedIndex == 2)
		{
			((ListControl)ADF脉冲常数).SelectedIndex = 2;
		}
	}

	private void button10_Click_2(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0168: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_013f: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 93;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 0)
			{
				内置互感器.Checked = true;
			}
			else if (response[4] == 1)
			{
				外置互感器.Checked = true;
			}
			else
			{
				MessageBox.Show(" 返回数值不对！");
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取错误！");
		}
	}

	private void button11_Click_1(object sender, EventArgs e)
	{
		//IL_00fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0145: Unknown result type (might be due to invalid IL or missing references)
		//IL_011c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 93;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (内置互感器.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button13_Click_1(object sender, EventArgs e)
	{
		//IL_020e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0258: Unknown result type (might be due to invalid IL or missing references)
		//IL_022f: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 0;
		array[3] = 34;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		if (单费率.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		if (电能脉冲.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 2;
		}
		if (红外.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 4;
		}
		if (内控.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 8;
		}
		if (无射频.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 16;
		}
		if (加密开.Checked)
		{
			array[8] |= 32;
		}
		else
		{
			array[8] |= 0;
		}
		if (三相四线.Checked)
		{
			array[8] |= 0;
		}
		else
		{
			array[8] |= 128;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button12_Click(object sender, EventArgs e)
	{
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0127: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 0;
		array[3] = 34;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			运行状态显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button15_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_02bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[21];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 3;
		array[4] = 0;
		array[5] = 8;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			((Control)ADF400单相数量).Text = response[6].ToString();
			((Control)ADF400三相数量).Text = response[4].ToString();
			string text = "";
			int[] array2 = new int[5];
			for (int i = 0; i < 5; i++)
			{
				array2[i] = response[7 + i] / 16 * 10 + response[7 + i] % 16;
			}
			for (int j = 0; j < 5; j++)
			{
				text = ((array2[j] != 0) ? ((array2[j] >= 10 || array2[j] <= 0) ? (text + array2[j]) : (text + "0" + array2[j])) : (text + "00"));
			}
			((Control)ADF400表号).Text = text;
			if (response[13] == 1)
			{
				ADF400计量型.Checked = true;
			}
			else
			{
				ADF400预付费型.Checked = true;
			}
			if (response[14] == 1)
			{
				ADF400dlt645协议.Checked = true;
			}
			else
			{
				ADF400dlt645协议.Checked = false;
			}
			if (response[18] == 1)
			{
				ADF400使能IC.Checked = true;
			}
			else
			{
				ADF400无使能IC.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button16_Click(object sender, EventArgs e)
	{
		//IL_01ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_0234: Unknown result type (might be due to invalid IL or missing references)
		//IL_020b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		int num = 0;
		byte[] array = new byte[25];
		num = ((MeterType2 == 0) ? 16 : ((MeterType2 != 1) ? 8 : 12));
		byte[] response = new byte[num];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 3;
		array[4] = 0;
		array[5] = 8;
		array[6] = 16;
		array[7] = 0;
		array[8] = (byte)Convert.ToInt16(((Control)ADF400三相数量).Text);
		array[9] = 0;
		array[10] = (byte)Convert.ToInt16(((Control)ADF400单相数量).Text);
		GetMeterID5();
		array[11] = MeterIDToSet[0];
		array[12] = MeterIDToSet[1];
		array[13] = MeterIDToSet[2];
		array[14] = MeterIDToSet[3];
		array[15] = MeterIDToSet[4];
		array[16] = 0;
		if (ADF400预付费型.Checked)
		{
			array[17] = 0;
		}
		else
		{
			array[17] = 1;
		}
		if (ADF400dlt645协议.Checked)
		{
			array[18] = 1;
		}
		else
		{
			array[18] = 0;
		}
		array[19] = 0;
		array[20] = 0;
		array[21] = 0;
		if (ADF400使能IC.Checked)
		{
			array[22] = 1;
		}
		else
		{
			array[22] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button22_Click(object sender, EventArgs e)
	{
		//IL_00d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0197: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fe: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[11];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 98;
		array[4] = 0;
		array[5] = 3;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			((Control)ADF400互感器接入回路).Text = response[4].ToString();
			if (response[6] == 0)
			{
				ADF400从机地址重排2.Checked = true;
			}
			else
			{
				ADF400从机地址重排1.Checked = true;
			}
			if (response[8] == 0)
			{
				ADF400使能CE以太网0.Checked = true;
			}
			else
			{
				ADF400使能CE以太网1.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button21_Click(object sender, EventArgs e)
	{
		//IL_015a: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_017b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 98;
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		array[7] = 0;
		array[8] = (byte)Convert.ToInt16(((Control)ADF400互感器接入回路).Text);
		array[9] = 0;
		if (ADF400从机地址重排1.Checked)
		{
			array[10] = 1;
		}
		else if (ADF400从机地址重排2.Checked)
		{
			array[10] = 0;
		}
		array[11] = 0;
		if (ADF400使能CE以太网1.Checked)
		{
			array[12] = 1;
		}
		else if (ADF400使能CE以太网0.Checked)
		{
			array[12] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button17_Click(object sender, EventArgs e)
	{
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_03ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ff: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[41];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 80;
		array[4] = 0;
		array[5] = 18;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if (response[4] == 1)
			{
				ADF4003p3l.Checked = true;
			}
			else if (response[4] == 0)
			{
				ADF4003p4l.Checked = true;
			}
			((Control)ADF400PT).Text = ((response[5] << 8) | response[6]).ToString("f0");
			((Control)ADF400CT1).Text = ((response[7] << 8) | response[8]).ToString("f0");
			((Control)ADF400CT2).Text = ((response[9] << 8) | response[10]).ToString("f0");
			((Control)ADF400CT3).Text = ((response[11] << 8) | response[12]).ToString("f0");
			((Control)ADF400CT4).Text = ((response[13] << 8) | response[14]).ToString("f0");
			((Control)ADF400CT5).Text = ((response[15] << 8) | response[16]).ToString("f0");
			((Control)ADF400CT6).Text = ((response[17] << 8) | response[18]).ToString("f0");
			((Control)ADF400CT7).Text = ((response[19] << 8) | response[20]).ToString("f0");
			((Control)ADF400CT8).Text = ((response[21] << 8) | response[22]).ToString("f0");
			((Control)ADF400CT9).Text = ((response[23] << 8) | response[24]).ToString("f0");
			((Control)ADF400CT10).Text = ((response[25] << 8) | response[26]).ToString("f0");
			((Control)ADF400CT11).Text = ((response[27] << 8) | response[28]).ToString("f0");
			((Control)ADF400CT12).Text = ((response[29] << 8) | response[30]).ToString("f0");
			if (response[32] == 1)
			{
				ADF400脉冲.Checked = true;
			}
			else if (response[32] == 0)
			{
				ADF400电平.Checked = true;
			}
			((Control)ADF400脉宽).Text = ((response[33] << 8) | response[34]).ToString("f0");
			((Control)ADF400间隔).Text = ((response[35] << 8) | response[36]).ToString("f0");
			if (response[38] == 1)
			{
				ADF400无线.Checked = true;
			}
			else if (response[38] == 0)
			{
				ADF400无无线.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button18_Click(object sender, EventArgs e)
	{
		//IL_0420: Unknown result type (might be due to invalid IL or missing references)
		//IL_046a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0441: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[45];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 80;
		array[4] = 0;
		array[5] = 18;
		array[6] = 36;
		array[7] = 0;
		if (ADF4003p4l.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		array[9] = (byte)(Convert.ToInt16(((Control)ADF400PT).Text) / 256);
		array[10] = (byte)Convert.ToInt16(((Control)ADF400PT).Text);
		array[11] = (byte)(Convert.ToInt16(((Control)ADF400CT1).Text) / 256);
		array[12] = (byte)Convert.ToInt16(((Control)ADF400CT1).Text);
		array[13] = (byte)(Convert.ToInt16(((Control)ADF400CT2).Text) / 256);
		array[14] = (byte)Convert.ToInt16(((Control)ADF400CT2).Text);
		array[15] = (byte)(Convert.ToInt16(((Control)ADF400CT3).Text) / 256);
		array[16] = (byte)Convert.ToInt16(((Control)ADF400CT3).Text);
		array[17] = (byte)(Convert.ToInt16(((Control)ADF400CT4).Text) / 256);
		array[18] = (byte)Convert.ToInt16(((Control)ADF400CT4).Text);
		array[19] = (byte)(Convert.ToInt16(((Control)ADF400CT5).Text) / 256);
		array[20] = (byte)Convert.ToInt16(((Control)ADF400CT5).Text);
		array[21] = (byte)(Convert.ToInt16(((Control)ADF400CT6).Text) / 256);
		array[22] = (byte)Convert.ToInt16(((Control)ADF400CT6).Text);
		array[23] = (byte)(Convert.ToInt16(((Control)ADF400CT7).Text) / 256);
		array[24] = (byte)Convert.ToInt16(((Control)ADF400CT7).Text);
		array[25] = (byte)(Convert.ToInt16(((Control)ADF400CT8).Text) / 256);
		array[26] = (byte)Convert.ToInt16(((Control)ADF400CT8).Text);
		array[27] = (byte)(Convert.ToInt16(((Control)ADF400CT9).Text) / 256);
		array[28] = (byte)Convert.ToInt16(((Control)ADF400CT9).Text);
		array[29] = (byte)(Convert.ToInt16(((Control)ADF400CT10).Text) / 256);
		array[30] = (byte)Convert.ToInt16(((Control)ADF400CT10).Text);
		array[31] = (byte)(Convert.ToInt16(((Control)ADF400CT11).Text) / 256);
		array[32] = (byte)Convert.ToInt16(((Control)ADF400CT11).Text);
		array[33] = (byte)(Convert.ToInt16(((Control)ADF400CT12).Text) / 256);
		array[34] = (byte)Convert.ToInt16(((Control)ADF400CT12).Text);
		array[35] = 0;
		if (ADF400脉冲.Checked)
		{
			array[36] = 1;
		}
		if (ADF400电平.Checked)
		{
			array[36] = 0;
		}
		array[37] = (byte)(Convert.ToInt16(((Control)ADF400脉宽).Text) / 256);
		array[38] = (byte)Convert.ToInt16(((Control)ADF400脉宽).Text);
		array[39] = (byte)(Convert.ToInt16(((Control)ADF400间隔).Text) / 256);
		array[40] = (byte)Convert.ToInt16(((Control)ADF400间隔).Text);
		array[41] = 0;
		if (ADF400无线.Checked)
		{
			array[42] = 1;
		}
		else
		{
			array[42] = 0;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400初始化_Click(object sender, EventArgs e)
	{
		//IL_0202: Unknown result type (might be due to invalid IL or missing references)
		//IL_024c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0223: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 152;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 100;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		if (((ListControl)ADF400电压).SelectedIndex == 0)
		{
			array[7] = 2;
			array[8] = 65;
		}
		else if (((ListControl)ADF400电压).SelectedIndex == 1)
		{
			array[7] = 8;
			array[8] = 152;
		}
		else
		{
			array[7] = 14;
			array[8] = 216;
		}
		if (((ListControl)ADF400电流).SelectedIndex == 0)
		{
			array[9] = 0;
			array[10] = 100;
		}
		else
		{
			array[9] = 3;
			array[10] = 232;
		}
		if (((Control)ADF400脉冲常数).Text == "400")
		{
			array[11] = 1;
			array[12] = 144;
		}
		else if (((Control)ADF400脉冲常数).Text == "6400")
		{
			array[11] = 25;
			array[12] = 0;
		}
		else if (((Control)ADF400脉冲常数).Text == "1600")
		{
			array[11] = 6;
			array[12] = 64;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 初始化成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400校准_Click(object sender, EventArgs e)
	{
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0159: Unknown result type (might be due to invalid IL or missing references)
		//IL_0130: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 153;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 103;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 校准成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400电能清零_Click(object sender, EventArgs e)
	{
		//IL_00e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0104: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = 0;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400广播清零_Click(object sender, EventArgs e)
	{
		//IL_00e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0131: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button33_Click(object sender, EventArgs e)
	{
		//IL_0127: Unknown result type (might be due to invalid IL or missing references)
		//IL_022c: Unknown result type (might be due to invalid IL or missing references)
		//IL_014e: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		if (ADF4001通讯.Checked)
		{
			array[2] = 9;
			array[3] = 0;
		}
		else if (ADF4002通讯.Checked)
		{
			array[2] = 9;
			array[3] = 17;
		}
		else if (ADF4003通讯.Checked)
		{
			array[2] = 9;
			array[3] = 101;
		}
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			if (MeterType2 == 0)
			{
				((ListControl)ADF400地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 36);
			}
			else if (MeterType2 == 1)
			{
				((ListControl)ADF400地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 24);
			}
			else if (MeterType2 == 2)
			{
				((ListControl)ADF400地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 12);
			}
			else
			{
				((ListControl)ADF400地址).SelectedIndex = Convert.ToByte((response[4] - 1) / 36);
			}
			((ListControl)ADF400校验位).SelectedIndex = response[5];
			((ListControl)ADF400波特率).SelectedIndex = response[6];
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button32_Click(object sender, EventArgs e)
	{
		//IL_01eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0235: Unknown result type (might be due to invalid IL or missing references)
		//IL_020c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		if (ADF4001通讯.Checked)
		{
			array[2] = 9;
			array[3] = 0;
		}
		else if (ADF4002通讯.Checked)
		{
			array[2] = 9;
			array[3] = 17;
		}
		else if (ADF4003通讯.Checked)
		{
			array[2] = 9;
			array[3] = 101;
		}
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = 0;
		if (MeterType2 == 0)
		{
			array[8] = Convert.ToByte(((ListControl)ADF400地址).SelectedIndex * 36 + 1);
		}
		else if (MeterType2 == 1)
		{
			array[8] = Convert.ToByte(((ListControl)ADF400地址).SelectedIndex * 24 + 1);
		}
		else if (MeterType2 == 2)
		{
			array[8] = Convert.ToByte(((ListControl)ADF400地址).SelectedIndex * 12 + 1);
		}
		else
		{
			array[8] = Convert.ToByte(((ListControl)ADF400地址).SelectedIndex * 24 + 1);
		}
		array[9] = Convert.ToByte(((ListControl)ADF400校验位).SelectedIndex);
		array[10] = Convert.ToByte(((ListControl)ADF400波特率).SelectedIndex);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button29_Click(object sender, EventArgs e)
	{
		//IL_0202: Unknown result type (might be due to invalid IL or missing references)
		//IL_024c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0223: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[15];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 152;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 100;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 3;
		array[6] = 6;
		if (((ListControl)ADF400L从电压).SelectedIndex == 0)
		{
			array[7] = 2;
			array[8] = 65;
		}
		else if (((ListControl)ADF400L从电压).SelectedIndex == 1)
		{
			array[7] = 8;
			array[8] = 152;
		}
		else
		{
			array[7] = 14;
			array[8] = 216;
		}
		if (((ListControl)ADF400L从电流).SelectedIndex == 0)
		{
			array[9] = 0;
			array[10] = 100;
		}
		else
		{
			array[9] = 3;
			array[10] = 232;
		}
		if (((Control)ADF400L从pulse).Text == "400")
		{
			array[11] = 1;
			array[12] = 144;
		}
		else if (((Control)ADF400L从pulse).Text == "6400")
		{
			array[11] = 25;
			array[12] = 0;
		}
		else if (((Control)ADF400L从pulse).Text == "1600")
		{
			array[11] = 6;
			array[12] = 64;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 初始化成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button28_Click(object sender, EventArgs e)
	{
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0159: Unknown result type (might be due to invalid IL or missing references)
		//IL_0130: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 153;
		if (MeterType == 3)
		{
			array[2] = 100;
			array[3] = 6;
		}
		else
		{
			array[2] = 103;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(2000);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" 校准成功！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button27_Click(object sender, EventArgs e)
	{
		//IL_00e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0104: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = 0;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button24_Click(object sender, EventArgs e)
	{
		//IL_00e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0131: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 32;
		array[2] = 9;
		array[3] = byte.MaxValue;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从通讯R_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		array[3] = 0;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			((Control)ADF400L从地址).Text = ((response[3] << 8) | response[4]).ToString("f0");
			if (response[6] == 0)
			{
				((Control)ADF400L从波特率).Text = "9600";
			}
			if (response[6] == 1)
			{
				((Control)ADF400L从波特率).Text = "4800";
			}
			if (response[6] == 2)
			{
				((Control)ADF400L从波特率).Text = "2400";
			}
			if (response[6] == 3)
			{
				((Control)ADF400L从波特率).Text = "1200";
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从通讯W_Click(object sender, EventArgs e)
	{
		//IL_0109: Unknown result type (might be due to invalid IL or missing references)
		//IL_0153: Unknown result type (might be due to invalid IL or missing references)
		//IL_012a: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 32;
		array[3] = 0;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = (byte)(Convert.ToInt16(((Control)ADF400L从地址).Text) / 256);
		array[8] = (byte)Convert.ToInt16(((Control)ADF400L从地址).Text);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L额定参数读取_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0169: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		array[3] = 2;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			((Control)ADF400L从额定电流).Text = ((response[3] << 8) | response[4]).ToString("f0");
			((Control)ADF400L从额定电压).Text = ((response[5] << 8) | response[6]).ToString("f0");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从参数R_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0220: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[17];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		array[3] = 4;
		array[4] = 0;
		array[5] = 6;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			((Control)ADF400L从脉冲常数).Text = ((response[3] << 8) | response[4]).ToString("f0");
			if (response[6] == 1)
			{
				ADF400L从3p3l.Checked = true;
			}
			else if (response[6] == 0)
			{
				ADF400L从3p4l.Checked = true;
			}
			if (response[8] == 1)
			{
				ADF400L从脉冲.Checked = true;
			}
			else if (response[8] == 0)
			{
				ADF400L从电平.Checked = true;
			}
			((Control)ADF400L从脉冲宽度).Text = ((response[9] << 8) | response[10]).ToString("f0");
			((Control)ADF400L从脉冲间隔).Text = ((response[11] << 8) | response[12]).ToString("f0");
			((Control)ADF400L从消抖时间).Text = ((response[13] << 8) | response[14]).ToString("f0");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从参数W_Click(object sender, EventArgs e)
	{
		//IL_01ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ce: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[19];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 32;
		array[3] = 5;
		array[4] = 0;
		array[5] = 5;
		array[6] = 10;
		array[7] = 0;
		if (ADF400L从3p4l.Checked)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 1;
		}
		array[9] = 0;
		if (ADF400脉冲.Checked)
		{
			array[10] = 1;
		}
		else
		{
			array[10] = 0;
		}
		array[11] = (byte)(Convert.ToInt16(((Control)ADF400L从脉冲宽度).Text) / 256);
		array[12] = (byte)Convert.ToInt16(((Control)ADF400L从脉冲宽度).Text);
		array[13] = (byte)(Convert.ToInt16(((Control)ADF400L从脉冲间隔).Text) / 256);
		array[14] = (byte)Convert.ToInt16(((Control)ADF400L从脉冲间隔).Text);
		array[15] = (byte)(Convert.ToInt16(((Control)ADF400L从消抖时间).Text) / 256);
		array[16] = (byte)Convert.ToInt16(((Control)ADF400L从消抖时间).Text);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully，请确认电表状态是否正确！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从DI_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0177: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		array[3] = 10;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if ((response[4] & 1) == 1)
			{
				ADF400L从DI1合.Checked = true;
			}
			else
			{
				ADF400L从DI1分.Checked = true;
			}
			if ((response[4] & 2) == 2)
			{
				ADF400L从DI2合.Checked = true;
			}
			else
			{
				ADF400L从DI2分.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从DOR_Click(object sender, EventArgs e)
	{
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fd: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[7];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 32;
		array[3] = 11;
		array[4] = 0;
		array[5] = 1;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if ((response[4] & 1) == 1)
			{
				ADF400L从DO1合.Checked = true;
			}
			else
			{
				ADF400L从DO1分.Checked = true;
			}
			if ((response[4] & 2) == 2)
			{
				ADF400L从DO2合.Checked = true;
			}
			else
			{
				ADF400L从DO2分.Checked = true;
			}
			if ((response[4] & 4) == 4)
			{
				ADF400L从DO3合.Checked = true;
			}
			else
			{
				ADF400L从DO3分.Checked = true;
			}
			if ((response[4] & 8) == 8)
			{
				ADF400L从DO4合.Checked = true;
			}
			else
			{
				ADF400L从DO4分.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400L从DOW_Click(object sender, EventArgs e)
	{
		//IL_0147: Unknown result type (might be due to invalid IL or missing references)
		//IL_0191: Unknown result type (might be due to invalid IL or missing references)
		//IL_0168: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 32;
		array[3] = 11;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		if (ADF400L从DO1合.Checked)
		{
			array[8] = 1;
		}
		if (ADF400L从DO2合.Checked)
		{
			array[8] = (byte)(array[8] | 2u);
		}
		if (ADF400L从DO3合.Checked)
		{
			array[8] = (byte)(array[8] | 4u);
		}
		if (ADF400L从DO4合.Checked)
		{
			array[8] = (byte)(array[8] | 8u);
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 读取DIO_Click(object sender, EventArgs e)
	{
		//IL_00d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0345: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fe: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 78;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if ((response[4] & 1) == 1)
			{
				DI1checkBox.Checked = true;
			}
			else
			{
				DI1checkBox.Checked = false;
			}
			if ((response[4] & 2) == 2)
			{
				DI2checkBox.Checked = true;
			}
			else
			{
				DI2checkBox.Checked = false;
			}
			if ((response[4] & 4) == 4)
			{
				DI3checkBox.Checked = true;
			}
			else
			{
				DI3checkBox.Checked = false;
			}
			if ((response[4] & 8) == 8)
			{
				DI4checkBox.Checked = true;
			}
			else
			{
				DI4checkBox.Checked = false;
			}
			if ((response[4] & 0x10) == 16)
			{
				DI5checkBox.Checked = true;
			}
			else
			{
				DI5checkBox.Checked = false;
			}
			if ((response[4] & 0x20) == 32)
			{
				DI6checkBox.Checked = true;
			}
			else
			{
				DI6checkBox.Checked = false;
			}
			if ((response[4] & 0x40) == 64)
			{
				DI7checkBox.Checked = true;
			}
			else
			{
				DI7checkBox.Checked = false;
			}
			if ((response[4] & 0x80) == 128)
			{
				DI8checkBox.Checked = true;
			}
			else
			{
				DI8checkBox.Checked = false;
			}
			if ((response[6] & 1) == 1)
			{
				DO1checkBox.Checked = true;
			}
			else
			{
				DO1checkBox.Checked = false;
			}
			if ((response[6] & 2) == 2)
			{
				DO2checkBox.Checked = true;
			}
			else
			{
				DO2checkBox.Checked = false;
			}
			if ((response[6] & 4) == 4)
			{
				DO3checkBox.Checked = true;
			}
			else
			{
				DO3checkBox.Checked = false;
			}
			if ((response[6] & 8) == 8)
			{
				DO4checkBox.Checked = true;
			}
			else
			{
				DO4checkBox.Checked = false;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取错误！");
		}
	}

	private void 设置DO_Click(object sender, EventArgs e)
	{
		//IL_0147: Unknown result type (might be due to invalid IL or missing references)
		//IL_0199: Unknown result type (might be due to invalid IL or missing references)
		//IL_0168: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 79;
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		if (DO1checkBox.Checked)
		{
			array[8] = 1;
		}
		if (DO2checkBox.Checked)
		{
			array[8] = (byte)(array[8] | 2u);
		}
		if (DO3checkBox.Checked)
		{
			array[8] = (byte)(array[8] | 4u);
		}
		if (DO4checkBox.Checked)
		{
			array[8] = (byte)(array[8] | 8u);
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			ReadAllSetResponse(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400主机_CheckedChanged(object sender, EventArgs e)
	{
		if (ADF400从机.Checked)
		{
			((Control)groupBox70).Enabled = false;
		}
		else
		{
			((Control)groupBox70).Enabled = true;
		}
	}

	private void button19_Click(object sender, EventArgs e)
	{
		//IL_00f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_020a: Unknown result type (might be due to invalid IL or missing references)
		//IL_011e: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[9];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		if (ADF400主机.Checked)
		{
			array[2] = 9;
			array[3] = 78;
		}
		else
		{
			array[2] = 24;
			array[3] = 0;
		}
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			if ((response[4] & 1) == 1)
			{
				ADF400DI1合.Checked = true;
			}
			else
			{
				ADF400DI1分.Checked = true;
			}
			if (ADF400主机.Checked)
			{
				if ((response[4] & 2) == 2)
				{
					ADF400DI2合.Checked = true;
				}
				else
				{
					ADF400DI2分.Checked = true;
				}
			}
			if ((response[6] & 1) == 1)
			{
				ADF400DO1合.Checked = true;
			}
			else
			{
				ADF400DO1分.Checked = true;
			}
			if ((response[6] & 2) == 2)
			{
				ADF400DO2合.Checked = true;
			}
			else
			{
				ADF400DO2分.Checked = true;
			}
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("读取错误！");
		}
	}

	private void ADF400设置DO_Click(object sender, EventArgs e)
	{
		//IL_0133: Unknown result type (might be due to invalid IL or missing references)
		//IL_017d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0154: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[11];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		if (ADF400主机.Checked)
		{
			array[2] = 9;
			array[3] = 79;
		}
		else
		{
			array[2] = 24;
			array[3] = 1;
		}
		array[4] = 0;
		array[5] = 1;
		array[6] = 2;
		array[7] = 0;
		array[8] = 0;
		if (ADF400DO1合.Checked)
		{
			array[8] = 1;
		}
		if (ADF400DO2合.Checked)
		{
			array[8] = (byte)(array[8] | 2u);
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void XuLieHao读取_Click(object sender, EventArgs e)
	{
		//IL_00e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_025f: Unknown result type (might be due to invalid IL or missing references)
		//IL_010b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[19];
		byte[] CRC = new byte[2];
		string[] array2 = new string[14];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 3;
		array[3] = 160;
		array[4] = 0;
		array[5] = 7;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			char c = (char)response[3];
			array2[0] = c.ToString();
			c = (char)response[4];
			array2[1] = c.ToString();
			c = (char)response[5];
			array2[2] = c.ToString();
			c = (char)response[6];
			array2[3] = c.ToString();
			c = (char)response[7];
			array2[4] = c.ToString();
			c = (char)response[8];
			array2[5] = c.ToString();
			c = (char)response[9];
			array2[6] = c.ToString();
			c = (char)response[10];
			array2[7] = c.ToString();
			c = (char)response[11];
			array2[8] = c.ToString();
			c = (char)response[12];
			array2[9] = c.ToString();
			c = (char)response[13];
			array2[10] = c.ToString();
			c = (char)response[14];
			array2[11] = c.ToString();
			c = (char)response[15];
			array2[12] = c.ToString();
			c = (char)response[16];
			array2[13] = c.ToString();
			string text = "";
			for (int i = 0; i < array2.Length; i++)
			{
				text += array2[i];
			}
			((Control)XuLieHao).Text = text;
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void XuLieHao设置_Click(object sender, EventArgs e)
	{
		//IL_042d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0477: Unknown result type (might be due to invalid IL or missing references)
		//IL_044e: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[23];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 3;
		array[3] = 160;
		array[4] = 0;
		array[5] = 7;
		array[6] = 14;
		byte[] array2 = new byte[14];
		string text = "";
		if (((Control)XuLieHao).Text.Length < 14)
		{
			int length = ((Control)XuLieHao).Text.Length;
			text = ((Control)XuLieHao).Text;
			for (int i = 0; i < 14 - length; i++)
			{
				text += "0";
			}
			((Control)XuLieHao).Text = text;
		}
		string text2 = ((Control)XuLieHao).Text;
		array2 = Encoding.ASCII.GetBytes(text2);
		if (array2[0] <= 9 && array2[0] >= 0)
		{
			array[7] = array2[0];
		}
		else
		{
			int num = array2[0];
			array[7] = (byte)num;
		}
		if (array2[1] <= 9 && array2[1] >= 0)
		{
			array[8] = array2[1];
		}
		else
		{
			int num = array2[1];
			array[8] = (byte)num;
		}
		if (array2[2] <= 9 && array2[2] >= 0)
		{
			array[9] = array2[2];
		}
		else
		{
			int num = array2[2];
			array[9] = (byte)num;
		}
		if (array2[3] <= 9 && array2[3] >= 0)
		{
			array[10] = array2[3];
		}
		else
		{
			int num = array2[3];
			array[10] = (byte)num;
		}
		if (array2[4] <= 9 && array2[4] >= 0)
		{
			array[11] = array2[4];
		}
		else
		{
			int num = array2[4];
			array[11] = (byte)num;
		}
		if (array2[5] <= 9 && array2[5] >= 0)
		{
			array[12] = array2[5];
		}
		else
		{
			int num = array2[5];
			array[12] = (byte)num;
		}
		if (array2[6] <= 9 && array2[6] >= 0)
		{
			array[13] = array2[6];
		}
		else
		{
			int num = array2[6];
			array[13] = (byte)num;
		}
		if (array2[7] <= 9 && array2[7] >= 0)
		{
			array[14] = array2[7];
		}
		else
		{
			int num = array2[7];
			array[14] = (byte)num;
		}
		if (array2[8] <= 9 && array2[8] >= 0)
		{
			array[15] = array2[8];
		}
		else
		{
			int num = array2[8];
			array[15] = (byte)num;
		}
		if (array2[9] <= 9 && array2[9] >= 0)
		{
			array[16] = array2[9];
		}
		else
		{
			int num = array2[9];
			array[16] = (byte)num;
		}
		if (array2[10] <= 9 && array2[10] >= 0)
		{
			array[17] = array2[10];
		}
		else
		{
			int num = array2[10];
			array[17] = (byte)num;
		}
		if (array2[11] <= 9 && array2[11] >= 0)
		{
			array[18] = array2[11];
		}
		else
		{
			int num = array2[11];
			array[18] = (byte)num;
		}
		if (array2[12] <= 9 && array2[12] >= 0)
		{
			array[19] = array2[12];
		}
		else
		{
			int num = array2[12];
			array[19] = (byte)num;
		}
		if (array2[13] <= 9 && array2[13] >= 0)
		{
			array[20] = array2[13];
		}
		else
		{
			int num = array2[13];
			array[20] = (byte)num;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void Read序列号_Click(object sender, EventArgs e)
	{
		//IL_00e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_024c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[19];
		byte[] CRC = new byte[2];
		string[] array2 = new string[14];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 71;
		array[4] = 0;
		array[5] = 7;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			char c = (char)response[3];
			array2[0] = c.ToString();
			c = (char)response[4];
			array2[1] = c.ToString();
			c = (char)response[5];
			array2[2] = c.ToString();
			c = (char)response[6];
			array2[3] = c.ToString();
			c = (char)response[7];
			array2[4] = c.ToString();
			c = (char)response[8];
			array2[5] = c.ToString();
			c = (char)response[9];
			array2[6] = c.ToString();
			c = (char)response[10];
			array2[7] = c.ToString();
			c = (char)response[11];
			array2[8] = c.ToString();
			c = (char)response[12];
			array2[9] = c.ToString();
			c = (char)response[13];
			array2[10] = c.ToString();
			c = (char)response[14];
			array2[11] = c.ToString();
			c = (char)response[15];
			array2[12] = c.ToString();
			c = (char)response[16];
			array2[13] = c.ToString();
			string text = "";
			for (int i = 0; i < array2.Length; i++)
			{
				text += array2[i];
			}
			((Control)ADF400序列号).Text = text;
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void Set序列号_Click(object sender, EventArgs e)
	{
		//IL_042b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0475: Unknown result type (might be due to invalid IL or missing references)
		//IL_044c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[23];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 71;
		array[4] = 0;
		array[5] = 7;
		array[6] = 14;
		byte[] array2 = new byte[14];
		string text = "";
		if (((Control)ADF400序列号).Text.Length < 14)
		{
			int length = ((Control)ADF400序列号).Text.Length;
			text = ((Control)ADF400序列号).Text;
			for (int i = 0; i < 14 - length; i++)
			{
				text += "0";
			}
			((Control)ADF400序列号).Text = text;
		}
		string text2 = ((Control)ADF400序列号).Text;
		array2 = Encoding.ASCII.GetBytes(text2);
		if (array2[0] <= 9 && array2[0] >= 0)
		{
			array[7] = array2[0];
		}
		else
		{
			int num = array2[0];
			array[7] = (byte)num;
		}
		if (array2[1] <= 9 && array2[1] >= 0)
		{
			array[8] = array2[1];
		}
		else
		{
			int num = array2[1];
			array[8] = (byte)num;
		}
		if (array2[2] <= 9 && array2[2] >= 0)
		{
			array[9] = array2[2];
		}
		else
		{
			int num = array2[2];
			array[9] = (byte)num;
		}
		if (array2[3] <= 9 && array2[3] >= 0)
		{
			array[10] = array2[3];
		}
		else
		{
			int num = array2[3];
			array[10] = (byte)num;
		}
		if (array2[4] <= 9 && array2[4] >= 0)
		{
			array[11] = array2[4];
		}
		else
		{
			int num = array2[4];
			array[11] = (byte)num;
		}
		if (array2[5] <= 9 && array2[5] >= 0)
		{
			array[12] = array2[5];
		}
		else
		{
			int num = array2[5];
			array[12] = (byte)num;
		}
		if (array2[6] <= 9 && array2[6] >= 0)
		{
			array[13] = array2[6];
		}
		else
		{
			int num = array2[6];
			array[13] = (byte)num;
		}
		if (array2[7] <= 9 && array2[7] >= 0)
		{
			array[14] = array2[7];
		}
		else
		{
			int num = array2[7];
			array[14] = (byte)num;
		}
		if (array2[8] <= 9 && array2[8] >= 0)
		{
			array[15] = array2[8];
		}
		else
		{
			int num = array2[8];
			array[15] = (byte)num;
		}
		if (array2[9] <= 9 && array2[9] >= 0)
		{
			array[16] = array2[9];
		}
		else
		{
			int num = array2[9];
			array[16] = (byte)num;
		}
		if (array2[10] <= 9 && array2[10] >= 0)
		{
			array[17] = array2[10];
		}
		else
		{
			int num = array2[10];
			array[17] = (byte)num;
		}
		if (array2[11] <= 9 && array2[11] >= 0)
		{
			array[18] = array2[11];
		}
		else
		{
			int num = array2[11];
			array[18] = (byte)num;
		}
		if (array2[12] <= 9 && array2[12] >= 0)
		{
			array[19] = array2[12];
		}
		else
		{
			int num = array2[12];
			array[19] = (byte)num;
		}
		if (array2[13] <= 9 && array2[13] >= 0)
		{
			array[20] = array2[13];
		}
		else
		{
			int num = array2[13];
			array[20] = (byte)num;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void Readxulihao_Click(object sender, EventArgs e)
	{
		//IL_00e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_024c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[19];
		byte[] CRC = new byte[2];
		string[] array2 = new string[14];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 71;
		array[4] = 0;
		array[5] = 7;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			char c = (char)response[3];
			array2[0] = c.ToString();
			c = (char)response[4];
			array2[1] = c.ToString();
			c = (char)response[5];
			array2[2] = c.ToString();
			c = (char)response[6];
			array2[3] = c.ToString();
			c = (char)response[7];
			array2[4] = c.ToString();
			c = (char)response[8];
			array2[5] = c.ToString();
			c = (char)response[9];
			array2[6] = c.ToString();
			c = (char)response[10];
			array2[7] = c.ToString();
			c = (char)response[11];
			array2[8] = c.ToString();
			c = (char)response[12];
			array2[9] = c.ToString();
			c = (char)response[13];
			array2[10] = c.ToString();
			c = (char)response[14];
			array2[11] = c.ToString();
			c = (char)response[15];
			array2[12] = c.ToString();
			c = (char)response[16];
			array2[13] = c.ToString();
			string text = "";
			for (int i = 0; i < array2.Length; i++)
			{
				text += array2[i];
			}
			((Control)ADF300序列号).Text = text;
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void Setxuliehao_Click(object sender, EventArgs e)
	{
		//IL_042b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0475: Unknown result type (might be due to invalid IL or missing references)
		//IL_044c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[23];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 71;
		array[4] = 0;
		array[5] = 7;
		array[6] = 14;
		byte[] array2 = new byte[14];
		string text = "";
		if (((Control)ADF300序列号).Text.Length < 14)
		{
			int length = ((Control)ADF300序列号).Text.Length;
			text = ((Control)ADF300序列号).Text;
			for (int i = 0; i < 14 - length; i++)
			{
				text += "0";
			}
			((Control)ADF300序列号).Text = text;
		}
		string text2 = ((Control)ADF300序列号).Text;
		array2 = Encoding.ASCII.GetBytes(text2);
		if (array2[0] <= 9 && array2[0] >= 0)
		{
			array[7] = array2[0];
		}
		else
		{
			int num = array2[0];
			array[7] = (byte)num;
		}
		if (array2[1] <= 9 && array2[1] >= 0)
		{
			array[8] = array2[1];
		}
		else
		{
			int num = array2[1];
			array[8] = (byte)num;
		}
		if (array2[2] <= 9 && array2[2] >= 0)
		{
			array[9] = array2[2];
		}
		else
		{
			int num = array2[2];
			array[9] = (byte)num;
		}
		if (array2[3] <= 9 && array2[3] >= 0)
		{
			array[10] = array2[3];
		}
		else
		{
			int num = array2[3];
			array[10] = (byte)num;
		}
		if (array2[4] <= 9 && array2[4] >= 0)
		{
			array[11] = array2[4];
		}
		else
		{
			int num = array2[4];
			array[11] = (byte)num;
		}
		if (array2[5] <= 9 && array2[5] >= 0)
		{
			array[12] = array2[5];
		}
		else
		{
			int num = array2[5];
			array[12] = (byte)num;
		}
		if (array2[6] <= 9 && array2[6] >= 0)
		{
			array[13] = array2[6];
		}
		else
		{
			int num = array2[6];
			array[13] = (byte)num;
		}
		if (array2[7] <= 9 && array2[7] >= 0)
		{
			array[14] = array2[7];
		}
		else
		{
			int num = array2[7];
			array[14] = (byte)num;
		}
		if (array2[8] <= 9 && array2[8] >= 0)
		{
			array[15] = array2[8];
		}
		else
		{
			int num = array2[8];
			array[15] = (byte)num;
		}
		if (array2[9] <= 9 && array2[9] >= 0)
		{
			array[16] = array2[9];
		}
		else
		{
			int num = array2[9];
			array[16] = (byte)num;
		}
		if (array2[10] <= 9 && array2[10] >= 0)
		{
			array[17] = array2[10];
		}
		else
		{
			int num = array2[10];
			array[17] = (byte)num;
		}
		if (array2[11] <= 9 && array2[11] >= 0)
		{
			array[18] = array2[11];
		}
		else
		{
			int num = array2[11];
			array[18] = (byte)num;
		}
		if (array2[12] <= 9 && array2[12] >= 0)
		{
			array[19] = array2[12];
		}
		else
		{
			int num = array2[12];
			array[19] = (byte)num;
		}
		if (array2[13] <= 9 && array2[13] >= 0)
		{
			array[20] = array2[13];
		}
		else
		{
			int num = array2[13];
			array[20] = (byte)num;
		}
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Set successfully！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF400无线读取_Click(object sender, EventArgs e)
	{
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_010c: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[25];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 9;
		array[3] = 104;
		array[4] = 0;
		array[5] = 10;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
			((Control)ADF400网关IP1).Text = response[3].ToString("f0");
			((Control)ADF400网关IP2).Text = response[4].ToString("f0");
			((Control)ADF400网关IP3).Text = response[5].ToString("f0");
			((Control)ADF400网关IP4).Text = response[6].ToString("f0");
			((Control)子网掩码1).Text = response[7].ToString("f0");
			((Control)子网掩码2).Text = response[8].ToString("f0");
			((Control)子网掩码3).Text = response[9].ToString("f0");
			((Control)子网掩码4).Text = response[10].ToString("f0");
			((Control)ADF400IP1).Text = response[11].ToString("f0");
			((Control)ADF400IP2).Text = response[12].ToString("f0");
			((Control)ADF400IP3).Text = response[13].ToString("f0");
			((Control)ADF400IP4).Text = response[14].ToString("f0");
			((Control)ADF400端口号).Text = ((response[21] << 8) | response[22]).ToString("f0");
		}
	}

	private void ADF400无线设置_Click(object sender, EventArgs e)
	{
		//IL_027a: Unknown result type (might be due to invalid IL or missing references)
		//IL_02df: Unknown result type (might be due to invalid IL or missing references)
		//IL_033c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0313: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[21];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		byte[] array2 = new byte[11];
		byte[] response2 = new byte[8];
		byte[] CRC2 = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 9;
		array[3] = 104;
		array[4] = 0;
		array[5] = 6;
		array[6] = 12;
		array[7] = Convert.ToByte(((Control)ADF400网关IP1).Text);
		array[8] = Convert.ToByte(((Control)ADF400网关IP2).Text);
		array[9] = Convert.ToByte(((Control)ADF400网关IP3).Text);
		array[10] = Convert.ToByte(((Control)ADF400网关IP4).Text);
		array[11] = Convert.ToByte(((Control)子网掩码1).Text);
		array[12] = Convert.ToByte(((Control)子网掩码2).Text);
		array[13] = Convert.ToByte(((Control)子网掩码3).Text);
		array[14] = Convert.ToByte(((Control)子网掩码4).Text);
		array[15] = Convert.ToByte(((Control)ADF400IP1).Text);
		array[16] = Convert.ToByte(((Control)ADF400IP2).Text);
		array[17] = Convert.ToByte(((Control)ADF400IP3).Text);
		array[18] = Convert.ToByte(((Control)ADF400IP4).Text);
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		array2[0] = Convert.ToByte(Variable.Address);
		array2[1] = 16;
		array2[2] = 9;
		array2[3] = 113;
		array2[4] = 0;
		array2[5] = 1;
		array2[6] = 2;
		array2[7] = (byte)(Convert.ToInt16(((Control)ADF400端口号).Text) >> 8);
		array2[8] = (byte)Convert.ToInt16(((Control)ADF400端口号).Text);
		m.GetCRC(array2, ref CRC2);
		m.GetCRC(array2, ref CRC2);
		array2[^2] = CRC2[0];
		array2[^1] = CRC2[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + "Please confirm the serial port and address settings！");
			return;
		}
		try
		{
			Modbus.sp.Write(array2, 0, array2.Length);
			m.GetResponse(ref response2);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex2)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex2.Message + "Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0) && m.CheckResponse(response2, 0))
		{
			MessageBox.Show(" Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void ADF参数设置_Enter(object sender, EventArgs e)
	{
	}

	private void label245_Click(object sender, EventArgs e)
	{
	}

	private void label197_Click(object sender, EventArgs e)
	{
	}

	private void readWIFI_Click(object sender, EventArgs e)
	{
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_012a: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f9: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[108];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 25;
		array[3] = 16;
		array[4] = 0;
		array[5] = 51;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Successfully read！");
			wifi参数显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void wifi参数显示(byte[] bb)
	{
		if ((ushort)((bb[3] << 8) | bb[4]) == 0)
		{
			((ListControl)comboBox1).SelectedIndex = 0;
		}
		else
		{
			((ListControl)comboBox1).SelectedIndex = 1;
		}
		for (ushort num = 0; num < 40; num++)
		{
			if (bb[5 + num] == 0)
			{
				Num = num;
				num = 40;
			}
		}
		string text = "";
		byte[] array = new byte[Num];
		for (int i = 0; i < Num; i++)
		{
			array[i] = bb[5 + i];
		}
		text = Encoding.ASCII.GetString(array);
		text = text.Replace("\0", " ");
		((Control)WIFIname).Text = text;
		for (ushort num = 0; num < 40; num++)
		{
			if (bb[45 + num] == 0)
			{
				Num1 = num;
				num = 40;
			}
		}
		string text2 = "";
		byte[] array2 = new byte[Num1];
		for (int j = 0; j < Num1; j++)
		{
			array2[j] = bb[45 + j];
		}
		text2 = Encoding.ASCII.GetString(array2);
		text2 = text2.Replace("\0", " ");
		((Control)WIFIpassword).Text = text2;
		for (ushort num = 0; num < 40; num++)
		{
			if (bb[85 + num] == 0)
			{
				Num2 = num;
				num = 40;
			}
		}
		string text3 = "";
		byte[] array3 = new byte[Num2];
		for (int k = 0; k < Num2; k++)
		{
			if (bb[85 + k] != 0)
			{
				array3[k] = bb[85 + k];
			}
			else
			{
				array3[k] = 48;
			}
		}
		text3 = Encoding.ASCII.GetString(array3);
		text3 = text3.Replace("\0", " ");
		((Control)MACaddress).Text = text3;
		if ((ushort)((bb[98] << 8) | bb[99]) == 0)
		{
			((ListControl)comboBox2).SelectedIndex = 0;
		}
		else
		{
			((ListControl)comboBox2).SelectedIndex = 1;
		}
		((Control)WIFIsignal).Text = bb[100].ToString("f0");
		((Control)label366).Text = bb[101].ToString("f0");
		((Control)label367).Text = bb[102].ToString("f0");
		((Control)cxzcycsj).Text = ((bb[103] << 8) | bb[104]).ToString("f0");
	}

	private void setWIFI_Click(object sender, EventArgs e)
	{
		//IL_0226: Unknown result type (might be due to invalid IL or missing references)
		//IL_0270: Unknown result type (might be due to invalid IL or missing references)
		//IL_0247: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[111];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 25;
		array[3] = 16;
		array[4] = 0;
		array[5] = 51;
		array[6] = 102;
		array[7] = 0;
		array[8] = (byte)((ListControl)comboBox1).SelectedIndex;
		byte[] bytes = Encoding.ASCII.GetBytes(((Control)WIFIname).Text);
		int num = 40 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[9 + i] = bytes[i];
		}
		string s = Convert.ToString(((Control)WIFIpassword).Text);
		byte[] bytes2 = Encoding.ASCII.GetBytes(s);
		int num2 = 40 - bytes2.Length;
		for (int j = 0; j < bytes2.Length; j++)
		{
			array[49 + j] = bytes2[j];
		}
		string s2 = Convert.ToString(((Control)MACaddress).Text);
		byte[] bytes3 = Encoding.ASCII.GetBytes(s2);
		int num3 = 12 - bytes3.Length;
		for (int k = 0; k < bytes3.Length; k++)
		{
			array[89 + k] = bytes3[k];
		}
		array[101] = 0;
		array[102] = (byte)((ListControl)comboBox2).SelectedIndex;
		array[107] = (byte)(Convert.ToUInt16(((Control)cxzcycsj).Text) >> 8);
		array[108] = (byte)Convert.ToUInt16(((Control)cxzcycsj).Text);
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show("  Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 无线信息读取_Click(object sender, EventArgs e)
	{
		//IL_00d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_010b: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[53];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 19;
		array[3] = 2;
		array[4] = 0;
		array[5] = 24;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Successfully read！");
			string text = "";
			byte[] array2 = new byte[16];
			for (int i = 0; i < 16; i++)
			{
				array2[i] = response[3 + i];
			}
			text = Encoding.ASCII.GetString(array2);
			text = text.Replace("\0", " ");
			((Control)序列号1).Text = text;
			((Control)IP11).Text = response[19].ToString("f0");
			((Control)IP22).Text = response[20].ToString("f0");
			((Control)IP33).Text = response[21].ToString("f0");
			((Control)IP44).Text = response[22].ToString("f0");
			((Control)端口号1).Text = ((response[23] << 8) | response[24]).ToString("f0");
			((Control)协议模式1).Text = response[25].ToString("f0");
			string text2 = "";
			byte[] array3 = new byte[24];
			for (int j = 0; j < 24; j++)
			{
				array3[j] = response[27 + j];
			}
			text2 = Encoding.ASCII.GetString(array3);
			text2 = text2.Replace("\0", " ");
			((Control)域名1).Text = text2;
		}
	}

	private void 无限信息设置_Click(object sender, EventArgs e)
	{
		//IL_0278: Unknown result type (might be due to invalid IL or missing references)
		//IL_02c2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0299: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[57];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		int[] array2 = new int[8];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 19;
		array[3] = 2;
		array[4] = 0;
		array[5] = 24;
		array[6] = 48;
		string s = Convert.ToString(((Control)序列号1).Text);
		byte[] bytes = Encoding.ASCII.GetBytes(s);
		int num = 16 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[7 + i] = bytes[i];
		}
		for (int j = 0; j < num; j++)
		{
			array[7 + bytes.Length + j] = 0;
		}
		array[23] = Convert.ToByte(((Control)IP11).Text);
		array[24] = Convert.ToByte(((Control)IP22).Text);
		array[25] = Convert.ToByte(((Control)IP33).Text);
		array[26] = Convert.ToByte(((Control)IP44).Text);
		array[27] = (byte)(Convert.ToUInt16(((Control)端口号1).Text) >> 8);
		array[28] = (byte)Convert.ToUInt16(((Control)端口号1).Text);
		array[29] = Convert.ToByte(((Control)协议模式1).Text);
		string s2 = Convert.ToString(((Control)域名1).Text);
		byte[] bytes2 = Encoding.ASCII.GetBytes(s2);
		array[30] = (byte)bytes2.Length;
		int num2 = 24 - bytes2.Length;
		for (int k = 0; k < bytes2.Length; k++)
		{
			array[31 + k] = bytes2[k];
		}
		for (int l = 0; l < num2; l++)
		{
			array[31 + bytes2.Length + l] = 0;
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show("  Set successfully, please confirm whether the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void setZT1_Click(object sender, EventArgs e)
	{
		//IL_01a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c9: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[55];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 25;
		array[3] = 80;
		array[4] = 0;
		array[5] = 23;
		array[6] = 46;
		array[7] = (byte)((ListControl)中台EIOT协议模式).SelectedIndex;
		array[8] = (byte)((ListControl)平台选择).SelectedIndex;
		byte[] bytes = Encoding.ASCII.GetBytes(((Control)中台域名).Text);
		int num = 40 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[9 + i] = bytes[i];
		}
		string text = Convert.ToString(((Control)中台域名).Text);
		array[49] = (byte)(Convert.ToUInt16(((Control)ztDKH).Text) >> 8);
		array[50] = (byte)Convert.ToUInt16(((Control)ztDKH).Text);
		array[51] = 0;
		array[52] = (byte)Convert.ToUInt16(((Control)ztSBZQ).Text);
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void setZT2_Click(object sender, EventArgs e)
	{
		//IL_018c: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ad: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[89];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 25;
		array[3] = 103;
		array[4] = 0;
		array[5] = 40;
		array[6] = 80;
		string s = Convert.ToString(((Control)用户名).Text);
		byte[] bytes = Encoding.ASCII.GetBytes(s);
		int num = 40 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[7 + i] = bytes[i];
		}
		string s2 = Convert.ToString(((Control)密码).Text);
		byte[] bytes2 = Encoding.ASCII.GetBytes(s2);
		int num2 = 40 - bytes2.Length;
		for (int j = 0; j < bytes2.Length; j++)
		{
			array[47 + j] = bytes2[j];
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void readZhongtai_Click(object sender, EventArgs e)
	{
		//IL_00db: Unknown result type (might be due to invalid IL or missing references)
		//IL_012d: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fc: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[251];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 25;
		array[3] = 80;
		array[4] = 0;
		array[5] = 123;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			中台参数显示(response);
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void 中台参数显示(byte[] bb)
	{
		if (bb[3] == 0)
		{
			((ListControl)中台EIOT协议模式).SelectedIndex = 0;
		}
		else
		{
			((ListControl)中台EIOT协议模式).SelectedIndex = 1;
		}
		if (bb[4] == 0)
		{
			((ListControl)平台选择).SelectedIndex = 0;
		}
		else
		{
			((ListControl)平台选择).SelectedIndex = 1;
		}
		for (ushort num = 0; num < 40; num++)
		{
			if (bb[5 + num] == 0)
			{
				Zt1 = num;
				num = 40;
			}
		}
		string text = "";
		byte[] array = new byte[Zt1];
		for (int i = 0; i < Zt1; i++)
		{
			array[i] = bb[5 + i];
		}
		text = Encoding.ASCII.GetString(array);
		text = text.Replace("\0", " ");
		((Control)中台域名).Text = text;
		((Control)ztDKH).Text = ((bb[45] << 8) | bb[46]).ToString("f0");
		((Control)ztSBZQ).Text = bb[48].ToString("f0");
		for (ushort num = 0; num < 40; num++)
		{
			if (bb[49 + num] == 0)
			{
				Zt = num;
				num = 40;
			}
		}
		string text2 = "";
		byte[] array2 = new byte[Zt];
		for (int j = 0; j < Zt; j++)
		{
			array2[j] = bb[49 + j];
		}
		text2 = Encoding.ASCII.GetString(array2);
		text2 = text2.Replace("\0", " ");
		((Control)用户名).Text = text2;
		for (ushort num2 = 0; num2 < 40; num2++)
		{
			if (bb[89 + num2] == 0)
			{
				Zt1 = num2;
				num2 = 40;
			}
		}
		string text3 = "";
		byte[] array3 = new byte[Zt1];
		for (int k = 0; k < Zt1; k++)
		{
			array3[k] = bb[89 + k];
		}
		text3 = Encoding.ASCII.GetString(array3);
		text3 = text3.Replace("\0", " ");
		((Control)密码).Text = text3;
		for (ushort num3 = 0; num3 < 16; num3++)
		{
			if (bb[129 + num3] == 0)
			{
				Zt2 = num3;
				num3 = 16;
			}
		}
		string text4 = "";
		byte[] array4 = new byte[Zt2];
		for (int l = 0; l < Zt2; l++)
		{
			array4[l] = bb[129 + l];
		}
		text4 = Encoding.ASCII.GetString(array4);
		text4 = text4.Replace("\0", " ");
		((Control)ztXLH).Text = text4;
		for (ushort num4 = 0; num4 < 40; num4++)
		{
			if (bb[145 + num4] == 0)
			{
				Num123 = num4;
				num4 = 40;
			}
		}
		string text5 = "";
		byte[] array5 = new byte[Num123];
		for (int m = 0; m < Num123; m++)
		{
			array5[m] = bb[145 + m];
		}
		text5 = Encoding.ASCII.GetString(array5);
		text5 = text5.Replace("\0", " ");
		((Control)调试网站ip).Text = text5;
		((Control)tswzDKH).Text = ((bb[185] << 8) | bb[186]).ToString("f0");
		for (ushort num4 = 0; num4 < 40; num4++)
		{
			if (bb[187 + num4] == 0)
			{
				Num456 = num4;
				num4 = 40;
			}
		}
		string text6 = "";
		byte[] array6 = new byte[Num456];
		for (int n = 0; n < Num456; n++)
		{
			array6[n] = bb[187 + n];
		}
		text6 = Encoding.ASCII.GetString(array6);
		text6 = text6.Replace("\0", " ");
		((Control)自注册IP).Text = text6;
		((Control)zzcDKH).Text = ((bb[227] << 8) | bb[228]).ToString("f0");
		for (ushort num5 = 0; num5 < 20; num5++)
		{
			if (bb[229 + num5] == 0)
			{
				Zt3 = num5;
				num5 = 20;
			}
		}
		string text7 = "";
		byte[] array7 = new byte[Zt3];
		for (int num6 = 0; num6 < Zt3; num6++)
		{
			array7[num6] = bb[229 + num6];
		}
		text7 = Encoding.ASCII.GetString(array7);
		text7 = text7.Replace("\0", " ");
		((Control)仪表型号).Text = text7;
	}

	private void setZhongtai_Click(object sender, EventArgs e)
	{
		//IL_0276: Unknown result type (might be due to invalid IL or missing references)
		//IL_02c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_0297: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[129];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 25;
		array[3] = 143;
		array[4] = 0;
		array[5] = 60;
		array[6] = 120;
		byte[] bytes = Encoding.ASCII.GetBytes(((Control)ztXLH).Text);
		int num = 16 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[7 + i] = bytes[i];
		}
		string s = Convert.ToString(((Control)调试网站ip).Text);
		byte[] bytes2 = Encoding.ASCII.GetBytes(s);
		int num2 = 40 - bytes2.Length;
		for (int j = 0; j < bytes2.Length; j++)
		{
			array[23 + j] = bytes2[j];
		}
		array[63] = (byte)(Convert.ToUInt16(((Control)tswzDKH).Text) >> 8);
		array[64] = (byte)Convert.ToUInt16(((Control)tswzDKH).Text);
		string s2 = Convert.ToString(((Control)自注册IP).Text);
		byte[] bytes3 = Encoding.ASCII.GetBytes(s2);
		int num3 = 40 - bytes3.Length;
		for (int k = 0; k < bytes3.Length; k++)
		{
			array[65 + k] = bytes3[k];
		}
		array[105] = (byte)(Convert.ToUInt16(((Control)zzcDKH).Text) >> 8);
		array[106] = (byte)Convert.ToUInt16(((Control)zzcDKH).Text);
		byte[] bytes4 = Encoding.ASCII.GetBytes(((Control)仪表型号).Text);
		int num4 = 20 - bytes4.Length;
		for (int l = 0; l < bytes4.Length; l++)
		{
			array[107 + l] = bytes4[l];
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button20_Click(object sender, EventArgs e)
	{
		//IL_00e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0113: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[35];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 19;
		array[3] = 56;
		array[4] = 0;
		array[5] = 15;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(20);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
		}
		string text = "";
		byte[] array2 = new byte[30];
		for (int i = 0; i < 30; i++)
		{
			array2[i] = response[3 + i];
		}
		text = Encoding.ASCII.GetString(array2);
		text = text.Replace("\0", " ");
		((Control)APN号).Text = text;
	}

	private void button23_Click(object sender, EventArgs e)
	{
		//IL_0161: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_0182: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[39];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 19;
		array[3] = 56;
		array[4] = 0;
		array[5] = 15;
		array[6] = 30;
		string s = Convert.ToString(((Control)APN号).Text);
		byte[] bytes = Encoding.ASCII.GetBytes(s);
		int num = 30 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[7 + i] = bytes[i];
		}
		for (int j = 0; j < num; j++)
		{
			array[7 + bytes.Length + j] = 0;
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button80_Click(object sender, EventArgs e)
	{
		//IL_00dd: Unknown result type (might be due to invalid IL or missing references)
		//IL_019e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0104: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[251];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 25;
		array[3] = 203;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Read successfully！");
			((ListControl)comboBox6).SelectedIndex = response[3];
			if (response[4] == 165)
			{
				((ListControl)comboBox5).SelectedIndex = 1;
			}
			else
			{
				((ListControl)comboBox5).SelectedIndex = 0;
			}
			((Control)textBox201).Text = Convert.ToString((sbyte)response[5]);
			((Control)textBox199).Text = response[6].ToString("00");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button82_Click(object sender, EventArgs e)
	{
		//IL_014e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0198: Unknown result type (might be due to invalid IL or missing references)
		//IL_016f: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 25;
		array[3] = 203;
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = Convert.ToByte(((ListControl)comboBox6).SelectedIndex);
		if (((ListControl)comboBox5).SelectedIndex == 0)
		{
			array[8] = 0;
		}
		else
		{
			array[8] = 165;
		}
		array[9] = (byte)Convert.ToInt16(((Control)textBox201).Text);
		array[10] = (byte)Convert.ToInt16(((Control)textBox199).Text);
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button20_Click_1(object sender, EventArgs e)
	{
		//IL_00e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0113: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[35];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 19;
		array[3] = 56;
		array[4] = 0;
		array[5] = 15;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(20);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
		}
		string text = "";
		byte[] array2 = new byte[30];
		for (int i = 0; i < 30; i++)
		{
			array2[i] = response[3 + i];
		}
		text = Encoding.ASCII.GetString(array2);
		text = text.Replace("\0", " ");
		((Control)APN号).Text = text;
	}

	private void button23_Click_1(object sender, EventArgs e)
	{
		//IL_0161: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_0182: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[39];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 19;
		array[3] = 56;
		array[4] = 0;
		array[5] = 15;
		array[6] = 30;
		string s = Convert.ToString(((Control)APN号).Text);
		byte[] bytes = Encoding.ASCII.GetBytes(s);
		int num = 30 - bytes.Length;
		for (int i = 0; i < bytes.Length; i++)
		{
			array[7 + i] = bytes[i];
		}
		for (int j = 0; j < num; j++)
		{
			array[7 + bytes.Length + j] = 0;
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	private void button70_Click(object sender, EventArgs e)
	{
		//IL_00df: Unknown result type (might be due to invalid IL or missing references)
		//IL_010d: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[8];
		byte[] response = new byte[35];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 3;
		array[2] = 19;
		array[3] = 71;
		array[4] = 0;
		array[5] = 2;
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			Thread.Sleep(20);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show(" Read successfully！");
		}
		((Control)心跳).Text = ((response[3] << 8) | response[4]).ToString("f0");
		if (((response[5] << 8) | response[6]) == 0)
		{
			APNOFF.Checked = true;
		}
		else
		{
			APNON.Checked = true;
		}
	}

	private void button71_Click(object sender, EventArgs e)
	{
		//IL_014f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0199: Unknown result type (might be due to invalid IL or missing references)
		//IL_0170: Unknown result type (might be due to invalid IL or missing references)
		主轮抄定时器.Enabled = false;
		Modbus.sp.DiscardOutBuffer();
		Modbus.sp.DiscardInBuffer();
		byte[] array = new byte[13];
		byte[] response = new byte[8];
		byte[] CRC = new byte[2];
		array[0] = Convert.ToByte(Variable.Address);
		array[1] = 16;
		array[2] = 19;
		array[3] = 71;
		array[4] = 0;
		array[5] = 2;
		array[6] = 4;
		array[7] = (byte)(Convert.ToInt16(((Control)心跳).Text) >> 8);
		array[8] = (byte)Convert.ToInt16(((Control)心跳).Text);
		array[9] = 0;
		if (APNOFF.Checked)
		{
			array[10] = 0;
		}
		else if (APNON.Checked)
		{
			array[10] = 1;
		}
		else
		{
			array[10] = 0;
		}
		m.GetCRC(array, ref CRC);
		m.GetCRC(array, ref CRC);
		array[^2] = CRC[0];
		array[^1] = CRC[1];
		try
		{
			Modbus.sp.Write(array, 0, array.Length);
			m.GetResponse(ref response);
			PortFalshGOOD();
			Thread.Sleep(20);
		}
		catch (Exception ex)
		{
			主轮抄定时器.Enabled = true;
			PortFalshERROR();
			MessageBox.Show(ex.Message + " Please confirm the serial port and address settings！");
			return;
		}
		if (m.CheckResponse(response, 0))
		{
			MessageBox.Show(" Setting successful, please confirm if the meter parameters are correct！");
			主轮抄定时器.Enabled = true;
		}
		else
		{
			主轮抄定时器.Enabled = true;
			MessageBox.Show("Setting error！");
		}
	}

	protected override void Dispose(bool disposing)
	{
		if (disposing && components != null)
		{
			components.Dispose();
		}
		((Form)this).Dispose(disposing);
	}

	private void InitializeComponent()
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Expected O, but got Unknown
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Expected O, but got Unknown
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Expected O, but got Unknown
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Expected O, but got Unknown
		//IL_0039: Unknown result type (might be due to invalid IL or missing references)
		//IL_0043: Expected O, but got Unknown
		//IL_0044: Unknown result type (might be due to invalid IL or missing references)
		//IL_004e: Expected O, but got Unknown
		//IL_004f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0059: Expected O, but got Unknown
		//IL_005a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0064: Expected O, but got Unknown
		//IL_0065: Unknown result type (might be due to invalid IL or missing references)
		//IL_006f: Expected O, but got Unknown
		//IL_0070: Unknown result type (might be due to invalid IL or missing references)
		//IL_007a: Expected O, but got Unknown
		//IL_007b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0085: Expected O, but got Unknown
		//IL_0086: Unknown result type (might be due to invalid IL or missing references)
		//IL_0090: Expected O, but got Unknown
		//IL_0091: Unknown result type (might be due to invalid IL or missing references)
		//IL_009b: Expected O, but got Unknown
		//IL_009c: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a6: Expected O, but got Unknown
		//IL_00a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b1: Expected O, but got Unknown
		//IL_00b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bc: Expected O, but got Unknown
		//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c7: Expected O, but got Unknown
		//IL_00c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d2: Expected O, but got Unknown
		//IL_00d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_00dd: Expected O, but got Unknown
		//IL_00de: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e8: Expected O, but got Unknown
		//IL_00e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f3: Expected O, but got Unknown
		//IL_00f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fe: Expected O, but got Unknown
		//IL_00ff: Unknown result type (might be due to invalid IL or missing references)
		//IL_0109: Expected O, but got Unknown
		//IL_010a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0114: Expected O, but got Unknown
		//IL_0115: Unknown result type (might be due to invalid IL or missing references)
		//IL_011f: Expected O, but got Unknown
		//IL_0120: Unknown result type (might be due to invalid IL or missing references)
		//IL_012a: Expected O, but got Unknown
		//IL_012b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0135: Expected O, but got Unknown
		//IL_0136: Unknown result type (might be due to invalid IL or missing references)
		//IL_0140: Expected O, but got Unknown
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		//IL_014b: Expected O, but got Unknown
		//IL_014c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0156: Expected O, but got Unknown
		//IL_0157: Unknown result type (might be due to invalid IL or missing references)
		//IL_0161: Expected O, but got Unknown
		//IL_0162: Unknown result type (might be due to invalid IL or missing references)
		//IL_016c: Expected O, but got Unknown
		//IL_016d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0177: Expected O, but got Unknown
		//IL_0178: Unknown result type (might be due to invalid IL or missing references)
		//IL_0182: Expected O, but got Unknown
		//IL_0183: Unknown result type (might be due to invalid IL or missing references)
		//IL_018d: Expected O, but got Unknown
		//IL_018e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0198: Expected O, but got Unknown
		//IL_0199: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a3: Expected O, but got Unknown
		//IL_01a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ae: Expected O, but got Unknown
		//IL_01af: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b9: Expected O, but got Unknown
		//IL_01ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c4: Expected O, but got Unknown
		//IL_01c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_01cf: Expected O, but got Unknown
		//IL_01d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_01da: Expected O, but got Unknown
		//IL_01db: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e5: Expected O, but got Unknown
		//IL_01e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f0: Expected O, but got Unknown
		//IL_01f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_01fb: Expected O, but got Unknown
		//IL_01fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_0206: Expected O, but got Unknown
		//IL_0207: Unknown result type (might be due to invalid IL or missing references)
		//IL_0211: Expected O, but got Unknown
		//IL_0212: Unknown result type (might be due to invalid IL or missing references)
		//IL_021c: Expected O, but got Unknown
		//IL_021d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0227: Expected O, but got Unknown
		//IL_0228: Unknown result type (might be due to invalid IL or missing references)
		//IL_0232: Expected O, but got Unknown
		//IL_0233: Unknown result type (might be due to invalid IL or missing references)
		//IL_023d: Expected O, but got Unknown
		//IL_023e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0248: Expected O, but got Unknown
		//IL_0249: Unknown result type (might be due to invalid IL or missing references)
		//IL_0253: Expected O, but got Unknown
		//IL_0254: Unknown result type (might be due to invalid IL or missing references)
		//IL_025e: Expected O, but got Unknown
		//IL_025f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0269: Expected O, but got Unknown
		//IL_026a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0274: Expected O, but got Unknown
		//IL_0275: Unknown result type (might be due to invalid IL or missing references)
		//IL_027f: Expected O, but got Unknown
		//IL_0280: Unknown result type (might be due to invalid IL or missing references)
		//IL_028a: Expected O, but got Unknown
		//IL_028b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0295: Expected O, but got Unknown
		//IL_0296: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a0: Expected O, but got Unknown
		//IL_02a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ab: Expected O, but got Unknown
		//IL_02ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_02b6: Expected O, but got Unknown
		//IL_02b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_02c1: Expected O, but got Unknown
		//IL_02c2: Unknown result type (might be due to invalid IL or missing references)
		//IL_02cc: Expected O, but got Unknown
		//IL_02cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_02d7: Expected O, but got Unknown
		//IL_02d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_02e2: Expected O, but got Unknown
		//IL_02e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ed: Expected O, but got Unknown
		//IL_02ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_02f8: Expected O, but got Unknown
		//IL_02f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_0303: Expected O, but got Unknown
		//IL_0304: Unknown result type (might be due to invalid IL or missing references)
		//IL_030e: Expected O, but got Unknown
		//IL_030f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0319: Expected O, but got Unknown
		//IL_031a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0324: Expected O, but got Unknown
		//IL_0325: Unknown result type (might be due to invalid IL or missing references)
		//IL_032f: Expected O, but got Unknown
		//IL_0330: Unknown result type (might be due to invalid IL or missing references)
		//IL_033a: Expected O, but got Unknown
		//IL_033b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0345: Expected O, but got Unknown
		//IL_0346: Unknown result type (might be due to invalid IL or missing references)
		//IL_0350: Expected O, but got Unknown
		//IL_0351: Unknown result type (might be due to invalid IL or missing references)
		//IL_035b: Expected O, but got Unknown
		//IL_035c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0366: Expected O, but got Unknown
		//IL_0367: Unknown result type (might be due to invalid IL or missing references)
		//IL_0371: Expected O, but got Unknown
		//IL_0372: Unknown result type (might be due to invalid IL or missing references)
		//IL_037c: Expected O, but got Unknown
		//IL_037d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0387: Expected O, but got Unknown
		//IL_0388: Unknown result type (might be due to invalid IL or missing references)
		//IL_0392: Expected O, but got Unknown
		//IL_0393: Unknown result type (might be due to invalid IL or missing references)
		//IL_039d: Expected O, but got Unknown
		//IL_039e: Unknown result type (might be due to invalid IL or missing references)
		//IL_03a8: Expected O, but got Unknown
		//IL_03a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_03b3: Expected O, but got Unknown
		//IL_03b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_03be: Expected O, but got Unknown
		//IL_03bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_03c9: Expected O, but got Unknown
		//IL_03ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_03d4: Expected O, but got Unknown
		//IL_03d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_03df: Expected O, but got Unknown
		//IL_03e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_03ea: Expected O, but got Unknown
		//IL_03eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_03f5: Expected O, but got Unknown
		//IL_03f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0400: Expected O, but got Unknown
		//IL_0401: Unknown result type (might be due to invalid IL or missing references)
		//IL_040b: Expected O, but got Unknown
		//IL_040c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0416: Expected O, but got Unknown
		//IL_0417: Unknown result type (might be due to invalid IL or missing references)
		//IL_0421: Expected O, but got Unknown
		//IL_0422: Unknown result type (might be due to invalid IL or missing references)
		//IL_042c: Expected O, but got Unknown
		//IL_042d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0437: Expected O, but got Unknown
		//IL_0438: Unknown result type (might be due to invalid IL or missing references)
		//IL_0442: Expected O, but got Unknown
		//IL_0443: Unknown result type (might be due to invalid IL or missing references)
		//IL_044d: Expected O, but got Unknown
		//IL_044e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0458: Expected O, but got Unknown
		//IL_0459: Unknown result type (might be due to invalid IL or missing references)
		//IL_0463: Expected O, but got Unknown
		//IL_0464: Unknown result type (might be due to invalid IL or missing references)
		//IL_046e: Expected O, but got Unknown
		//IL_046f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0479: Expected O, but got Unknown
		//IL_047a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0484: Expected O, but got Unknown
		//IL_0485: Unknown result type (might be due to invalid IL or missing references)
		//IL_048f: Expected O, but got Unknown
		//IL_0490: Unknown result type (might be due to invalid IL or missing references)
		//IL_049a: Expected O, but got Unknown
		//IL_049b: Unknown result type (might be due to invalid IL or missing references)
		//IL_04a5: Expected O, but got Unknown
		//IL_04a6: Unknown result type (might be due to invalid IL or missing references)
		//IL_04b0: Expected O, but got Unknown
		//IL_04b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_04bb: Expected O, but got Unknown
		//IL_04bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_04c6: Expected O, but got Unknown
		//IL_04c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_04d1: Expected O, but got Unknown
		//IL_04d2: Unknown result type (might be due to invalid IL or missing references)
		//IL_04dc: Expected O, but got Unknown
		//IL_04dd: Unknown result type (might be due to invalid IL or missing references)
		//IL_04e7: Expected O, but got Unknown
		//IL_04e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_04f2: Expected O, but got Unknown
		//IL_04f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_04fd: Expected O, but got Unknown
		//IL_04fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_0508: Expected O, but got Unknown
		//IL_0509: Unknown result type (might be due to invalid IL or missing references)
		//IL_0513: Expected O, but got Unknown
		//IL_0514: Unknown result type (might be due to invalid IL or missing references)
		//IL_051e: Expected O, but got Unknown
		//IL_051f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0529: Expected O, but got Unknown
		//IL_052a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0534: Expected O, but got Unknown
		//IL_0535: Unknown result type (might be due to invalid IL or missing references)
		//IL_053f: Expected O, but got Unknown
		//IL_0540: Unknown result type (might be due to invalid IL or missing references)
		//IL_054a: Expected O, but got Unknown
		//IL_054b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0555: Expected O, but got Unknown
		//IL_0556: Unknown result type (might be due to invalid IL or missing references)
		//IL_0560: Expected O, but got Unknown
		//IL_0561: Unknown result type (might be due to invalid IL or missing references)
		//IL_056b: Expected O, but got Unknown
		//IL_056c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0576: Expected O, but got Unknown
		//IL_0577: Unknown result type (might be due to invalid IL or missing references)
		//IL_0581: Expected O, but got Unknown
		//IL_0582: Unknown result type (might be due to invalid IL or missing references)
		//IL_058c: Expected O, but got Unknown
		//IL_058d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0597: Expected O, but got Unknown
		//IL_0598: Unknown result type (might be due to invalid IL or missing references)
		//IL_05a2: Expected O, but got Unknown
		//IL_05a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_05ad: Expected O, but got Unknown
		//IL_05ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_05b8: Expected O, but got Unknown
		//IL_05b9: Unknown result type (might be due to invalid IL or missing references)
		//IL_05c3: Expected O, but got Unknown
		//IL_05c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_05ce: Expected O, but got Unknown
		//IL_05cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_05d9: Expected O, but got Unknown
		//IL_05da: Unknown result type (might be due to invalid IL or missing references)
		//IL_05e4: Expected O, but got Unknown
		//IL_05e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_05ef: Expected O, but got Unknown
		//IL_05f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_05fa: Expected O, but got Unknown
		//IL_05fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0605: Expected O, but got Unknown
		//IL_0606: Unknown result type (might be due to invalid IL or missing references)
		//IL_0610: Expected O, but got Unknown
		//IL_0611: Unknown result type (might be due to invalid IL or missing references)
		//IL_061b: Expected O, but got Unknown
		//IL_061c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0626: Expected O, but got Unknown
		//IL_0627: Unknown result type (might be due to invalid IL or missing references)
		//IL_0631: Expected O, but got Unknown
		//IL_0632: Unknown result type (might be due to invalid IL or missing references)
		//IL_063c: Expected O, but got Unknown
		//IL_063d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0647: Expected O, but got Unknown
		//IL_0648: Unknown result type (might be due to invalid IL or missing references)
		//IL_0652: Expected O, but got Unknown
		//IL_0653: Unknown result type (might be due to invalid IL or missing references)
		//IL_065d: Expected O, but got Unknown
		//IL_065e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0668: Expected O, but got Unknown
		//IL_0669: Unknown result type (might be due to invalid IL or missing references)
		//IL_0673: Expected O, but got Unknown
		//IL_0674: Unknown result type (might be due to invalid IL or missing references)
		//IL_067e: Expected O, but got Unknown
		//IL_067f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0689: Expected O, but got Unknown
		//IL_068a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0694: Expected O, but got Unknown
		//IL_0695: Unknown result type (might be due to invalid IL or missing references)
		//IL_069f: Expected O, but got Unknown
		//IL_06a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_06aa: Expected O, but got Unknown
		//IL_06ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_06b5: Expected O, but got Unknown
		//IL_06b6: Unknown result type (might be due to invalid IL or missing references)
		//IL_06c0: Expected O, but got Unknown
		//IL_06c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_06cb: Expected O, but got Unknown
		//IL_06cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_06d6: Expected O, but got Unknown
		//IL_06d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_06e1: Expected O, but got Unknown
		//IL_06e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_06ec: Expected O, but got Unknown
		//IL_06ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_06f7: Expected O, but got Unknown
		//IL_06f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0702: Expected O, but got Unknown
		//IL_0703: Unknown result type (might be due to invalid IL or missing references)
		//IL_070d: Expected O, but got Unknown
		//IL_070e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0718: Expected O, but got Unknown
		//IL_0719: Unknown result type (might be due to invalid IL or missing references)
		//IL_0723: Expected O, but got Unknown
		//IL_0724: Unknown result type (might be due to invalid IL or missing references)
		//IL_072e: Expected O, but got Unknown
		//IL_072f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0739: Expected O, but got Unknown
		//IL_073a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0744: Expected O, but got Unknown
		//IL_0745: Unknown result type (might be due to invalid IL or missing references)
		//IL_074f: Expected O, but got Unknown
		//IL_0750: Unknown result type (might be due to invalid IL or missing references)
		//IL_075a: Expected O, but got Unknown
		//IL_075b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0765: Expected O, but got Unknown
		//IL_0766: Unknown result type (might be due to invalid IL or missing references)
		//IL_0770: Expected O, but got Unknown
		//IL_0771: Unknown result type (might be due to invalid IL or missing references)
		//IL_077b: Expected O, but got Unknown
		//IL_077c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0786: Expected O, but got Unknown
		//IL_0787: Unknown result type (might be due to invalid IL or missing references)
		//IL_0791: Expected O, but got Unknown
		//IL_0792: Unknown result type (might be due to invalid IL or missing references)
		//IL_079c: Expected O, but got Unknown
		//IL_079d: Unknown result type (might be due to invalid IL or missing references)
		//IL_07a7: Expected O, but got Unknown
		//IL_07a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_07b2: Expected O, but got Unknown
		//IL_07b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_07bd: Expected O, but got Unknown
		//IL_07be: Unknown result type (might be due to invalid IL or missing references)
		//IL_07c8: Expected O, but got Unknown
		//IL_07c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_07d3: Expected O, but got Unknown
		//IL_07d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_07de: Expected O, but got Unknown
		//IL_07df: Unknown result type (might be due to invalid IL or missing references)
		//IL_07e9: Expected O, but got Unknown
		//IL_07ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_07f4: Expected O, but got Unknown
		//IL_07f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_07ff: Expected O, but got Unknown
		//IL_0800: Unknown result type (might be due to invalid IL or missing references)
		//IL_080a: Expected O, but got Unknown
		//IL_080b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0815: Expected O, but got Unknown
		//IL_0816: Unknown result type (might be due to invalid IL or missing references)
		//IL_0820: Expected O, but got Unknown
		//IL_0821: Unknown result type (might be due to invalid IL or missing references)
		//IL_082b: Expected O, but got Unknown
		//IL_082c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0836: Expected O, but got Unknown
		//IL_0837: Unknown result type (might be due to invalid IL or missing references)
		//IL_0841: Expected O, but got Unknown
		//IL_0842: Unknown result type (might be due to invalid IL or missing references)
		//IL_084c: Expected O, but got Unknown
		//IL_084d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0857: Expected O, but got Unknown
		//IL_0858: Unknown result type (might be due to invalid IL or missing references)
		//IL_0862: Expected O, but got Unknown
		//IL_0863: Unknown result type (might be due to invalid IL or missing references)
		//IL_086d: Expected O, but got Unknown
		//IL_086e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0878: Expected O, but got Unknown
		//IL_0879: Unknown result type (might be due to invalid IL or missing references)
		//IL_0883: Expected O, but got Unknown
		//IL_0884: Unknown result type (might be due to invalid IL or missing references)
		//IL_088e: Expected O, but got Unknown
		//IL_088f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0899: Expected O, but got Unknown
		//IL_089a: Unknown result type (might be due to invalid IL or missing references)
		//IL_08a4: Expected O, but got Unknown
		//IL_08a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_08af: Expected O, but got Unknown
		//IL_08b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_08ba: Expected O, but got Unknown
		//IL_08bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_08c5: Expected O, but got Unknown
		//IL_08c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_08d0: Expected O, but got Unknown
		//IL_08d1: Unknown result type (might be due to invalid IL or missing references)
		//IL_08db: Expected O, but got Unknown
		//IL_08dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_08e6: Expected O, but got Unknown
		//IL_08e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_08f1: Expected O, but got Unknown
		//IL_08f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_08fc: Expected O, but got Unknown
		//IL_08fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0907: Expected O, but got Unknown
		//IL_0908: Unknown result type (might be due to invalid IL or missing references)
		//IL_0912: Expected O, but got Unknown
		//IL_0913: Unknown result type (might be due to invalid IL or missing references)
		//IL_091d: Expected O, but got Unknown
		//IL_091e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0928: Expected O, but got Unknown
		//IL_0929: Unknown result type (might be due to invalid IL or missing references)
		//IL_0933: Expected O, but got Unknown
		//IL_0934: Unknown result type (might be due to invalid IL or missing references)
		//IL_093e: Expected O, but got Unknown
		//IL_093f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0949: Expected O, but got Unknown
		//IL_094a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0954: Expected O, but got Unknown
		//IL_0955: Unknown result type (might be due to invalid IL or missing references)
		//IL_095f: Expected O, but got Unknown
		//IL_0960: Unknown result type (might be due to invalid IL or missing references)
		//IL_096a: Expected O, but got Unknown
		//IL_096b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0975: Expected O, but got Unknown
		//IL_0976: Unknown result type (might be due to invalid IL or missing references)
		//IL_0980: Expected O, but got Unknown
		//IL_0981: Unknown result type (might be due to invalid IL or missing references)
		//IL_098b: Expected O, but got Unknown
		//IL_098c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0996: Expected O, but got Unknown
		//IL_0997: Unknown result type (might be due to invalid IL or missing references)
		//IL_09a1: Expected O, but got Unknown
		//IL_09a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_09ac: Expected O, but got Unknown
		//IL_09ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_09b7: Expected O, but got Unknown
		//IL_09b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_09c2: Expected O, but got Unknown
		//IL_09c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_09cd: Expected O, but got Unknown
		//IL_09ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_09d8: Expected O, but got Unknown
		//IL_09d9: Unknown result type (might be due to invalid IL or missing references)
		//IL_09e3: Expected O, but got Unknown
		//IL_09e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_09ee: Expected O, but got Unknown
		//IL_09ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_09f9: Expected O, but got Unknown
		//IL_09fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a04: Expected O, but got Unknown
		//IL_0a05: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a0f: Expected O, but got Unknown
		//IL_0a10: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a1a: Expected O, but got Unknown
		//IL_0a1b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a25: Expected O, but got Unknown
		//IL_0a26: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a30: Expected O, but got Unknown
		//IL_0a31: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a3b: Expected O, but got Unknown
		//IL_0a3c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a46: Expected O, but got Unknown
		//IL_0a47: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a51: Expected O, but got Unknown
		//IL_0a52: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a5c: Expected O, but got Unknown
		//IL_0a5d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a67: Expected O, but got Unknown
		//IL_0a68: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a72: Expected O, but got Unknown
		//IL_0a73: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a7d: Expected O, but got Unknown
		//IL_0a7e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a88: Expected O, but got Unknown
		//IL_0a89: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a93: Expected O, but got Unknown
		//IL_0a94: Unknown result type (might be due to invalid IL or missing references)
		//IL_0a9e: Expected O, but got Unknown
		//IL_0a9f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0aa9: Expected O, but got Unknown
		//IL_0aaa: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ab4: Expected O, but got Unknown
		//IL_0ab5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0abf: Expected O, but got Unknown
		//IL_0ac0: Unknown result type (might be due to invalid IL or missing references)
		//IL_0aca: Expected O, but got Unknown
		//IL_0acb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ad5: Expected O, but got Unknown
		//IL_0ad6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ae0: Expected O, but got Unknown
		//IL_0ae1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0aeb: Expected O, but got Unknown
		//IL_0aec: Unknown result type (might be due to invalid IL or missing references)
		//IL_0af6: Expected O, but got Unknown
		//IL_0af7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b01: Expected O, but got Unknown
		//IL_0b02: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b0c: Expected O, but got Unknown
		//IL_0b0d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b17: Expected O, but got Unknown
		//IL_0b18: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b22: Expected O, but got Unknown
		//IL_0b23: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b2d: Expected O, but got Unknown
		//IL_0b2e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b38: Expected O, but got Unknown
		//IL_0b39: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b43: Expected O, but got Unknown
		//IL_0b44: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b4e: Expected O, but got Unknown
		//IL_0b4f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b59: Expected O, but got Unknown
		//IL_0b5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b64: Expected O, but got Unknown
		//IL_0b65: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b6f: Expected O, but got Unknown
		//IL_0b70: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b7a: Expected O, but got Unknown
		//IL_0b7b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b85: Expected O, but got Unknown
		//IL_0b86: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b90: Expected O, but got Unknown
		//IL_0b91: Unknown result type (might be due to invalid IL or missing references)
		//IL_0b9b: Expected O, but got Unknown
		//IL_0b9c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ba6: Expected O, but got Unknown
		//IL_0ba7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bb1: Expected O, but got Unknown
		//IL_0bb2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bbc: Expected O, but got Unknown
		//IL_0bbd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bc7: Expected O, but got Unknown
		//IL_0bc8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bd2: Expected O, but got Unknown
		//IL_0bd3: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bdd: Expected O, but got Unknown
		//IL_0bde: Unknown result type (might be due to invalid IL or missing references)
		//IL_0be8: Expected O, but got Unknown
		//IL_0be9: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bf3: Expected O, but got Unknown
		//IL_0bf4: Unknown result type (might be due to invalid IL or missing references)
		//IL_0bfe: Expected O, but got Unknown
		//IL_0bff: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c09: Expected O, but got Unknown
		//IL_0c0a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c14: Expected O, but got Unknown
		//IL_0c15: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c1f: Expected O, but got Unknown
		//IL_0c20: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c2a: Expected O, but got Unknown
		//IL_0c2b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c35: Expected O, but got Unknown
		//IL_0c36: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c40: Expected O, but got Unknown
		//IL_0c41: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c4b: Expected O, but got Unknown
		//IL_0c4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c56: Expected O, but got Unknown
		//IL_0c57: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c61: Expected O, but got Unknown
		//IL_0c62: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c6c: Expected O, but got Unknown
		//IL_0c6d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c77: Expected O, but got Unknown
		//IL_0c78: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c82: Expected O, but got Unknown
		//IL_0c83: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c8d: Expected O, but got Unknown
		//IL_0c8e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0c98: Expected O, but got Unknown
		//IL_0c99: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ca3: Expected O, but got Unknown
		//IL_0ca4: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cae: Expected O, but got Unknown
		//IL_0caf: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cb9: Expected O, but got Unknown
		//IL_0cba: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cc4: Expected O, but got Unknown
		//IL_0cc5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ccf: Expected O, but got Unknown
		//IL_0cd0: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cda: Expected O, but got Unknown
		//IL_0cdb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ce5: Expected O, but got Unknown
		//IL_0ce6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cf0: Expected O, but got Unknown
		//IL_0cf1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0cfb: Expected O, but got Unknown
		//IL_0cfc: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d06: Expected O, but got Unknown
		//IL_0d07: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d11: Expected O, but got Unknown
		//IL_0d12: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d1c: Expected O, but got Unknown
		//IL_0d1d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d27: Expected O, but got Unknown
		//IL_0d28: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d32: Expected O, but got Unknown
		//IL_0d33: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d3d: Expected O, but got Unknown
		//IL_0d3e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d48: Expected O, but got Unknown
		//IL_0d49: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d53: Expected O, but got Unknown
		//IL_0d54: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d5e: Expected O, but got Unknown
		//IL_0d5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d69: Expected O, but got Unknown
		//IL_0d6a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d74: Expected O, but got Unknown
		//IL_0d75: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d7f: Expected O, but got Unknown
		//IL_0d80: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d8a: Expected O, but got Unknown
		//IL_0d8b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0d95: Expected O, but got Unknown
		//IL_0d96: Unknown result type (might be due to invalid IL or missing references)
		//IL_0da0: Expected O, but got Unknown
		//IL_0da1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0dab: Expected O, but got Unknown
		//IL_0dac: Unknown result type (might be due to invalid IL or missing references)
		//IL_0db6: Expected O, but got Unknown
		//IL_0db7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0dc1: Expected O, but got Unknown
		//IL_0dc2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0dcc: Expected O, but got Unknown
		//IL_0dcd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0dd7: Expected O, but got Unknown
		//IL_0dd8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0de2: Expected O, but got Unknown
		//IL_0de3: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ded: Expected O, but got Unknown
		//IL_0dee: Unknown result type (might be due to invalid IL or missing references)
		//IL_0df8: Expected O, but got Unknown
		//IL_0df9: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e03: Expected O, but got Unknown
		//IL_0e04: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e0e: Expected O, but got Unknown
		//IL_0e0f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e19: Expected O, but got Unknown
		//IL_0e1a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e24: Expected O, but got Unknown
		//IL_0e25: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e2f: Expected O, but got Unknown
		//IL_0e30: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e3a: Expected O, but got Unknown
		//IL_0e3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e45: Expected O, but got Unknown
		//IL_0e46: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e50: Expected O, but got Unknown
		//IL_0e51: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e5b: Expected O, but got Unknown
		//IL_0e5c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e66: Expected O, but got Unknown
		//IL_0e67: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e71: Expected O, but got Unknown
		//IL_0e72: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e7c: Expected O, but got Unknown
		//IL_0e7d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e87: Expected O, but got Unknown
		//IL_0e88: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e92: Expected O, but got Unknown
		//IL_0e93: Unknown result type (might be due to invalid IL or missing references)
		//IL_0e9d: Expected O, but got Unknown
		//IL_0e9e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ea8: Expected O, but got Unknown
		//IL_0ea9: Unknown result type (might be due to invalid IL or missing references)
		//IL_0eb3: Expected O, but got Unknown
		//IL_0eb4: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ebe: Expected O, but got Unknown
		//IL_0ebf: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ec9: Expected O, but got Unknown
		//IL_0eca: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ed4: Expected O, but got Unknown
		//IL_0ed5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0edf: Expected O, but got Unknown
		//IL_0ee0: Unknown result type (might be due to invalid IL or missing references)
		//IL_0eea: Expected O, but got Unknown
		//IL_0eeb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ef5: Expected O, but got Unknown
		//IL_0ef6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f00: Expected O, but got Unknown
		//IL_0f01: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f0b: Expected O, but got Unknown
		//IL_0f0c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f16: Expected O, but got Unknown
		//IL_0f17: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f21: Expected O, but got Unknown
		//IL_0f22: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f2c: Expected O, but got Unknown
		//IL_0f2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f37: Expected O, but got Unknown
		//IL_0f38: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f42: Expected O, but got Unknown
		//IL_0f43: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f4d: Expected O, but got Unknown
		//IL_0f4e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f58: Expected O, but got Unknown
		//IL_0f59: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f63: Expected O, but got Unknown
		//IL_0f64: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f6e: Expected O, but got Unknown
		//IL_0f6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f79: Expected O, but got Unknown
		//IL_0f7a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f84: Expected O, but got Unknown
		//IL_0f85: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f8f: Expected O, but got Unknown
		//IL_0f90: Unknown result type (might be due to invalid IL or missing references)
		//IL_0f9a: Expected O, but got Unknown
		//IL_0f9b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fa5: Expected O, but got Unknown
		//IL_0fa6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fb0: Expected O, but got Unknown
		//IL_0fb1: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fbb: Expected O, but got Unknown
		//IL_0fbc: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fc6: Expected O, but got Unknown
		//IL_0fc7: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fd1: Expected O, but got Unknown
		//IL_0fd2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fdc: Expected O, but got Unknown
		//IL_0fdd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0fe7: Expected O, but got Unknown
		//IL_0fe8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ff2: Expected O, but got Unknown
		//IL_0ff3: Unknown result type (might be due to invalid IL or missing references)
		//IL_0ffd: Expected O, but got Unknown
		//IL_0ffe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1008: Expected O, but got Unknown
		//IL_1009: Unknown result type (might be due to invalid IL or missing references)
		//IL_1013: Expected O, but got Unknown
		//IL_1014: Unknown result type (might be due to invalid IL or missing references)
		//IL_101e: Expected O, but got Unknown
		//IL_101f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1029: Expected O, but got Unknown
		//IL_102a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1034: Expected O, but got Unknown
		//IL_1035: Unknown result type (might be due to invalid IL or missing references)
		//IL_103f: Expected O, but got Unknown
		//IL_1040: Unknown result type (might be due to invalid IL or missing references)
		//IL_104a: Expected O, but got Unknown
		//IL_104b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1055: Expected O, but got Unknown
		//IL_1056: Unknown result type (might be due to invalid IL or missing references)
		//IL_1060: Expected O, but got Unknown
		//IL_1061: Unknown result type (might be due to invalid IL or missing references)
		//IL_106b: Expected O, but got Unknown
		//IL_106c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1076: Expected O, but got Unknown
		//IL_1077: Unknown result type (might be due to invalid IL or missing references)
		//IL_1081: Expected O, but got Unknown
		//IL_1082: Unknown result type (might be due to invalid IL or missing references)
		//IL_108c: Expected O, but got Unknown
		//IL_108d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1097: Expected O, but got Unknown
		//IL_1098: Unknown result type (might be due to invalid IL or missing references)
		//IL_10a2: Expected O, but got Unknown
		//IL_10a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_10ad: Expected O, but got Unknown
		//IL_10ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_10b8: Expected O, but got Unknown
		//IL_10b9: Unknown result type (might be due to invalid IL or missing references)
		//IL_10c3: Expected O, but got Unknown
		//IL_10c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_10ce: Expected O, but got Unknown
		//IL_10cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_10d9: Expected O, but got Unknown
		//IL_10da: Unknown result type (might be due to invalid IL or missing references)
		//IL_10e4: Expected O, but got Unknown
		//IL_10e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_10ef: Expected O, but got Unknown
		//IL_10f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_10fa: Expected O, but got Unknown
		//IL_10fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1105: Expected O, but got Unknown
		//IL_1106: Unknown result type (might be due to invalid IL or missing references)
		//IL_1110: Expected O, but got Unknown
		//IL_1111: Unknown result type (might be due to invalid IL or missing references)
		//IL_111b: Expected O, but got Unknown
		//IL_111c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1126: Expected O, but got Unknown
		//IL_1127: Unknown result type (might be due to invalid IL or missing references)
		//IL_1131: Expected O, but got Unknown
		//IL_1132: Unknown result type (might be due to invalid IL or missing references)
		//IL_113c: Expected O, but got Unknown
		//IL_113d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1147: Expected O, but got Unknown
		//IL_1148: Unknown result type (might be due to invalid IL or missing references)
		//IL_1152: Expected O, but got Unknown
		//IL_1153: Unknown result type (might be due to invalid IL or missing references)
		//IL_115d: Expected O, but got Unknown
		//IL_115e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1168: Expected O, but got Unknown
		//IL_1169: Unknown result type (might be due to invalid IL or missing references)
		//IL_1173: Expected O, but got Unknown
		//IL_1174: Unknown result type (might be due to invalid IL or missing references)
		//IL_117e: Expected O, but got Unknown
		//IL_117f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1189: Expected O, but got Unknown
		//IL_118a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1194: Expected O, but got Unknown
		//IL_1195: Unknown result type (might be due to invalid IL or missing references)
		//IL_119f: Expected O, but got Unknown
		//IL_11a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_11aa: Expected O, but got Unknown
		//IL_11ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_11b5: Expected O, but got Unknown
		//IL_11b6: Unknown result type (might be due to invalid IL or missing references)
		//IL_11c0: Expected O, but got Unknown
		//IL_11c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_11cb: Expected O, but got Unknown
		//IL_11cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_11d6: Expected O, but got Unknown
		//IL_11d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_11e1: Expected O, but got Unknown
		//IL_11e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_11ec: Expected O, but got Unknown
		//IL_11ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_11f7: Expected O, but got Unknown
		//IL_11f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1202: Expected O, but got Unknown
		//IL_1203: Unknown result type (might be due to invalid IL or missing references)
		//IL_120d: Expected O, but got Unknown
		//IL_120e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1218: Expected O, but got Unknown
		//IL_1219: Unknown result type (might be due to invalid IL or missing references)
		//IL_1223: Expected O, but got Unknown
		//IL_1224: Unknown result type (might be due to invalid IL or missing references)
		//IL_122e: Expected O, but got Unknown
		//IL_122f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1239: Expected O, but got Unknown
		//IL_123a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1244: Expected O, but got Unknown
		//IL_1245: Unknown result type (might be due to invalid IL or missing references)
		//IL_124f: Expected O, but got Unknown
		//IL_1250: Unknown result type (might be due to invalid IL or missing references)
		//IL_125a: Expected O, but got Unknown
		//IL_125b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1265: Expected O, but got Unknown
		//IL_1266: Unknown result type (might be due to invalid IL or missing references)
		//IL_1270: Expected O, but got Unknown
		//IL_1271: Unknown result type (might be due to invalid IL or missing references)
		//IL_127b: Expected O, but got Unknown
		//IL_127c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1286: Expected O, but got Unknown
		//IL_1287: Unknown result type (might be due to invalid IL or missing references)
		//IL_1291: Expected O, but got Unknown
		//IL_1292: Unknown result type (might be due to invalid IL or missing references)
		//IL_129c: Expected O, but got Unknown
		//IL_129d: Unknown result type (might be due to invalid IL or missing references)
		//IL_12a7: Expected O, but got Unknown
		//IL_12a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_12b2: Expected O, but got Unknown
		//IL_12b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_12bd: Expected O, but got Unknown
		//IL_12be: Unknown result type (might be due to invalid IL or missing references)
		//IL_12c8: Expected O, but got Unknown
		//IL_12c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_12d3: Expected O, but got Unknown
		//IL_12d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_12de: Expected O, but got Unknown
		//IL_12df: Unknown result type (might be due to invalid IL or missing references)
		//IL_12e9: Expected O, but got Unknown
		//IL_12ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_12f4: Expected O, but got Unknown
		//IL_12f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_12ff: Expected O, but got Unknown
		//IL_1300: Unknown result type (might be due to invalid IL or missing references)
		//IL_130a: Expected O, but got Unknown
		//IL_130b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1315: Expected O, but got Unknown
		//IL_1316: Unknown result type (might be due to invalid IL or missing references)
		//IL_1320: Expected O, but got Unknown
		//IL_1321: Unknown result type (might be due to invalid IL or missing references)
		//IL_132b: Expected O, but got Unknown
		//IL_132c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1336: Expected O, but got Unknown
		//IL_1337: Unknown result type (might be due to invalid IL or missing references)
		//IL_1341: Expected O, but got Unknown
		//IL_1342: Unknown result type (might be due to invalid IL or missing references)
		//IL_134c: Expected O, but got Unknown
		//IL_134d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1357: Expected O, but got Unknown
		//IL_1358: Unknown result type (might be due to invalid IL or missing references)
		//IL_1362: Expected O, but got Unknown
		//IL_1363: Unknown result type (might be due to invalid IL or missing references)
		//IL_136d: Expected O, but got Unknown
		//IL_136e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1378: Expected O, but got Unknown
		//IL_1379: Unknown result type (might be due to invalid IL or missing references)
		//IL_1383: Expected O, but got Unknown
		//IL_1384: Unknown result type (might be due to invalid IL or missing references)
		//IL_138e: Expected O, but got Unknown
		//IL_138f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1399: Expected O, but got Unknown
		//IL_139a: Unknown result type (might be due to invalid IL or missing references)
		//IL_13a4: Expected O, but got Unknown
		//IL_13a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_13af: Expected O, but got Unknown
		//IL_13b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_13ba: Expected O, but got Unknown
		//IL_13bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_13c5: Expected O, but got Unknown
		//IL_13c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_13d0: Expected O, but got Unknown
		//IL_13d1: Unknown result type (might be due to invalid IL or missing references)
		//IL_13db: Expected O, but got Unknown
		//IL_13dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_13e6: Expected O, but got Unknown
		//IL_13e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_13f1: Expected O, but got Unknown
		//IL_13f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_13fc: Expected O, but got Unknown
		//IL_13fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_1407: Expected O, but got Unknown
		//IL_1408: Unknown result type (might be due to invalid IL or missing references)
		//IL_1412: Expected O, but got Unknown
		//IL_1413: Unknown result type (might be due to invalid IL or missing references)
		//IL_141d: Expected O, but got Unknown
		//IL_141e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1428: Expected O, but got Unknown
		//IL_1429: Unknown result type (might be due to invalid IL or missing references)
		//IL_1433: Expected O, but got Unknown
		//IL_1434: Unknown result type (might be due to invalid IL or missing references)
		//IL_143e: Expected O, but got Unknown
		//IL_143f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1449: Expected O, but got Unknown
		//IL_144a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1454: Expected O, but got Unknown
		//IL_1455: Unknown result type (might be due to invalid IL or missing references)
		//IL_145f: Expected O, but got Unknown
		//IL_1460: Unknown result type (might be due to invalid IL or missing references)
		//IL_146a: Expected O, but got Unknown
		//IL_146b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1475: Expected O, but got Unknown
		//IL_1476: Unknown result type (might be due to invalid IL or missing references)
		//IL_1480: Expected O, but got Unknown
		//IL_1481: Unknown result type (might be due to invalid IL or missing references)
		//IL_148b: Expected O, but got Unknown
		//IL_148c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1496: Expected O, but got Unknown
		//IL_1497: Unknown result type (might be due to invalid IL or missing references)
		//IL_14a1: Expected O, but got Unknown
		//IL_14a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_14ac: Expected O, but got Unknown
		//IL_14ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_14b7: Expected O, but got Unknown
		//IL_14b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_14c2: Expected O, but got Unknown
		//IL_14c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_14cd: Expected O, but got Unknown
		//IL_14ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_14d8: Expected O, but got Unknown
		//IL_14d9: Unknown result type (might be due to invalid IL or missing references)
		//IL_14e3: Expected O, but got Unknown
		//IL_14e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_14ee: Expected O, but got Unknown
		//IL_14ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_14f9: Expected O, but got Unknown
		//IL_14fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_1504: Expected O, but got Unknown
		//IL_1505: Unknown result type (might be due to invalid IL or missing references)
		//IL_150f: Expected O, but got Unknown
		//IL_1510: Unknown result type (might be due to invalid IL or missing references)
		//IL_151a: Expected O, but got Unknown
		//IL_151b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1525: Expected O, but got Unknown
		//IL_1526: Unknown result type (might be due to invalid IL or missing references)
		//IL_1530: Expected O, but got Unknown
		//IL_1531: Unknown result type (might be due to invalid IL or missing references)
		//IL_153b: Expected O, but got Unknown
		//IL_153c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1546: Expected O, but got Unknown
		//IL_1547: Unknown result type (might be due to invalid IL or missing references)
		//IL_1551: Expected O, but got Unknown
		//IL_1552: Unknown result type (might be due to invalid IL or missing references)
		//IL_155c: Expected O, but got Unknown
		//IL_155d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1567: Expected O, but got Unknown
		//IL_1568: Unknown result type (might be due to invalid IL or missing references)
		//IL_1572: Expected O, but got Unknown
		//IL_1573: Unknown result type (might be due to invalid IL or missing references)
		//IL_157d: Expected O, but got Unknown
		//IL_157e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1588: Expected O, but got Unknown
		//IL_1589: Unknown result type (might be due to invalid IL or missing references)
		//IL_1593: Expected O, but got Unknown
		//IL_1594: Unknown result type (might be due to invalid IL or missing references)
		//IL_159e: Expected O, but got Unknown
		//IL_159f: Unknown result type (might be due to invalid IL or missing references)
		//IL_15a9: Expected O, but got Unknown
		//IL_15aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_15b4: Expected O, but got Unknown
		//IL_15b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_15bf: Expected O, but got Unknown
		//IL_15c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_15ca: Expected O, but got Unknown
		//IL_15cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_15d5: Expected O, but got Unknown
		//IL_15d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_15e0: Expected O, but got Unknown
		//IL_15e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_15eb: Expected O, but got Unknown
		//IL_15ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_15f6: Expected O, but got Unknown
		//IL_15f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1601: Expected O, but got Unknown
		//IL_1602: Unknown result type (might be due to invalid IL or missing references)
		//IL_160c: Expected O, but got Unknown
		//IL_160d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1617: Expected O, but got Unknown
		//IL_1618: Unknown result type (might be due to invalid IL or missing references)
		//IL_1622: Expected O, but got Unknown
		//IL_1623: Unknown result type (might be due to invalid IL or missing references)
		//IL_162d: Expected O, but got Unknown
		//IL_162e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1638: Expected O, but got Unknown
		//IL_1639: Unknown result type (might be due to invalid IL or missing references)
		//IL_1643: Expected O, but got Unknown
		//IL_1644: Unknown result type (might be due to invalid IL or missing references)
		//IL_164e: Expected O, but got Unknown
		//IL_164f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1659: Expected O, but got Unknown
		//IL_165a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1664: Expected O, but got Unknown
		//IL_1665: Unknown result type (might be due to invalid IL or missing references)
		//IL_166f: Expected O, but got Unknown
		//IL_1670: Unknown result type (might be due to invalid IL or missing references)
		//IL_167a: Expected O, but got Unknown
		//IL_167b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1685: Expected O, but got Unknown
		//IL_1686: Unknown result type (might be due to invalid IL or missing references)
		//IL_1690: Expected O, but got Unknown
		//IL_1691: Unknown result type (might be due to invalid IL or missing references)
		//IL_169b: Expected O, but got Unknown
		//IL_169c: Unknown result type (might be due to invalid IL or missing references)
		//IL_16a6: Expected O, but got Unknown
		//IL_16a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_16b1: Expected O, but got Unknown
		//IL_16b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_16bc: Expected O, but got Unknown
		//IL_16bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_16c7: Expected O, but got Unknown
		//IL_16c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_16d2: Expected O, but got Unknown
		//IL_16d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_16dd: Expected O, but got Unknown
		//IL_16de: Unknown result type (might be due to invalid IL or missing references)
		//IL_16e8: Expected O, but got Unknown
		//IL_16e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_16f3: Expected O, but got Unknown
		//IL_16f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_16fe: Expected O, but got Unknown
		//IL_16ff: Unknown result type (might be due to invalid IL or missing references)
		//IL_1709: Expected O, but got Unknown
		//IL_170a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1714: Expected O, but got Unknown
		//IL_1715: Unknown result type (might be due to invalid IL or missing references)
		//IL_171f: Expected O, but got Unknown
		//IL_1720: Unknown result type (might be due to invalid IL or missing references)
		//IL_172a: Expected O, but got Unknown
		//IL_172b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1735: Expected O, but got Unknown
		//IL_1736: Unknown result type (might be due to invalid IL or missing references)
		//IL_1740: Expected O, but got Unknown
		//IL_1741: Unknown result type (might be due to invalid IL or missing references)
		//IL_174b: Expected O, but got Unknown
		//IL_174c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1756: Expected O, but got Unknown
		//IL_1757: Unknown result type (might be due to invalid IL or missing references)
		//IL_1761: Expected O, but got Unknown
		//IL_1762: Unknown result type (might be due to invalid IL or missing references)
		//IL_176c: Expected O, but got Unknown
		//IL_176d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1777: Expected O, but got Unknown
		//IL_1778: Unknown result type (might be due to invalid IL or missing references)
		//IL_1782: Expected O, but got Unknown
		//IL_1783: Unknown result type (might be due to invalid IL or missing references)
		//IL_178d: Expected O, but got Unknown
		//IL_178e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1798: Expected O, but got Unknown
		//IL_1799: Unknown result type (might be due to invalid IL or missing references)
		//IL_17a3: Expected O, but got Unknown
		//IL_17a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_17ae: Expected O, but got Unknown
		//IL_17af: Unknown result type (might be due to invalid IL or missing references)
		//IL_17b9: Expected O, but got Unknown
		//IL_17ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_17c4: Expected O, but got Unknown
		//IL_17c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_17cf: Expected O, but got Unknown
		//IL_17d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_17da: Expected O, but got Unknown
		//IL_17db: Unknown result type (might be due to invalid IL or missing references)
		//IL_17e5: Expected O, but got Unknown
		//IL_17e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_17f0: Expected O, but got Unknown
		//IL_17f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_17fb: Expected O, but got Unknown
		//IL_17fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1806: Expected O, but got Unknown
		//IL_1807: Unknown result type (might be due to invalid IL or missing references)
		//IL_1811: Expected O, but got Unknown
		//IL_1812: Unknown result type (might be due to invalid IL or missing references)
		//IL_181c: Expected O, but got Unknown
		//IL_181d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1827: Expected O, but got Unknown
		//IL_1828: Unknown result type (might be due to invalid IL or missing references)
		//IL_1832: Expected O, but got Unknown
		//IL_1833: Unknown result type (might be due to invalid IL or missing references)
		//IL_183d: Expected O, but got Unknown
		//IL_183e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1848: Expected O, but got Unknown
		//IL_1849: Unknown result type (might be due to invalid IL or missing references)
		//IL_1853: Expected O, but got Unknown
		//IL_1854: Unknown result type (might be due to invalid IL or missing references)
		//IL_185e: Expected O, but got Unknown
		//IL_185f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1869: Expected O, but got Unknown
		//IL_186a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1874: Expected O, but got Unknown
		//IL_1875: Unknown result type (might be due to invalid IL or missing references)
		//IL_187f: Expected O, but got Unknown
		//IL_1880: Unknown result type (might be due to invalid IL or missing references)
		//IL_188a: Expected O, but got Unknown
		//IL_188b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1895: Expected O, but got Unknown
		//IL_1896: Unknown result type (might be due to invalid IL or missing references)
		//IL_18a0: Expected O, but got Unknown
		//IL_18a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_18ab: Expected O, but got Unknown
		//IL_18ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_18b6: Expected O, but got Unknown
		//IL_18b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_18c1: Expected O, but got Unknown
		//IL_18c2: Unknown result type (might be due to invalid IL or missing references)
		//IL_18cc: Expected O, but got Unknown
		//IL_18cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_18d7: Expected O, but got Unknown
		//IL_18d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_18e2: Expected O, but got Unknown
		//IL_18e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_18ed: Expected O, but got Unknown
		//IL_18ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_18f8: Expected O, but got Unknown
		//IL_18f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1903: Expected O, but got Unknown
		//IL_1904: Unknown result type (might be due to invalid IL or missing references)
		//IL_190e: Expected O, but got Unknown
		//IL_190f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1919: Expected O, but got Unknown
		//IL_191a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1924: Expected O, but got Unknown
		//IL_1925: Unknown result type (might be due to invalid IL or missing references)
		//IL_192f: Expected O, but got Unknown
		//IL_1930: Unknown result type (might be due to invalid IL or missing references)
		//IL_193a: Expected O, but got Unknown
		//IL_193b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1945: Expected O, but got Unknown
		//IL_1946: Unknown result type (might be due to invalid IL or missing references)
		//IL_1950: Expected O, but got Unknown
		//IL_1951: Unknown result type (might be due to invalid IL or missing references)
		//IL_195b: Expected O, but got Unknown
		//IL_195c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1966: Expected O, but got Unknown
		//IL_1967: Unknown result type (might be due to invalid IL or missing references)
		//IL_1971: Expected O, but got Unknown
		//IL_1972: Unknown result type (might be due to invalid IL or missing references)
		//IL_197c: Expected O, but got Unknown
		//IL_197d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1987: Expected O, but got Unknown
		//IL_1988: Unknown result type (might be due to invalid IL or missing references)
		//IL_1992: Expected O, but got Unknown
		//IL_1993: Unknown result type (might be due to invalid IL or missing references)
		//IL_199d: Expected O, but got Unknown
		//IL_199e: Unknown result type (might be due to invalid IL or missing references)
		//IL_19a8: Expected O, but got Unknown
		//IL_19a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_19b3: Expected O, but got Unknown
		//IL_19b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_19be: Expected O, but got Unknown
		//IL_19bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_19c9: Expected O, but got Unknown
		//IL_19ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_19d4: Expected O, but got Unknown
		//IL_19d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_19df: Expected O, but got Unknown
		//IL_19e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_19ea: Expected O, but got Unknown
		//IL_19eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_19f5: Expected O, but got Unknown
		//IL_19f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a00: Expected O, but got Unknown
		//IL_1a01: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a0b: Expected O, but got Unknown
		//IL_1a0c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a16: Expected O, but got Unknown
		//IL_1a17: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a21: Expected O, but got Unknown
		//IL_1a22: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a2c: Expected O, but got Unknown
		//IL_1a2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a37: Expected O, but got Unknown
		//IL_1a38: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a42: Expected O, but got Unknown
		//IL_1a43: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a4d: Expected O, but got Unknown
		//IL_1a4e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a58: Expected O, but got Unknown
		//IL_1a59: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a63: Expected O, but got Unknown
		//IL_1a64: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a6e: Expected O, but got Unknown
		//IL_1a6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a79: Expected O, but got Unknown
		//IL_1a7a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a84: Expected O, but got Unknown
		//IL_1a85: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a8f: Expected O, but got Unknown
		//IL_1a90: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a9a: Expected O, but got Unknown
		//IL_1a9b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aa5: Expected O, but got Unknown
		//IL_1aa6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ab0: Expected O, but got Unknown
		//IL_1ab1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1abb: Expected O, but got Unknown
		//IL_1abc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ac6: Expected O, but got Unknown
		//IL_1ac7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ad1: Expected O, but got Unknown
		//IL_1ad2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1adc: Expected O, but got Unknown
		//IL_1add: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ae7: Expected O, but got Unknown
		//IL_1ae8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1af2: Expected O, but got Unknown
		//IL_1af3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1afd: Expected O, but got Unknown
		//IL_1afe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b08: Expected O, but got Unknown
		//IL_1b09: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b13: Expected O, but got Unknown
		//IL_1b14: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b1e: Expected O, but got Unknown
		//IL_1b1f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b29: Expected O, but got Unknown
		//IL_1b2a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b34: Expected O, but got Unknown
		//IL_1b35: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b3f: Expected O, but got Unknown
		//IL_1b40: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b4a: Expected O, but got Unknown
		//IL_1b4b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b55: Expected O, but got Unknown
		//IL_1b56: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b60: Expected O, but got Unknown
		//IL_1b61: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b6b: Expected O, but got Unknown
		//IL_1b6c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b76: Expected O, but got Unknown
		//IL_1b77: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b81: Expected O, but got Unknown
		//IL_1b82: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b8c: Expected O, but got Unknown
		//IL_1b8d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b97: Expected O, but got Unknown
		//IL_1b98: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ba2: Expected O, but got Unknown
		//IL_1ba3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bad: Expected O, but got Unknown
		//IL_1bae: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bb8: Expected O, but got Unknown
		//IL_1bb9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bc3: Expected O, but got Unknown
		//IL_1bc4: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bce: Expected O, but got Unknown
		//IL_1bcf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bd9: Expected O, but got Unknown
		//IL_1bda: Unknown result type (might be due to invalid IL or missing references)
		//IL_1be4: Expected O, but got Unknown
		//IL_1be5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bef: Expected O, but got Unknown
		//IL_1bf0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bfa: Expected O, but got Unknown
		//IL_1bfb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c05: Expected O, but got Unknown
		//IL_1c06: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c10: Expected O, but got Unknown
		//IL_1c11: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c1b: Expected O, but got Unknown
		//IL_1c1c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c26: Expected O, but got Unknown
		//IL_1c27: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c31: Expected O, but got Unknown
		//IL_1c32: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c3c: Expected O, but got Unknown
		//IL_1c3d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c47: Expected O, but got Unknown
		//IL_1c48: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c52: Expected O, but got Unknown
		//IL_1c53: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c5d: Expected O, but got Unknown
		//IL_1c5e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c68: Expected O, but got Unknown
		//IL_1c69: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c73: Expected O, but got Unknown
		//IL_1c74: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c7e: Expected O, but got Unknown
		//IL_1c7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c89: Expected O, but got Unknown
		//IL_1c8a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c94: Expected O, but got Unknown
		//IL_1c95: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c9f: Expected O, but got Unknown
		//IL_1ca0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1caa: Expected O, but got Unknown
		//IL_1cab: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cb5: Expected O, but got Unknown
		//IL_1cb6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cc0: Expected O, but got Unknown
		//IL_1cc1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ccb: Expected O, but got Unknown
		//IL_1ccc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cd6: Expected O, but got Unknown
		//IL_1cd7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ce1: Expected O, but got Unknown
		//IL_1ce2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cec: Expected O, but got Unknown
		//IL_1ced: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cf7: Expected O, but got Unknown
		//IL_1cf8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d02: Expected O, but got Unknown
		//IL_1d03: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d0d: Expected O, but got Unknown
		//IL_1d0e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d18: Expected O, but got Unknown
		//IL_1d19: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d23: Expected O, but got Unknown
		//IL_1d24: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d2e: Expected O, but got Unknown
		//IL_1d2f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d39: Expected O, but got Unknown
		//IL_1d3a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d44: Expected O, but got Unknown
		//IL_1d45: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d4f: Expected O, but got Unknown
		//IL_1d50: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d5a: Expected O, but got Unknown
		//IL_1d5b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d65: Expected O, but got Unknown
		//IL_1d66: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d70: Expected O, but got Unknown
		//IL_1d71: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d7b: Expected O, but got Unknown
		//IL_1d7c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d86: Expected O, but got Unknown
		//IL_1d87: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d91: Expected O, but got Unknown
		//IL_1d92: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d9c: Expected O, but got Unknown
		//IL_1d9d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1da7: Expected O, but got Unknown
		//IL_1da8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1db2: Expected O, but got Unknown
		//IL_1db3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dbd: Expected O, but got Unknown
		//IL_1dbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dc8: Expected O, but got Unknown
		//IL_1dc9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dd3: Expected O, but got Unknown
		//IL_1dd4: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dde: Expected O, but got Unknown
		//IL_1ddf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1de9: Expected O, but got Unknown
		//IL_1dea: Unknown result type (might be due to invalid IL or missing references)
		//IL_1df4: Expected O, but got Unknown
		//IL_1df5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dff: Expected O, but got Unknown
		//IL_1e00: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e0a: Expected O, but got Unknown
		//IL_1e0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e15: Expected O, but got Unknown
		//IL_1e16: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e20: Expected O, but got Unknown
		//IL_1e21: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e2b: Expected O, but got Unknown
		//IL_1e2c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e36: Expected O, but got Unknown
		//IL_1e37: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e41: Expected O, but got Unknown
		//IL_1e42: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e4c: Expected O, but got Unknown
		//IL_1e4d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e57: Expected O, but got Unknown
		//IL_1e58: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e62: Expected O, but got Unknown
		//IL_1e63: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e6d: Expected O, but got Unknown
		//IL_1e6e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e78: Expected O, but got Unknown
		//IL_1e79: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e83: Expected O, but got Unknown
		//IL_1e84: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e8e: Expected O, but got Unknown
		//IL_1e8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e99: Expected O, but got Unknown
		//IL_1e9a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ea4: Expected O, but got Unknown
		//IL_1ea5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1eaf: Expected O, but got Unknown
		//IL_1eb0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1eba: Expected O, but got Unknown
		//IL_1ebb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ec5: Expected O, but got Unknown
		//IL_1ec6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ed0: Expected O, but got Unknown
		//IL_1ed1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1edb: Expected O, but got Unknown
		//IL_1edc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ee6: Expected O, but got Unknown
		//IL_1ee7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ef1: Expected O, but got Unknown
		//IL_1ef2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1efc: Expected O, but got Unknown
		//IL_1efd: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f07: Expected O, but got Unknown
		//IL_1f08: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f12: Expected O, but got Unknown
		//IL_1f13: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f1d: Expected O, but got Unknown
		//IL_1f1e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f28: Expected O, but got Unknown
		//IL_1f29: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f33: Expected O, but got Unknown
		//IL_1f34: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f3e: Expected O, but got Unknown
		//IL_1f3f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f49: Expected O, but got Unknown
		//IL_1f4a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f54: Expected O, but got Unknown
		//IL_1f55: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f5f: Expected O, but got Unknown
		//IL_1f60: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f6a: Expected O, but got Unknown
		//IL_1f6b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f75: Expected O, but got Unknown
		//IL_1f76: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f80: Expected O, but got Unknown
		//IL_1f81: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f8b: Expected O, but got Unknown
		//IL_1f8c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f96: Expected O, but got Unknown
		//IL_1f97: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fa1: Expected O, but got Unknown
		//IL_1fa2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fac: Expected O, but got Unknown
		//IL_1fad: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fb7: Expected O, but got Unknown
		//IL_1fb8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fc2: Expected O, but got Unknown
		//IL_1fc3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fcd: Expected O, but got Unknown
		//IL_1fce: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fd8: Expected O, but got Unknown
		//IL_1fd9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fe3: Expected O, but got Unknown
		//IL_1fe4: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fee: Expected O, but got Unknown
		//IL_1fef: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ff9: Expected O, but got Unknown
		//IL_1ffa: Unknown result type (might be due to invalid IL or missing references)
		//IL_2004: Expected O, but got Unknown
		//IL_2005: Unknown result type (might be due to invalid IL or missing references)
		//IL_200f: Expected O, but got Unknown
		//IL_2010: Unknown result type (might be due to invalid IL or missing references)
		//IL_201a: Expected O, but got Unknown
		//IL_201b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2025: Expected O, but got Unknown
		//IL_2026: Unknown result type (might be due to invalid IL or missing references)
		//IL_2030: Expected O, but got Unknown
		//IL_2031: Unknown result type (might be due to invalid IL or missing references)
		//IL_203b: Expected O, but got Unknown
		//IL_203c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2046: Expected O, but got Unknown
		//IL_2047: Unknown result type (might be due to invalid IL or missing references)
		//IL_2051: Expected O, but got Unknown
		//IL_2052: Unknown result type (might be due to invalid IL or missing references)
		//IL_205c: Expected O, but got Unknown
		//IL_205d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2067: Expected O, but got Unknown
		//IL_2068: Unknown result type (might be due to invalid IL or missing references)
		//IL_2072: Expected O, but got Unknown
		//IL_2073: Unknown result type (might be due to invalid IL or missing references)
		//IL_207d: Expected O, but got Unknown
		//IL_207e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2088: Expected O, but got Unknown
		//IL_2089: Unknown result type (might be due to invalid IL or missing references)
		//IL_2093: Expected O, but got Unknown
		//IL_2094: Unknown result type (might be due to invalid IL or missing references)
		//IL_209e: Expected O, but got Unknown
		//IL_209f: Unknown result type (might be due to invalid IL or missing references)
		//IL_20a9: Expected O, but got Unknown
		//IL_20aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_20b4: Expected O, but got Unknown
		//IL_20b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_20bf: Expected O, but got Unknown
		//IL_20c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_20ca: Expected O, but got Unknown
		//IL_20cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_20d5: Expected O, but got Unknown
		//IL_20d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_20e0: Expected O, but got Unknown
		//IL_20e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_20eb: Expected O, but got Unknown
		//IL_20ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_20f6: Expected O, but got Unknown
		//IL_20f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2101: Expected O, but got Unknown
		//IL_2102: Unknown result type (might be due to invalid IL or missing references)
		//IL_210c: Expected O, but got Unknown
		//IL_210d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2117: Expected O, but got Unknown
		//IL_2118: Unknown result type (might be due to invalid IL or missing references)
		//IL_2122: Expected O, but got Unknown
		//IL_2123: Unknown result type (might be due to invalid IL or missing references)
		//IL_212d: Expected O, but got Unknown
		//IL_212e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2138: Expected O, but got Unknown
		//IL_2139: Unknown result type (might be due to invalid IL or missing references)
		//IL_2143: Expected O, but got Unknown
		//IL_2144: Unknown result type (might be due to invalid IL or missing references)
		//IL_214e: Expected O, but got Unknown
		//IL_214f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2159: Expected O, but got Unknown
		//IL_215a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2164: Expected O, but got Unknown
		//IL_2165: Unknown result type (might be due to invalid IL or missing references)
		//IL_216f: Expected O, but got Unknown
		//IL_2170: Unknown result type (might be due to invalid IL or missing references)
		//IL_217a: Expected O, but got Unknown
		//IL_217b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2185: Expected O, but got Unknown
		//IL_2186: Unknown result type (might be due to invalid IL or missing references)
		//IL_2190: Expected O, but got Unknown
		//IL_2191: Unknown result type (might be due to invalid IL or missing references)
		//IL_219b: Expected O, but got Unknown
		//IL_219c: Unknown result type (might be due to invalid IL or missing references)
		//IL_21a6: Expected O, but got Unknown
		//IL_21a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_21b1: Expected O, but got Unknown
		//IL_21b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_21bc: Expected O, but got Unknown
		//IL_21bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_21c7: Expected O, but got Unknown
		//IL_21c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_21d2: Expected O, but got Unknown
		//IL_21d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_21dd: Expected O, but got Unknown
		//IL_21de: Unknown result type (might be due to invalid IL or missing references)
		//IL_21e8: Expected O, but got Unknown
		//IL_21e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_21f3: Expected O, but got Unknown
		//IL_21f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_21fe: Expected O, but got Unknown
		//IL_21ff: Unknown result type (might be due to invalid IL or missing references)
		//IL_2209: Expected O, but got Unknown
		//IL_220a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2214: Expected O, but got Unknown
		//IL_2215: Unknown result type (might be due to invalid IL or missing references)
		//IL_221f: Expected O, but got Unknown
		//IL_2220: Unknown result type (might be due to invalid IL or missing references)
		//IL_222a: Expected O, but got Unknown
		//IL_222b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2235: Expected O, but got Unknown
		//IL_2236: Unknown result type (might be due to invalid IL or missing references)
		//IL_2240: Expected O, but got Unknown
		//IL_2241: Unknown result type (might be due to invalid IL or missing references)
		//IL_224b: Expected O, but got Unknown
		//IL_224c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2256: Expected O, but got Unknown
		//IL_2257: Unknown result type (might be due to invalid IL or missing references)
		//IL_2261: Expected O, but got Unknown
		//IL_2262: Unknown result type (might be due to invalid IL or missing references)
		//IL_226c: Expected O, but got Unknown
		//IL_226d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2277: Expected O, but got Unknown
		//IL_2278: Unknown result type (might be due to invalid IL or missing references)
		//IL_2282: Expected O, but got Unknown
		//IL_2283: Unknown result type (might be due to invalid IL or missing references)
		//IL_228d: Expected O, but got Unknown
		//IL_228e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2298: Expected O, but got Unknown
		//IL_2299: Unknown result type (might be due to invalid IL or missing references)
		//IL_22a3: Expected O, but got Unknown
		//IL_22a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_22ae: Expected O, but got Unknown
		//IL_22af: Unknown result type (might be due to invalid IL or missing references)
		//IL_22b9: Expected O, but got Unknown
		//IL_22ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_22c4: Expected O, but got Unknown
		//IL_22c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_22cf: Expected O, but got Unknown
		//IL_22d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_22da: Expected O, but got Unknown
		//IL_22db: Unknown result type (might be due to invalid IL or missing references)
		//IL_22e5: Expected O, but got Unknown
		//IL_22e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_22f0: Expected O, but got Unknown
		//IL_22f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_22fb: Expected O, but got Unknown
		//IL_22fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_2306: Expected O, but got Unknown
		//IL_2307: Unknown result type (might be due to invalid IL or missing references)
		//IL_2311: Expected O, but got Unknown
		//IL_2312: Unknown result type (might be due to invalid IL or missing references)
		//IL_231c: Expected O, but got Unknown
		//IL_231d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2327: Expected O, but got Unknown
		//IL_2328: Unknown result type (might be due to invalid IL or missing references)
		//IL_2332: Expected O, but got Unknown
		//IL_2333: Unknown result type (might be due to invalid IL or missing references)
		//IL_233d: Expected O, but got Unknown
		//IL_233e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2348: Expected O, but got Unknown
		//IL_2349: Unknown result type (might be due to invalid IL or missing references)
		//IL_2353: Expected O, but got Unknown
		//IL_2354: Unknown result type (might be due to invalid IL or missing references)
		//IL_235e: Expected O, but got Unknown
		//IL_235f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2369: Expected O, but got Unknown
		//IL_236a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2374: Expected O, but got Unknown
		//IL_2375: Unknown result type (might be due to invalid IL or missing references)
		//IL_237f: Expected O, but got Unknown
		//IL_2380: Unknown result type (might be due to invalid IL or missing references)
		//IL_238a: Expected O, but got Unknown
		//IL_238b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2395: Expected O, but got Unknown
		//IL_2396: Unknown result type (might be due to invalid IL or missing references)
		//IL_23a0: Expected O, but got Unknown
		//IL_23a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ab: Expected O, but got Unknown
		//IL_23ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_23b6: Expected O, but got Unknown
		//IL_23b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_23c1: Expected O, but got Unknown
		//IL_23c2: Unknown result type (might be due to invalid IL or missing references)
		//IL_23cc: Expected O, but got Unknown
		//IL_23cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_23d7: Expected O, but got Unknown
		//IL_23d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_23e2: Expected O, but got Unknown
		//IL_23e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ed: Expected O, but got Unknown
		//IL_23ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_23f8: Expected O, but got Unknown
		//IL_23f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2403: Expected O, but got Unknown
		//IL_2404: Unknown result type (might be due to invalid IL or missing references)
		//IL_240e: Expected O, but got Unknown
		//IL_240f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2419: Expected O, but got Unknown
		//IL_241a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2424: Expected O, but got Unknown
		//IL_2425: Unknown result type (might be due to invalid IL or missing references)
		//IL_242f: Expected O, but got Unknown
		//IL_2430: Unknown result type (might be due to invalid IL or missing references)
		//IL_243a: Expected O, but got Unknown
		//IL_243b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2445: Expected O, but got Unknown
		//IL_2446: Unknown result type (might be due to invalid IL or missing references)
		//IL_2450: Expected O, but got Unknown
		//IL_2451: Unknown result type (might be due to invalid IL or missing references)
		//IL_245b: Expected O, but got Unknown
		//IL_245c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2466: Expected O, but got Unknown
		//IL_2467: Unknown result type (might be due to invalid IL or missing references)
		//IL_2471: Expected O, but got Unknown
		//IL_2472: Unknown result type (might be due to invalid IL or missing references)
		//IL_247c: Expected O, but got Unknown
		//IL_247d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2487: Expected O, but got Unknown
		//IL_2488: Unknown result type (might be due to invalid IL or missing references)
		//IL_2492: Expected O, but got Unknown
		//IL_2493: Unknown result type (might be due to invalid IL or missing references)
		//IL_249d: Expected O, but got Unknown
		//IL_249e: Unknown result type (might be due to invalid IL or missing references)
		//IL_24a8: Expected O, but got Unknown
		//IL_24a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_24b3: Expected O, but got Unknown
		//IL_24b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_24be: Expected O, but got Unknown
		//IL_24bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_24c9: Expected O, but got Unknown
		//IL_24ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_24d4: Expected O, but got Unknown
		//IL_24d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_24df: Expected O, but got Unknown
		//IL_24e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_24ea: Expected O, but got Unknown
		//IL_24eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_24f5: Expected O, but got Unknown
		//IL_24f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2500: Expected O, but got Unknown
		//IL_2501: Unknown result type (might be due to invalid IL or missing references)
		//IL_250b: Expected O, but got Unknown
		//IL_250c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2516: Expected O, but got Unknown
		//IL_2517: Unknown result type (might be due to invalid IL or missing references)
		//IL_2521: Expected O, but got Unknown
		//IL_2522: Unknown result type (might be due to invalid IL or missing references)
		//IL_252c: Expected O, but got Unknown
		//IL_252d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2537: Expected O, but got Unknown
		//IL_2538: Unknown result type (might be due to invalid IL or missing references)
		//IL_2542: Expected O, but got Unknown
		//IL_2543: Unknown result type (might be due to invalid IL or missing references)
		//IL_254d: Expected O, but got Unknown
		//IL_254e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2558: Expected O, but got Unknown
		//IL_2559: Unknown result type (might be due to invalid IL or missing references)
		//IL_2563: Expected O, but got Unknown
		//IL_2564: Unknown result type (might be due to invalid IL or missing references)
		//IL_256e: Expected O, but got Unknown
		//IL_256f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2579: Expected O, but got Unknown
		//IL_257a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2584: Expected O, but got Unknown
		//IL_2585: Unknown result type (might be due to invalid IL or missing references)
		//IL_258f: Expected O, but got Unknown
		//IL_2590: Unknown result type (might be due to invalid IL or missing references)
		//IL_259a: Expected O, but got Unknown
		//IL_259b: Unknown result type (might be due to invalid IL or missing references)
		//IL_25a5: Expected O, but got Unknown
		//IL_25a6: Unknown result type (might be due to invalid IL or missing references)
		//IL_25b0: Expected O, but got Unknown
		//IL_25b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_25bb: Expected O, but got Unknown
		//IL_25bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_25c6: Expected O, but got Unknown
		//IL_25c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_25d1: Expected O, but got Unknown
		//IL_25d2: Unknown result type (might be due to invalid IL or missing references)
		//IL_25dc: Expected O, but got Unknown
		//IL_25dd: Unknown result type (might be due to invalid IL or missing references)
		//IL_25e7: Expected O, but got Unknown
		//IL_25e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_25f2: Expected O, but got Unknown
		//IL_25f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_25fd: Expected O, but got Unknown
		//IL_25fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_2608: Expected O, but got Unknown
		//IL_2609: Unknown result type (might be due to invalid IL or missing references)
		//IL_2613: Expected O, but got Unknown
		//IL_2614: Unknown result type (might be due to invalid IL or missing references)
		//IL_261e: Expected O, but got Unknown
		//IL_261f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2629: Expected O, but got Unknown
		//IL_262a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2634: Expected O, but got Unknown
		//IL_2635: Unknown result type (might be due to invalid IL or missing references)
		//IL_263f: Expected O, but got Unknown
		//IL_2640: Unknown result type (might be due to invalid IL or missing references)
		//IL_264a: Expected O, but got Unknown
		//IL_264b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2655: Expected O, but got Unknown
		//IL_2656: Unknown result type (might be due to invalid IL or missing references)
		//IL_2660: Expected O, but got Unknown
		//IL_2661: Unknown result type (might be due to invalid IL or missing references)
		//IL_266b: Expected O, but got Unknown
		//IL_266c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2676: Expected O, but got Unknown
		//IL_2677: Unknown result type (might be due to invalid IL or missing references)
		//IL_2681: Expected O, but got Unknown
		//IL_2682: Unknown result type (might be due to invalid IL or missing references)
		//IL_268c: Expected O, but got Unknown
		//IL_268d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2697: Expected O, but got Unknown
		//IL_2698: Unknown result type (might be due to invalid IL or missing references)
		//IL_26a2: Expected O, but got Unknown
		//IL_26a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_26ad: Expected O, but got Unknown
		//IL_26ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_26b8: Expected O, but got Unknown
		//IL_26b9: Unknown result type (might be due to invalid IL or missing references)
		//IL_26c3: Expected O, but got Unknown
		//IL_26c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_26ce: Expected O, but got Unknown
		//IL_26cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_26d9: Expected O, but got Unknown
		//IL_26da: Unknown result type (might be due to invalid IL or missing references)
		//IL_26e4: Expected O, but got Unknown
		//IL_26e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_26ef: Expected O, but got Unknown
		//IL_26f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_26fa: Expected O, but got Unknown
		//IL_26fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_2705: Expected O, but got Unknown
		//IL_2706: Unknown result type (might be due to invalid IL or missing references)
		//IL_2710: Expected O, but got Unknown
		//IL_2711: Unknown result type (might be due to invalid IL or missing references)
		//IL_271b: Expected O, but got Unknown
		//IL_271c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2726: Expected O, but got Unknown
		//IL_2727: Unknown result type (might be due to invalid IL or missing references)
		//IL_2731: Expected O, but got Unknown
		//IL_2732: Unknown result type (might be due to invalid IL or missing references)
		//IL_273c: Expected O, but got Unknown
		//IL_273d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2747: Expected O, but got Unknown
		//IL_2748: Unknown result type (might be due to invalid IL or missing references)
		//IL_2752: Expected O, but got Unknown
		//IL_2753: Unknown result type (might be due to invalid IL or missing references)
		//IL_275d: Expected O, but got Unknown
		//IL_275e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2768: Expected O, but got Unknown
		//IL_2769: Unknown result type (might be due to invalid IL or missing references)
		//IL_2773: Expected O, but got Unknown
		//IL_2774: Unknown result type (might be due to invalid IL or missing references)
		//IL_277e: Expected O, but got Unknown
		//IL_277f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2789: Expected O, but got Unknown
		//IL_278a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2794: Expected O, but got Unknown
		//IL_2795: Unknown result type (might be due to invalid IL or missing references)
		//IL_279f: Expected O, but got Unknown
		//IL_27a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_27aa: Expected O, but got Unknown
		//IL_27ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_27b5: Expected O, but got Unknown
		//IL_27b6: Unknown result type (might be due to invalid IL or missing references)
		//IL_27c0: Expected O, but got Unknown
		//IL_27c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_27cb: Expected O, but got Unknown
		//IL_27cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_27d6: Expected O, but got Unknown
		//IL_27d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_27e1: Expected O, but got Unknown
		//IL_27e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_27ec: Expected O, but got Unknown
		//IL_27ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_27f7: Expected O, but got Unknown
		//IL_27f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2802: Expected O, but got Unknown
		//IL_2803: Unknown result type (might be due to invalid IL or missing references)
		//IL_280d: Expected O, but got Unknown
		//IL_280e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2818: Expected O, but got Unknown
		//IL_2819: Unknown result type (might be due to invalid IL or missing references)
		//IL_2823: Expected O, but got Unknown
		//IL_2824: Unknown result type (might be due to invalid IL or missing references)
		//IL_282e: Expected O, but got Unknown
		//IL_282f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2839: Expected O, but got Unknown
		//IL_283a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2844: Expected O, but got Unknown
		//IL_2845: Unknown result type (might be due to invalid IL or missing references)
		//IL_284f: Expected O, but got Unknown
		//IL_2850: Unknown result type (might be due to invalid IL or missing references)
		//IL_285a: Expected O, but got Unknown
		//IL_285b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2865: Expected O, but got Unknown
		//IL_2866: Unknown result type (might be due to invalid IL or missing references)
		//IL_2870: Expected O, but got Unknown
		//IL_2871: Unknown result type (might be due to invalid IL or missing references)
		//IL_287b: Expected O, but got Unknown
		//IL_287c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2886: Expected O, but got Unknown
		//IL_2887: Unknown result type (might be due to invalid IL or missing references)
		//IL_2891: Expected O, but got Unknown
		//IL_2892: Unknown result type (might be due to invalid IL or missing references)
		//IL_289c: Expected O, but got Unknown
		//IL_289d: Unknown result type (might be due to invalid IL or missing references)
		//IL_28a7: Expected O, but got Unknown
		//IL_28a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_28b2: Expected O, but got Unknown
		//IL_28b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_28bd: Expected O, but got Unknown
		//IL_28be: Unknown result type (might be due to invalid IL or missing references)
		//IL_28c8: Expected O, but got Unknown
		//IL_28c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_28d3: Expected O, but got Unknown
		//IL_28d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_28de: Expected O, but got Unknown
		//IL_28df: Unknown result type (might be due to invalid IL or missing references)
		//IL_28e9: Expected O, but got Unknown
		//IL_28ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_28f4: Expected O, but got Unknown
		//IL_28f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_28ff: Expected O, but got Unknown
		//IL_2900: Unknown result type (might be due to invalid IL or missing references)
		//IL_290a: Expected O, but got Unknown
		//IL_290b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2915: Expected O, but got Unknown
		//IL_2916: Unknown result type (might be due to invalid IL or missing references)
		//IL_2920: Expected O, but got Unknown
		//IL_2921: Unknown result type (might be due to invalid IL or missing references)
		//IL_292b: Expected O, but got Unknown
		//IL_292c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2936: Expected O, but got Unknown
		//IL_2937: Unknown result type (might be due to invalid IL or missing references)
		//IL_2941: Expected O, but got Unknown
		//IL_2942: Unknown result type (might be due to invalid IL or missing references)
		//IL_294c: Expected O, but got Unknown
		//IL_294d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2957: Expected O, but got Unknown
		//IL_2958: Unknown result type (might be due to invalid IL or missing references)
		//IL_2962: Expected O, but got Unknown
		//IL_2963: Unknown result type (might be due to invalid IL or missing references)
		//IL_296d: Expected O, but got Unknown
		//IL_296e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2978: Expected O, but got Unknown
		//IL_2979: Unknown result type (might be due to invalid IL or missing references)
		//IL_2983: Expected O, but got Unknown
		//IL_2984: Unknown result type (might be due to invalid IL or missing references)
		//IL_298e: Expected O, but got Unknown
		//IL_298f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2999: Expected O, but got Unknown
		//IL_299a: Unknown result type (might be due to invalid IL or missing references)
		//IL_29a4: Expected O, but got Unknown
		//IL_29a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_29af: Expected O, but got Unknown
		//IL_29b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_29ba: Expected O, but got Unknown
		//IL_29bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_29c5: Expected O, but got Unknown
		//IL_29c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_29d0: Expected O, but got Unknown
		//IL_29d1: Unknown result type (might be due to invalid IL or missing references)
		//IL_29db: Expected O, but got Unknown
		//IL_29dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_29e6: Expected O, but got Unknown
		//IL_29e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_29f1: Expected O, but got Unknown
		//IL_29f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_29fc: Expected O, but got Unknown
		//IL_29fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a07: Expected O, but got Unknown
		//IL_2a08: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a12: Expected O, but got Unknown
		//IL_2a13: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a1d: Expected O, but got Unknown
		//IL_2a1e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a28: Expected O, but got Unknown
		//IL_2a29: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a33: Expected O, but got Unknown
		//IL_2a34: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a3e: Expected O, but got Unknown
		//IL_2a3f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a49: Expected O, but got Unknown
		//IL_2a4a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a54: Expected O, but got Unknown
		//IL_2a55: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a5f: Expected O, but got Unknown
		//IL_2a60: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a6a: Expected O, but got Unknown
		//IL_2a6b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a75: Expected O, but got Unknown
		//IL_2a76: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a80: Expected O, but got Unknown
		//IL_2a81: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a8b: Expected O, but got Unknown
		//IL_2a8c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a96: Expected O, but got Unknown
		//IL_2a97: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aa1: Expected O, but got Unknown
		//IL_2aa2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aac: Expected O, but got Unknown
		//IL_2aad: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ab7: Expected O, but got Unknown
		//IL_2ab8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ac2: Expected O, but got Unknown
		//IL_2ac3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2acd: Expected O, but got Unknown
		//IL_2ace: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ad8: Expected O, but got Unknown
		//IL_2ad9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ae3: Expected O, but got Unknown
		//IL_2ae4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aee: Expected O, but got Unknown
		//IL_2aef: Unknown result type (might be due to invalid IL or missing references)
		//IL_2af9: Expected O, but got Unknown
		//IL_2afa: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b04: Expected O, but got Unknown
		//IL_2b05: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b0f: Expected O, but got Unknown
		//IL_2b10: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b1a: Expected O, but got Unknown
		//IL_2b1b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b25: Expected O, but got Unknown
		//IL_2b26: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b30: Expected O, but got Unknown
		//IL_2b31: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b3b: Expected O, but got Unknown
		//IL_2b3c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b46: Expected O, but got Unknown
		//IL_2b47: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b51: Expected O, but got Unknown
		//IL_2b52: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b5c: Expected O, but got Unknown
		//IL_2b5d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b67: Expected O, but got Unknown
		//IL_2b68: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b72: Expected O, but got Unknown
		//IL_2b73: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b7d: Expected O, but got Unknown
		//IL_2b7e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b88: Expected O, but got Unknown
		//IL_2b89: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b93: Expected O, but got Unknown
		//IL_2b94: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b9e: Expected O, but got Unknown
		//IL_2b9f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ba9: Expected O, but got Unknown
		//IL_2baa: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bb4: Expected O, but got Unknown
		//IL_2bb5: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bbf: Expected O, but got Unknown
		//IL_2bc0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bca: Expected O, but got Unknown
		//IL_2bcb: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bd5: Expected O, but got Unknown
		//IL_2bd6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2be0: Expected O, but got Unknown
		//IL_2be1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2beb: Expected O, but got Unknown
		//IL_2bec: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bf6: Expected O, but got Unknown
		//IL_2bf7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c01: Expected O, but got Unknown
		//IL_2c02: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c0c: Expected O, but got Unknown
		//IL_2c0d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c17: Expected O, but got Unknown
		//IL_2c18: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c22: Expected O, but got Unknown
		//IL_2c23: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c2d: Expected O, but got Unknown
		//IL_2c2e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c38: Expected O, but got Unknown
		//IL_2c39: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c43: Expected O, but got Unknown
		//IL_2c44: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c4e: Expected O, but got Unknown
		//IL_2c4f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c59: Expected O, but got Unknown
		//IL_2c5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c64: Expected O, but got Unknown
		//IL_2c65: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c6f: Expected O, but got Unknown
		//IL_2c70: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c7a: Expected O, but got Unknown
		//IL_2c7b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c85: Expected O, but got Unknown
		//IL_2c86: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c90: Expected O, but got Unknown
		//IL_2c91: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c9b: Expected O, but got Unknown
		//IL_2c9c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ca6: Expected O, but got Unknown
		//IL_2ca7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cb1: Expected O, but got Unknown
		//IL_2cb2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cbc: Expected O, but got Unknown
		//IL_2cbd: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cc7: Expected O, but got Unknown
		//IL_2cc8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cd2: Expected O, but got Unknown
		//IL_2cd3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cdd: Expected O, but got Unknown
		//IL_2cde: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ce8: Expected O, but got Unknown
		//IL_2ce9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cf3: Expected O, but got Unknown
		//IL_2cf4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cfe: Expected O, but got Unknown
		//IL_2cff: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d09: Expected O, but got Unknown
		//IL_2d0a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d14: Expected O, but got Unknown
		//IL_2d15: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d1f: Expected O, but got Unknown
		//IL_2d20: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d2a: Expected O, but got Unknown
		//IL_2d2b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d35: Expected O, but got Unknown
		//IL_2d36: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d40: Expected O, but got Unknown
		//IL_2d41: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d4b: Expected O, but got Unknown
		//IL_2d4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d56: Expected O, but got Unknown
		//IL_2d57: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d61: Expected O, but got Unknown
		//IL_2d62: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d6c: Expected O, but got Unknown
		//IL_2d6d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d77: Expected O, but got Unknown
		//IL_2d78: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d82: Expected O, but got Unknown
		//IL_2d83: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d8d: Expected O, but got Unknown
		//IL_2d8e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d98: Expected O, but got Unknown
		//IL_2d99: Unknown result type (might be due to invalid IL or missing references)
		//IL_2da3: Expected O, but got Unknown
		//IL_2da4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dae: Expected O, but got Unknown
		//IL_2daf: Unknown result type (might be due to invalid IL or missing references)
		//IL_2db9: Expected O, but got Unknown
		//IL_2dba: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dc4: Expected O, but got Unknown
		//IL_2dc5: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dcf: Expected O, but got Unknown
		//IL_2dd0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dda: Expected O, but got Unknown
		//IL_2ddb: Unknown result type (might be due to invalid IL or missing references)
		//IL_2de5: Expected O, but got Unknown
		//IL_2de6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2df0: Expected O, but got Unknown
		//IL_2df1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dfb: Expected O, but got Unknown
		//IL_2dfc: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e06: Expected O, but got Unknown
		//IL_2e07: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e11: Expected O, but got Unknown
		//IL_2e12: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e1c: Expected O, but got Unknown
		//IL_2e1d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e27: Expected O, but got Unknown
		//IL_2e28: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e32: Expected O, but got Unknown
		//IL_2e33: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e3d: Expected O, but got Unknown
		//IL_2e3e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e48: Expected O, but got Unknown
		//IL_2e49: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e53: Expected O, but got Unknown
		//IL_2e54: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e5e: Expected O, but got Unknown
		//IL_2e5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e69: Expected O, but got Unknown
		//IL_2e6a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e74: Expected O, but got Unknown
		//IL_2e75: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e7f: Expected O, but got Unknown
		//IL_2e80: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e8a: Expected O, but got Unknown
		//IL_2e8b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e95: Expected O, but got Unknown
		//IL_2e96: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ea0: Expected O, but got Unknown
		//IL_2ea1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eab: Expected O, but got Unknown
		//IL_2eac: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eb6: Expected O, but got Unknown
		//IL_2eb7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ec1: Expected O, but got Unknown
		//IL_2ec2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ecc: Expected O, but got Unknown
		//IL_2ecd: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ed7: Expected O, but got Unknown
		//IL_2ed8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ee2: Expected O, but got Unknown
		//IL_2ee3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eed: Expected O, but got Unknown
		//IL_2eee: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ef8: Expected O, but got Unknown
		//IL_2ef9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f03: Expected O, but got Unknown
		//IL_2f04: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f0e: Expected O, but got Unknown
		//IL_2f0f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f19: Expected O, but got Unknown
		//IL_2f1a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f24: Expected O, but got Unknown
		//IL_2f25: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f2f: Expected O, but got Unknown
		//IL_2f30: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f3a: Expected O, but got Unknown
		//IL_2f3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f45: Expected O, but got Unknown
		//IL_2f46: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f50: Expected O, but got Unknown
		//IL_2f51: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f5b: Expected O, but got Unknown
		//IL_2f5c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f66: Expected O, but got Unknown
		//IL_2f67: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f71: Expected O, but got Unknown
		//IL_2f72: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f7c: Expected O, but got Unknown
		//IL_2f7d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f87: Expected O, but got Unknown
		//IL_2f88: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f92: Expected O, but got Unknown
		//IL_2f93: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f9d: Expected O, but got Unknown
		//IL_2f9e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fa8: Expected O, but got Unknown
		//IL_2fa9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fb3: Expected O, but got Unknown
		//IL_2fb4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fbe: Expected O, but got Unknown
		//IL_2fbf: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fc9: Expected O, but got Unknown
		//IL_2fca: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fd4: Expected O, but got Unknown
		//IL_2fd5: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fdf: Expected O, but got Unknown
		//IL_2fe0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fea: Expected O, but got Unknown
		//IL_2ff1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ffb: Expected O, but got Unknown
		//IL_3002: Unknown result type (might be due to invalid IL or missing references)
		//IL_300c: Expected O, but got Unknown
		//IL_3013: Unknown result type (might be due to invalid IL or missing references)
		//IL_301d: Expected O, but got Unknown
		//IL_301e: Unknown result type (might be due to invalid IL or missing references)
		//IL_3028: Expected O, but got Unknown
		//IL_3029: Unknown result type (might be due to invalid IL or missing references)
		//IL_3033: Expected O, but got Unknown
		//IL_3034: Unknown result type (might be due to invalid IL or missing references)
		//IL_303e: Expected O, but got Unknown
		//IL_303f: Unknown result type (might be due to invalid IL or missing references)
		//IL_3049: Expected O, but got Unknown
		//IL_304a: Unknown result type (might be due to invalid IL or missing references)
		//IL_3054: Expected O, but got Unknown
		//IL_3055: Unknown result type (might be due to invalid IL or missing references)
		//IL_305f: Expected O, but got Unknown
		//IL_3060: Unknown result type (might be due to invalid IL or missing references)
		//IL_306a: Expected O, but got Unknown
		//IL_306b: Unknown result type (might be due to invalid IL or missing references)
		//IL_3075: Expected O, but got Unknown
		//IL_3076: Unknown result type (might be due to invalid IL or missing references)
		//IL_3080: Expected O, but got Unknown
		//IL_3081: Unknown result type (might be due to invalid IL or missing references)
		//IL_308b: Expected O, but got Unknown
		//IL_308c: Unknown result type (might be due to invalid IL or missing references)
		//IL_3096: Expected O, but got Unknown
		//IL_3097: Unknown result type (might be due to invalid IL or missing references)
		//IL_30a1: Expected O, but got Unknown
		//IL_3e35: Unknown result type (might be due to invalid IL or missing references)
		//IL_3e3f: Expected O, but got Unknown
		//IL_3e5c: Unknown result type (might be due to invalid IL or missing references)
		//IL_3e7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_3f1c: Unknown result type (might be due to invalid IL or missing references)
		//IL_3fa1: Unknown result type (might be due to invalid IL or missing references)
		//IL_4018: Unknown result type (might be due to invalid IL or missing references)
		//IL_4022: Expected O, but got Unknown
		//IL_4045: Unknown result type (might be due to invalid IL or missing references)
		//IL_40b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_4162: Unknown result type (might be due to invalid IL or missing references)
		//IL_41f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_428e: Unknown result type (might be due to invalid IL or missing references)
		//IL_4313: Unknown result type (might be due to invalid IL or missing references)
		//IL_4394: Unknown result type (might be due to invalid IL or missing references)
		//IL_4488: Unknown result type (might be due to invalid IL or missing references)
		//IL_4492: Expected O, but got Unknown
		//IL_44b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_44d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_469a: Unknown result type (might be due to invalid IL or missing references)
		//IL_46a4: Expected O, but got Unknown
		//IL_46c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_46e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_4765: Unknown result type (might be due to invalid IL or missing references)
		//IL_47e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_4863: Unknown result type (might be due to invalid IL or missing references)
		//IL_48e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_4961: Unknown result type (might be due to invalid IL or missing references)
		//IL_49e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_4a5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_4ada: Unknown result type (might be due to invalid IL or missing references)
		//IL_4b55: Unknown result type (might be due to invalid IL or missing references)
		//IL_4bd0: Unknown result type (might be due to invalid IL or missing references)
		//IL_4c39: Unknown result type (might be due to invalid IL or missing references)
		//IL_4cb3: Unknown result type (might be due to invalid IL or missing references)
		//IL_4d2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_4da7: Unknown result type (might be due to invalid IL or missing references)
		//IL_4e0f: Unknown result type (might be due to invalid IL or missing references)
		//IL_4f16: Unknown result type (might be due to invalid IL or missing references)
		//IL_4f20: Expected O, but got Unknown
		//IL_4f3d: Unknown result type (might be due to invalid IL or missing references)
		//IL_4f60: Unknown result type (might be due to invalid IL or missing references)
		//IL_4fd8: Unknown result type (might be due to invalid IL or missing references)
		//IL_504b: Unknown result type (might be due to invalid IL or missing references)
		//IL_5055: Expected O, but got Unknown
		//IL_5075: Unknown result type (might be due to invalid IL or missing references)
		//IL_50f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_516b: Unknown result type (might be due to invalid IL or missing references)
		//IL_51e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_525f: Unknown result type (might be due to invalid IL or missing references)
		//IL_52d9: Unknown result type (might be due to invalid IL or missing references)
		//IL_53f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_5401: Expected O, but got Unknown
		//IL_5421: Unknown result type (might be due to invalid IL or missing references)
		//IL_5444: Unknown result type (might be due to invalid IL or missing references)
		//IL_54bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_5537: Unknown result type (might be due to invalid IL or missing references)
		//IL_55aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_55b4: Expected O, but got Unknown
		//IL_55d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_5650: Unknown result type (might be due to invalid IL or missing references)
		//IL_56ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_5744: Unknown result type (might be due to invalid IL or missing references)
		//IL_57be: Unknown result type (might be due to invalid IL or missing references)
		//IL_5838: Unknown result type (might be due to invalid IL or missing references)
		//IL_5956: Unknown result type (might be due to invalid IL or missing references)
		//IL_5960: Expected O, but got Unknown
		//IL_5980: Unknown result type (might be due to invalid IL or missing references)
		//IL_59a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_5a1b: Unknown result type (might be due to invalid IL or missing references)
		//IL_5a96: Unknown result type (might be due to invalid IL or missing references)
		//IL_5b11: Unknown result type (might be due to invalid IL or missing references)
		//IL_5b8d: Unknown result type (might be due to invalid IL or missing references)
		//IL_5c07: Unknown result type (might be due to invalid IL or missing references)
		//IL_5c81: Unknown result type (might be due to invalid IL or missing references)
		//IL_5cfb: Unknown result type (might be due to invalid IL or missing references)
		//IL_5d75: Unknown result type (might be due to invalid IL or missing references)
		//IL_5e93: Unknown result type (might be due to invalid IL or missing references)
		//IL_5e9d: Expected O, but got Unknown
		//IL_5ebd: Unknown result type (might be due to invalid IL or missing references)
		//IL_5ee0: Unknown result type (might be due to invalid IL or missing references)
		//IL_5f57: Unknown result type (might be due to invalid IL or missing references)
		//IL_5fd2: Unknown result type (might be due to invalid IL or missing references)
		//IL_604d: Unknown result type (might be due to invalid IL or missing references)
		//IL_60c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_613a: Unknown result type (might be due to invalid IL or missing references)
		//IL_6144: Expected O, but got Unknown
		//IL_6164: Unknown result type (might be due to invalid IL or missing references)
		//IL_61df: Unknown result type (might be due to invalid IL or missing references)
		//IL_6259: Unknown result type (might be due to invalid IL or missing references)
		//IL_62d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_63f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_63fb: Expected O, but got Unknown
		//IL_6418: Unknown result type (might be due to invalid IL or missing references)
		//IL_643b: Unknown result type (might be due to invalid IL or missing references)
		//IL_64b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_652d: Unknown result type (might be due to invalid IL or missing references)
		//IL_65a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_6622: Unknown result type (might be due to invalid IL or missing references)
		//IL_669c: Unknown result type (might be due to invalid IL or missing references)
		//IL_670f: Unknown result type (might be due to invalid IL or missing references)
		//IL_6719: Expected O, but got Unknown
		//IL_6739: Unknown result type (might be due to invalid IL or missing references)
		//IL_67b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_682d: Unknown result type (might be due to invalid IL or missing references)
		//IL_68ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_6915: Unknown result type (might be due to invalid IL or missing references)
		//IL_691f: Expected O, but got Unknown
		//IL_693f: Unknown result type (might be due to invalid IL or missing references)
		//IL_69c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_69cd: Expected O, but got Unknown
		//IL_69f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_6a5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_6a64: Expected O, but got Unknown
		//IL_6a87: Unknown result type (might be due to invalid IL or missing references)
		//IL_6b0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_6b15: Expected O, but got Unknown
		//IL_6b3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_6ba5: Unknown result type (might be due to invalid IL or missing references)
		//IL_6baf: Expected O, but got Unknown
		//IL_6bd2: Unknown result type (might be due to invalid IL or missing references)
		//IL_6c56: Unknown result type (might be due to invalid IL or missing references)
		//IL_6c60: Expected O, but got Unknown
		//IL_6c83: Unknown result type (might be due to invalid IL or missing references)
		//IL_6ced: Unknown result type (might be due to invalid IL or missing references)
		//IL_6cf7: Expected O, but got Unknown
		//IL_6d1a: Unknown result type (might be due to invalid IL or missing references)
		//IL_6d9e: Unknown result type (might be due to invalid IL or missing references)
		//IL_6da8: Expected O, but got Unknown
		//IL_6dce: Unknown result type (might be due to invalid IL or missing references)
		//IL_6e38: Unknown result type (might be due to invalid IL or missing references)
		//IL_6e42: Expected O, but got Unknown
		//IL_6e65: Unknown result type (might be due to invalid IL or missing references)
		//IL_6ee9: Unknown result type (might be due to invalid IL or missing references)
		//IL_6ef3: Expected O, but got Unknown
		//IL_6f19: Unknown result type (might be due to invalid IL or missing references)
		//IL_6f83: Unknown result type (might be due to invalid IL or missing references)
		//IL_6f8d: Expected O, but got Unknown
		//IL_6fb0: Unknown result type (might be due to invalid IL or missing references)
		//IL_7034: Unknown result type (might be due to invalid IL or missing references)
		//IL_703e: Expected O, but got Unknown
		//IL_7064: Unknown result type (might be due to invalid IL or missing references)
		//IL_70ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_70d8: Expected O, but got Unknown
		//IL_70fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_717f: Unknown result type (might be due to invalid IL or missing references)
		//IL_7189: Expected O, but got Unknown
		//IL_71af: Unknown result type (might be due to invalid IL or missing references)
		//IL_7219: Unknown result type (might be due to invalid IL or missing references)
		//IL_7223: Expected O, but got Unknown
		//IL_7246: Unknown result type (might be due to invalid IL or missing references)
		//IL_72ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_72d4: Expected O, but got Unknown
		//IL_72f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_7361: Unknown result type (might be due to invalid IL or missing references)
		//IL_736b: Expected O, but got Unknown
		//IL_738e: Unknown result type (might be due to invalid IL or missing references)
		//IL_7412: Unknown result type (might be due to invalid IL or missing references)
		//IL_741c: Expected O, but got Unknown
		//IL_743f: Unknown result type (might be due to invalid IL or missing references)
		//IL_74a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_74b3: Expected O, but got Unknown
		//IL_74d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_7557: Unknown result type (might be due to invalid IL or missing references)
		//IL_7561: Expected O, but got Unknown
		//IL_7584: Unknown result type (might be due to invalid IL or missing references)
		//IL_75ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_75f8: Expected O, but got Unknown
		//IL_761b: Unknown result type (might be due to invalid IL or missing references)
		//IL_769f: Unknown result type (might be due to invalid IL or missing references)
		//IL_76a9: Expected O, but got Unknown
		//IL_76cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_7739: Unknown result type (might be due to invalid IL or missing references)
		//IL_7743: Expected O, but got Unknown
		//IL_7766: Unknown result type (might be due to invalid IL or missing references)
		//IL_77ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_77f4: Expected O, but got Unknown
		//IL_781a: Unknown result type (might be due to invalid IL or missing references)
		//IL_7884: Unknown result type (might be due to invalid IL or missing references)
		//IL_788e: Expected O, but got Unknown
		//IL_78b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_7935: Unknown result type (might be due to invalid IL or missing references)
		//IL_793f: Expected O, but got Unknown
		//IL_7962: Unknown result type (might be due to invalid IL or missing references)
		//IL_79cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_79d6: Expected O, but got Unknown
		//IL_79f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_7a7d: Unknown result type (might be due to invalid IL or missing references)
		//IL_7a87: Expected O, but got Unknown
		//IL_7aad: Unknown result type (might be due to invalid IL or missing references)
		//IL_7b17: Unknown result type (might be due to invalid IL or missing references)
		//IL_7b21: Expected O, but got Unknown
		//IL_7b44: Unknown result type (might be due to invalid IL or missing references)
		//IL_7bc8: Unknown result type (might be due to invalid IL or missing references)
		//IL_7bd2: Expected O, but got Unknown
		//IL_7bf5: Unknown result type (might be due to invalid IL or missing references)
		//IL_7c5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_7c69: Expected O, but got Unknown
		//IL_7c89: Unknown result type (might be due to invalid IL or missing references)
		//IL_7d0a: Unknown result type (might be due to invalid IL or missing references)
		//IL_7d14: Expected O, but got Unknown
		//IL_7d37: Unknown result type (might be due to invalid IL or missing references)
		//IL_7d9e: Unknown result type (might be due to invalid IL or missing references)
		//IL_7da8: Expected O, but got Unknown
		//IL_7dc8: Unknown result type (might be due to invalid IL or missing references)
		//IL_7e49: Unknown result type (might be due to invalid IL or missing references)
		//IL_7e53: Expected O, but got Unknown
		//IL_7e76: Unknown result type (might be due to invalid IL or missing references)
		//IL_7edd: Unknown result type (might be due to invalid IL or missing references)
		//IL_7ee7: Expected O, but got Unknown
		//IL_7f07: Unknown result type (might be due to invalid IL or missing references)
		//IL_7f88: Unknown result type (might be due to invalid IL or missing references)
		//IL_7f92: Expected O, but got Unknown
		//IL_7fb2: Unknown result type (might be due to invalid IL or missing references)
		//IL_8019: Unknown result type (might be due to invalid IL or missing references)
		//IL_8023: Expected O, but got Unknown
		//IL_8040: Unknown result type (might be due to invalid IL or missing references)
		//IL_80c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_80cb: Expected O, but got Unknown
		//IL_80eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_8152: Unknown result type (might be due to invalid IL or missing references)
		//IL_815c: Expected O, but got Unknown
		//IL_817c: Unknown result type (might be due to invalid IL or missing references)
		//IL_81fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_8207: Expected O, but got Unknown
		//IL_822a: Unknown result type (might be due to invalid IL or missing references)
		//IL_8291: Unknown result type (might be due to invalid IL or missing references)
		//IL_829b: Expected O, but got Unknown
		//IL_82bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_833c: Unknown result type (might be due to invalid IL or missing references)
		//IL_8346: Expected O, but got Unknown
		//IL_8369: Unknown result type (might be due to invalid IL or missing references)
		//IL_83d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_83da: Expected O, but got Unknown
		//IL_83fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_847b: Unknown result type (might be due to invalid IL or missing references)
		//IL_8485: Expected O, but got Unknown
		//IL_84a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_850f: Unknown result type (might be due to invalid IL or missing references)
		//IL_8519: Expected O, but got Unknown
		//IL_8539: Unknown result type (might be due to invalid IL or missing references)
		//IL_85ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_85c4: Expected O, but got Unknown
		//IL_85e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_864b: Unknown result type (might be due to invalid IL or missing references)
		//IL_8655: Expected O, but got Unknown
		//IL_8675: Unknown result type (might be due to invalid IL or missing references)
		//IL_86f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_8700: Expected O, but got Unknown
		//IL_8723: Unknown result type (might be due to invalid IL or missing references)
		//IL_878a: Unknown result type (might be due to invalid IL or missing references)
		//IL_8794: Expected O, but got Unknown
		//IL_87b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_8835: Unknown result type (might be due to invalid IL or missing references)
		//IL_883f: Expected O, but got Unknown
		//IL_885f: Unknown result type (might be due to invalid IL or missing references)
		//IL_88c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_88d0: Expected O, but got Unknown
		//IL_88f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_8971: Unknown result type (might be due to invalid IL or missing references)
		//IL_897b: Expected O, but got Unknown
		//IL_899e: Unknown result type (might be due to invalid IL or missing references)
		//IL_8a04: Unknown result type (might be due to invalid IL or missing references)
		//IL_8a0e: Expected O, but got Unknown
		//IL_8a2e: Unknown result type (might be due to invalid IL or missing references)
		//IL_8aa1: Unknown result type (might be due to invalid IL or missing references)
		//IL_8aab: Expected O, but got Unknown
		//IL_8acb: Unknown result type (might be due to invalid IL or missing references)
		//IL_8b3e: Unknown result type (might be due to invalid IL or missing references)
		//IL_8b48: Expected O, but got Unknown
		//IL_8b65: Unknown result type (might be due to invalid IL or missing references)
		//IL_8bd8: Unknown result type (might be due to invalid IL or missing references)
		//IL_8be2: Expected O, but got Unknown
		//IL_8bff: Unknown result type (might be due to invalid IL or missing references)
		//IL_8c7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_8c89: Expected O, but got Unknown
		//IL_8caf: Unknown result type (might be due to invalid IL or missing references)
		//IL_8d22: Unknown result type (might be due to invalid IL or missing references)
		//IL_8d2c: Expected O, but got Unknown
		//IL_8d4f: Unknown result type (might be due to invalid IL or missing references)
		//IL_8dc2: Unknown result type (might be due to invalid IL or missing references)
		//IL_8dcc: Expected O, but got Unknown
		//IL_8dec: Unknown result type (might be due to invalid IL or missing references)
		//IL_8e5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_8e69: Expected O, but got Unknown
		//IL_8e89: Unknown result type (might be due to invalid IL or missing references)
		//IL_8f8e: Unknown result type (might be due to invalid IL or missing references)
		//IL_907b: Unknown result type (might be due to invalid IL or missing references)
		//IL_9085: Expected O, but got Unknown
		//IL_90a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_90c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_913a: Unknown result type (might be due to invalid IL or missing references)
		//IL_9144: Expected O, but got Unknown
		//IL_9161: Unknown result type (might be due to invalid IL or missing references)
		//IL_91fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_9204: Expected O, but got Unknown
		//IL_9224: Unknown result type (might be due to invalid IL or missing references)
		//IL_92ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_92d4: Expected O, but got Unknown
		//IL_92f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_936c: Unknown result type (might be due to invalid IL or missing references)
		//IL_943c: Unknown result type (might be due to invalid IL or missing references)
		//IL_9446: Expected O, but got Unknown
		//IL_9461: Unknown result type (might be due to invalid IL or missing references)
		//IL_9484: Unknown result type (might be due to invalid IL or missing references)
		//IL_94f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_9501: Expected O, but got Unknown
		//IL_9521: Unknown result type (might be due to invalid IL or missing references)
		//IL_95ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_95c4: Expected O, but got Unknown
		//IL_95e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_9687: Unknown result type (might be due to invalid IL or missing references)
		//IL_9691: Expected O, but got Unknown
		//IL_96b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_9760: Unknown result type (might be due to invalid IL or missing references)
		//IL_976a: Expected O, but got Unknown
		//IL_9786: Unknown result type (might be due to invalid IL or missing references)
		//IL_9a11: Unknown result type (might be due to invalid IL or missing references)
		//IL_9a1b: Expected O, but got Unknown
		//IL_9a3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_9a5e: Unknown result type (might be due to invalid IL or missing references)
		//IL_9b06: Unknown result type (might be due to invalid IL or missing references)
		//IL_9b10: Expected O, but got Unknown
		//IL_9b30: Unknown result type (might be due to invalid IL or missing references)
		//IL_9bdd: Unknown result type (might be due to invalid IL or missing references)
		//IL_9c00: Unknown result type (might be due to invalid IL or missing references)
		//IL_9c6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_9c79: Expected O, but got Unknown
		//IL_9c96: Unknown result type (might be due to invalid IL or missing references)
		//IL_9d32: Unknown result type (might be due to invalid IL or missing references)
		//IL_9dbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_9e3d: Unknown result type (might be due to invalid IL or missing references)
		//IL_9ed9: Unknown result type (might be due to invalid IL or missing references)
		//IL_9f55: Unknown result type (might be due to invalid IL or missing references)
		//IL_9fee: Unknown result type (might be due to invalid IL or missing references)
		//IL_a095: Unknown result type (might be due to invalid IL or missing references)
		//IL_a0b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_a127: Unknown result type (might be due to invalid IL or missing references)
		//IL_a131: Expected O, but got Unknown
		//IL_a14e: Unknown result type (might be due to invalid IL or missing references)
		//IL_a1e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_a1f3: Expected O, but got Unknown
		//IL_a210: Unknown result type (might be due to invalid IL or missing references)
		//IL_a2a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_a345: Unknown result type (might be due to invalid IL or missing references)
		//IL_a3c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_a45a: Unknown result type (might be due to invalid IL or missing references)
		//IL_a4d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_a56f: Unknown result type (might be due to invalid IL or missing references)
		//IL_a5e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_a67e: Unknown result type (might be due to invalid IL or missing references)
		//IL_a6f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_a78d: Unknown result type (might be due to invalid IL or missing references)
		//IL_a837: Unknown result type (might be due to invalid IL or missing references)
		//IL_a85a: Unknown result type (might be due to invalid IL or missing references)
		//IL_a8d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_a8e0: Expected O, but got Unknown
		//IL_a8fd: Unknown result type (might be due to invalid IL or missing references)
		//IL_a998: Unknown result type (might be due to invalid IL or missing references)
		//IL_a9a2: Expected O, but got Unknown
		//IL_a9bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_aa40: Unknown result type (might be due to invalid IL or missing references)
		//IL_aa4a: Expected O, but got Unknown
		//IL_aa6d: Unknown result type (might be due to invalid IL or missing references)
		//IL_ab06: Unknown result type (might be due to invalid IL or missing references)
		//IL_ab10: Expected O, but got Unknown
		//IL_ab30: Unknown result type (might be due to invalid IL or missing references)
		//IL_ad22: Unknown result type (might be due to invalid IL or missing references)
		//IL_ad2c: Expected O, but got Unknown
		//IL_ad48: Unknown result type (might be due to invalid IL or missing references)
		//IL_ad6b: Unknown result type (might be due to invalid IL or missing references)
		//IL_adf9: Unknown result type (might be due to invalid IL or missing references)
		//IL_ae03: Expected O, but got Unknown
		//IL_ae23: Unknown result type (might be due to invalid IL or missing references)
		//IL_aebc: Unknown result type (might be due to invalid IL or missing references)
		//IL_aec6: Expected O, but got Unknown
		//IL_aee6: Unknown result type (might be due to invalid IL or missing references)
		//IL_af82: Unknown result type (might be due to invalid IL or missing references)
		//IL_af8c: Expected O, but got Unknown
		//IL_afac: Unknown result type (might be due to invalid IL or missing references)
		//IL_b05d: Unknown result type (might be due to invalid IL or missing references)
		//IL_b0eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_b0f5: Expected O, but got Unknown
		//IL_b115: Unknown result type (might be due to invalid IL or missing references)
		//IL_b1a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_b1ac: Expected O, but got Unknown
		//IL_b1c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_b272: Unknown result type (might be due to invalid IL or missing references)
		//IL_b27c: Expected O, but got Unknown
		//IL_b29c: Unknown result type (might be due to invalid IL or missing references)
		//IL_b331: Unknown result type (might be due to invalid IL or missing references)
		//IL_b3b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_b3bc: Expected O, but got Unknown
		//IL_b3dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_b471: Unknown result type (might be due to invalid IL or missing references)
		//IL_b536: Unknown result type (might be due to invalid IL or missing references)
		//IL_b5ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_b6b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_b72e: Unknown result type (might be due to invalid IL or missing references)
		//IL_b738: Expected O, but got Unknown
		//IL_b758: Unknown result type (might be due to invalid IL or missing references)
		//IL_b7f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_b7fb: Expected O, but got Unknown
		//IL_b818: Unknown result type (might be due to invalid IL or missing references)
		//IL_b96c: Unknown result type (might be due to invalid IL or missing references)
		//IL_b976: Expected O, but got Unknown
		//IL_b999: Unknown result type (might be due to invalid IL or missing references)
		//IL_b9bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_ba46: Unknown result type (might be due to invalid IL or missing references)
		//IL_ba50: Expected O, but got Unknown
		//IL_ba70: Unknown result type (might be due to invalid IL or missing references)
		//IL_bb09: Unknown result type (might be due to invalid IL or missing references)
		//IL_bb13: Expected O, but got Unknown
		//IL_bb30: Unknown result type (might be due to invalid IL or missing references)
		//IL_bbdf: Unknown result type (might be due to invalid IL or missing references)
		//IL_bbe9: Expected O, but got Unknown
		//IL_bc05: Unknown result type (might be due to invalid IL or missing references)
		//IL_bcf4: Unknown result type (might be due to invalid IL or missing references)
		//IL_bd57: Unknown result type (might be due to invalid IL or missing references)
		//IL_bd61: Expected O, but got Unknown
		//IL_bd7e: Unknown result type (might be due to invalid IL or missing references)
		//IL_be17: Unknown result type (might be due to invalid IL or missing references)
		//IL_be21: Expected O, but got Unknown
		//IL_be3e: Unknown result type (might be due to invalid IL or missing references)
		//IL_bfd4: Unknown result type (might be due to invalid IL or missing references)
		//IL_c05c: Unknown result type (might be due to invalid IL or missing references)
		//IL_c066: Expected O, but got Unknown
		//IL_c086: Unknown result type (might be due to invalid IL or missing references)
		//IL_c1f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_c201: Expected O, but got Unknown
		//IL_c221: Unknown result type (might be due to invalid IL or missing references)
		//IL_c244: Unknown result type (might be due to invalid IL or missing references)
		//IL_c2f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_c317: Unknown result type (might be due to invalid IL or missing references)
		//IL_c383: Unknown result type (might be due to invalid IL or missing references)
		//IL_c38d: Expected O, but got Unknown
		//IL_c3aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_c445: Unknown result type (might be due to invalid IL or missing references)
		//IL_c44f: Expected O, but got Unknown
		//IL_c46c: Unknown result type (might be due to invalid IL or missing references)
		//IL_c52d: Unknown result type (might be due to invalid IL or missing references)
		//IL_c550: Unknown result type (might be due to invalid IL or missing references)
		//IL_c5c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_c5d3: Expected O, but got Unknown
		//IL_c5ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_c68a: Unknown result type (might be due to invalid IL or missing references)
		//IL_c694: Expected O, but got Unknown
		//IL_c6b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_c746: Unknown result type (might be due to invalid IL or missing references)
		//IL_c7cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_c851: Unknown result type (might be due to invalid IL or missing references)
		//IL_c85b: Expected O, but got Unknown
		//IL_c87e: Unknown result type (might be due to invalid IL or missing references)
		//IL_c916: Unknown result type (might be due to invalid IL or missing references)
		//IL_c920: Expected O, but got Unknown
		//IL_c940: Unknown result type (might be due to invalid IL or missing references)
		//IL_c9e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_ca68: Unknown result type (might be due to invalid IL or missing references)
		//IL_cafd: Unknown result type (might be due to invalid IL or missing references)
		//IL_cb88: Unknown result type (might be due to invalid IL or missing references)
		//IL_cc13: Unknown result type (might be due to invalid IL or missing references)
		//IL_ccf8: Unknown result type (might be due to invalid IL or missing references)
		//IL_cd64: Unknown result type (might be due to invalid IL or missing references)
		//IL_cd6e: Expected O, but got Unknown
		//IL_cd8b: Unknown result type (might be due to invalid IL or missing references)
		//IL_d002: Unknown result type (might be due to invalid IL or missing references)
		//IL_d025: Unknown result type (might be due to invalid IL or missing references)
		//IL_d096: Unknown result type (might be due to invalid IL or missing references)
		//IL_d12a: Unknown result type (might be due to invalid IL or missing references)
		//IL_d1cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_d24a: Unknown result type (might be due to invalid IL or missing references)
		//IL_d2c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_d341: Unknown result type (might be due to invalid IL or missing references)
		//IL_d3bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_d437: Unknown result type (might be due to invalid IL or missing references)
		//IL_d4b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_d521: Unknown result type (might be due to invalid IL or missing references)
		//IL_d59a: Unknown result type (might be due to invalid IL or missing references)
		//IL_d65c: Unknown result type (might be due to invalid IL or missing references)
		//IL_d6ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_d733: Unknown result type (might be due to invalid IL or missing references)
		//IL_d7f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_d853: Unknown result type (might be due to invalid IL or missing references)
		//IL_d8cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_d98e: Unknown result type (might be due to invalid IL or missing references)
		//IL_d9ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_da65: Unknown result type (might be due to invalid IL or missing references)
		//IL_db27: Unknown result type (might be due to invalid IL or missing references)
		//IL_e100: Unknown result type (might be due to invalid IL or missing references)
		//IL_e123: Unknown result type (might be due to invalid IL or missing references)
		//IL_e193: Unknown result type (might be due to invalid IL or missing references)
		//IL_e227: Unknown result type (might be due to invalid IL or missing references)
		//IL_e2ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_e348: Unknown result type (might be due to invalid IL or missing references)
		//IL_e3c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_e444: Unknown result type (might be due to invalid IL or missing references)
		//IL_e4c2: Unknown result type (might be due to invalid IL or missing references)
		//IL_e540: Unknown result type (might be due to invalid IL or missing references)
		//IL_e619: Unknown result type (might be due to invalid IL or missing references)
		//IL_e6e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_e798: Unknown result type (might be due to invalid IL or missing references)
		//IL_e84f: Unknown result type (might be due to invalid IL or missing references)
		//IL_e906: Unknown result type (might be due to invalid IL or missing references)
		//IL_e9bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_ea1b: Unknown result type (might be due to invalid IL or missing references)
		//IL_ea97: Unknown result type (might be due to invalid IL or missing references)
		//IL_eb13: Unknown result type (might be due to invalid IL or missing references)
		//IL_eb8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_ec0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_ec87: Unknown result type (might be due to invalid IL or missing references)
		//IL_ed03: Unknown result type (might be due to invalid IL or missing references)
		//IL_ed7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_edfb: Unknown result type (might be due to invalid IL or missing references)
		//IL_ee77: Unknown result type (might be due to invalid IL or missing references)
		//IL_eef3: Unknown result type (might be due to invalid IL or missing references)
		//IL_ef6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_eff8: Unknown result type (might be due to invalid IL or missing references)
		//IL_f074: Unknown result type (might be due to invalid IL or missing references)
		//IL_f0f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_f16e: Unknown result type (might be due to invalid IL or missing references)
		//IL_f1ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_f26a: Unknown result type (might be due to invalid IL or missing references)
		//IL_f2e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_f363: Unknown result type (might be due to invalid IL or missing references)
		//IL_f3de: Unknown result type (might be due to invalid IL or missing references)
		//IL_f459: Unknown result type (might be due to invalid IL or missing references)
		//IL_f4d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_f543: Unknown result type (might be due to invalid IL or missing references)
		//IL_f5bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_f694: Unknown result type (might be due to invalid IL or missing references)
		//IL_f6f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_f76e: Unknown result type (might be due to invalid IL or missing references)
		//IL_f843: Unknown result type (might be due to invalid IL or missing references)
		//IL_f8a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_f91d: Unknown result type (might be due to invalid IL or missing references)
		//IL_f9f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_fa50: Unknown result type (might be due to invalid IL or missing references)
		//IL_facc: Unknown result type (might be due to invalid IL or missing references)
		//IL_fba1: Unknown result type (might be due to invalid IL or missing references)
		//IL_fbfc: Unknown result type (might be due to invalid IL or missing references)
		//IL_fc75: Unknown result type (might be due to invalid IL or missing references)
		//IL_fd47: Unknown result type (might be due to invalid IL or missing references)
		//IL_fda2: Unknown result type (might be due to invalid IL or missing references)
		//IL_fe1b: Unknown result type (might be due to invalid IL or missing references)
		//IL_feed: Unknown result type (might be due to invalid IL or missing references)
		//IL_ff48: Unknown result type (might be due to invalid IL or missing references)
		//IL_ffc1: Unknown result type (might be due to invalid IL or missing references)
		//IL_10093: Unknown result type (might be due to invalid IL or missing references)
		//IL_100ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_10167: Unknown result type (might be due to invalid IL or missing references)
		//IL_1022c: Unknown result type (might be due to invalid IL or missing references)
		//IL_10802: Unknown result type (might be due to invalid IL or missing references)
		//IL_10825: Unknown result type (might be due to invalid IL or missing references)
		//IL_10895: Unknown result type (might be due to invalid IL or missing references)
		//IL_10929: Unknown result type (might be due to invalid IL or missing references)
		//IL_109cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_10a4a: Unknown result type (might be due to invalid IL or missing references)
		//IL_10ac8: Unknown result type (might be due to invalid IL or missing references)
		//IL_10b46: Unknown result type (might be due to invalid IL or missing references)
		//IL_10bc4: Unknown result type (might be due to invalid IL or missing references)
		//IL_10c42: Unknown result type (might be due to invalid IL or missing references)
		//IL_10d0a: Unknown result type (might be due to invalid IL or missing references)
		//IL_10dc1: Unknown result type (might be due to invalid IL or missing references)
		//IL_10e78: Unknown result type (might be due to invalid IL or missing references)
		//IL_10f2f: Unknown result type (might be due to invalid IL or missing references)
		//IL_10fe6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1109d: Unknown result type (might be due to invalid IL or missing references)
		//IL_110fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_11177: Unknown result type (might be due to invalid IL or missing references)
		//IL_111f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1126f: Unknown result type (might be due to invalid IL or missing references)
		//IL_112eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_11367: Unknown result type (might be due to invalid IL or missing references)
		//IL_113e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1145f: Unknown result type (might be due to invalid IL or missing references)
		//IL_114db: Unknown result type (might be due to invalid IL or missing references)
		//IL_11557: Unknown result type (might be due to invalid IL or missing references)
		//IL_115d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1164f: Unknown result type (might be due to invalid IL or missing references)
		//IL_116d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_11754: Unknown result type (might be due to invalid IL or missing references)
		//IL_117d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1184e: Unknown result type (might be due to invalid IL or missing references)
		//IL_118cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1194a: Unknown result type (might be due to invalid IL or missing references)
		//IL_119c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_11a43: Unknown result type (might be due to invalid IL or missing references)
		//IL_11abe: Unknown result type (might be due to invalid IL or missing references)
		//IL_11b39: Unknown result type (might be due to invalid IL or missing references)
		//IL_11bb4: Unknown result type (might be due to invalid IL or missing references)
		//IL_11c23: Unknown result type (might be due to invalid IL or missing references)
		//IL_11c9f: Unknown result type (might be due to invalid IL or missing references)
		//IL_11d74: Unknown result type (might be due to invalid IL or missing references)
		//IL_11dd2: Unknown result type (might be due to invalid IL or missing references)
		//IL_11e4e: Unknown result type (might be due to invalid IL or missing references)
		//IL_11f23: Unknown result type (might be due to invalid IL or missing references)
		//IL_11f81: Unknown result type (might be due to invalid IL or missing references)
		//IL_11ffd: Unknown result type (might be due to invalid IL or missing references)
		//IL_120d2: Unknown result type (might be due to invalid IL or missing references)
		//IL_12130: Unknown result type (might be due to invalid IL or missing references)
		//IL_121ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_12281: Unknown result type (might be due to invalid IL or missing references)
		//IL_122dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_12355: Unknown result type (might be due to invalid IL or missing references)
		//IL_12427: Unknown result type (might be due to invalid IL or missing references)
		//IL_12482: Unknown result type (might be due to invalid IL or missing references)
		//IL_124fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_125cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_12628: Unknown result type (might be due to invalid IL or missing references)
		//IL_126a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_12773: Unknown result type (might be due to invalid IL or missing references)
		//IL_127ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_12847: Unknown result type (might be due to invalid IL or missing references)
		//IL_12919: Unknown result type (might be due to invalid IL or missing references)
		//IL_1299b: Unknown result type (might be due to invalid IL or missing references)
		//IL_12b04: Unknown result type (might be due to invalid IL or missing references)
		//IL_12b0e: Expected O, but got Unknown
		//IL_12b2b: Unknown result type (might be due to invalid IL or missing references)
		//IL_12b4e: Unknown result type (might be due to invalid IL or missing references)
		//IL_12bed: Unknown result type (might be due to invalid IL or missing references)
		//IL_12c10: Unknown result type (might be due to invalid IL or missing references)
		//IL_12c85: Unknown result type (might be due to invalid IL or missing references)
		//IL_12d0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_12db5: Unknown result type (might be due to invalid IL or missing references)
		//IL_12dd8: Unknown result type (might be due to invalid IL or missing references)
		//IL_12e4d: Unknown result type (might be due to invalid IL or missing references)
		//IL_12ed3: Unknown result type (might be due to invalid IL or missing references)
		//IL_12f7a: Unknown result type (might be due to invalid IL or missing references)
		//IL_12f9d: Unknown result type (might be due to invalid IL or missing references)
		//IL_13012: Unknown result type (might be due to invalid IL or missing references)
		//IL_13098: Unknown result type (might be due to invalid IL or missing references)
		//IL_1310c: Unknown result type (might be due to invalid IL or missing references)
		//IL_13116: Expected O, but got Unknown
		//IL_13133: Unknown result type (might be due to invalid IL or missing references)
		//IL_131d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1324f: Unknown result type (might be due to invalid IL or missing references)
		//IL_132c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_13363: Unknown result type (might be due to invalid IL or missing references)
		//IL_13386: Unknown result type (might be due to invalid IL or missing references)
		//IL_133fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_13481: Unknown result type (might be due to invalid IL or missing references)
		//IL_1352e: Unknown result type (might be due to invalid IL or missing references)
		//IL_13551: Unknown result type (might be due to invalid IL or missing references)
		//IL_135c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1364c: Unknown result type (might be due to invalid IL or missing references)
		//IL_136f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_13719: Unknown result type (might be due to invalid IL or missing references)
		//IL_1378e: Unknown result type (might be due to invalid IL or missing references)
		//IL_13814: Unknown result type (might be due to invalid IL or missing references)
		//IL_13888: Unknown result type (might be due to invalid IL or missing references)
		//IL_13892: Expected O, but got Unknown
		//IL_138b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1396a: Unknown result type (might be due to invalid IL or missing references)
		//IL_13aa5: Unknown result type (might be due to invalid IL or missing references)
		//IL_13aaf: Expected O, but got Unknown
		//IL_13acb: Unknown result type (might be due to invalid IL or missing references)
		//IL_13aee: Unknown result type (might be due to invalid IL or missing references)
		//IL_13b69: Unknown result type (might be due to invalid IL or missing references)
		//IL_13c2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_13c50: Unknown result type (might be due to invalid IL or missing references)
		//IL_13cb7: Unknown result type (might be due to invalid IL or missing references)
		//IL_13d40: Unknown result type (might be due to invalid IL or missing references)
		//IL_13dc9: Unknown result type (might be due to invalid IL or missing references)
		//IL_13e4f: Unknown result type (might be due to invalid IL or missing references)
		//IL_13ec3: Unknown result type (might be due to invalid IL or missing references)
		//IL_13ecd: Expected O, but got Unknown
		//IL_13eed: Unknown result type (might be due to invalid IL or missing references)
		//IL_13f79: Unknown result type (might be due to invalid IL or missing references)
		//IL_13f83: Expected O, but got Unknown
		//IL_13fa3: Unknown result type (might be due to invalid IL or missing references)
		//IL_14541: Unknown result type (might be due to invalid IL or missing references)
		//IL_14564: Unknown result type (might be due to invalid IL or missing references)
		//IL_145e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1465b: Unknown result type (might be due to invalid IL or missing references)
		//IL_146c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_14748: Unknown result type (might be due to invalid IL or missing references)
		//IL_14808: Unknown result type (might be due to invalid IL or missing references)
		//IL_14869: Unknown result type (might be due to invalid IL or missing references)
		//IL_148e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_149a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_14a06: Unknown result type (might be due to invalid IL or missing references)
		//IL_14a82: Unknown result type (might be due to invalid IL or missing references)
		//IL_14b4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_14baa: Unknown result type (might be due to invalid IL or missing references)
		//IL_14c26: Unknown result type (might be due to invalid IL or missing references)
		//IL_14ce3: Unknown result type (might be due to invalid IL or missing references)
		//IL_14d44: Unknown result type (might be due to invalid IL or missing references)
		//IL_14dc3: Unknown result type (might be due to invalid IL or missing references)
		//IL_14e83: Unknown result type (might be due to invalid IL or missing references)
		//IL_14ee4: Unknown result type (might be due to invalid IL or missing references)
		//IL_14f63: Unknown result type (might be due to invalid IL or missing references)
		//IL_15023: Unknown result type (might be due to invalid IL or missing references)
		//IL_15084: Unknown result type (might be due to invalid IL or missing references)
		//IL_15103: Unknown result type (might be due to invalid IL or missing references)
		//IL_151c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_15221: Unknown result type (might be due to invalid IL or missing references)
		//IL_1529d: Unknown result type (might be due to invalid IL or missing references)
		//IL_15367: Unknown result type (might be due to invalid IL or missing references)
		//IL_153c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_15441: Unknown result type (might be due to invalid IL or missing references)
		//IL_154fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1555c: Unknown result type (might be due to invalid IL or missing references)
		//IL_155d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_15695: Unknown result type (might be due to invalid IL or missing references)
		//IL_15703: Unknown result type (might be due to invalid IL or missing references)
		//IL_15782: Unknown result type (might be due to invalid IL or missing references)
		//IL_15801: Unknown result type (might be due to invalid IL or missing references)
		//IL_15873: Unknown result type (might be due to invalid IL or missing references)
		//IL_158f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_159b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_15a10: Unknown result type (might be due to invalid IL or missing references)
		//IL_15a8c: Unknown result type (might be due to invalid IL or missing references)
		//IL_15b49: Unknown result type (might be due to invalid IL or missing references)
		//IL_15ba7: Unknown result type (might be due to invalid IL or missing references)
		//IL_15c23: Unknown result type (might be due to invalid IL or missing references)
		//IL_15ce0: Unknown result type (might be due to invalid IL or missing references)
		//IL_15d4b: Unknown result type (might be due to invalid IL or missing references)
		//IL_15dc7: Unknown result type (might be due to invalid IL or missing references)
		//IL_15e43: Unknown result type (might be due to invalid IL or missing references)
		//IL_15eb2: Unknown result type (might be due to invalid IL or missing references)
		//IL_15f2e: Unknown result type (might be due to invalid IL or missing references)
		//IL_15ff8: Unknown result type (might be due to invalid IL or missing references)
		//IL_16053: Unknown result type (might be due to invalid IL or missing references)
		//IL_160cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_16186: Unknown result type (might be due to invalid IL or missing references)
		//IL_161e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1625a: Unknown result type (might be due to invalid IL or missing references)
		//IL_16314: Unknown result type (might be due to invalid IL or missing references)
		//IL_16551: Unknown result type (might be due to invalid IL or missing references)
		//IL_16574: Unknown result type (might be due to invalid IL or missing references)
		//IL_165f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_16671: Unknown result type (might be due to invalid IL or missing references)
		//IL_166e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1676c: Unknown result type (might be due to invalid IL or missing references)
		//IL_167db: Unknown result type (might be due to invalid IL or missing references)
		//IL_16867: Unknown result type (might be due to invalid IL or missing references)
		//IL_168e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_16965: Unknown result type (might be due to invalid IL or missing references)
		//IL_169e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_16a60: Unknown result type (might be due to invalid IL or missing references)
		//IL_16adf: Unknown result type (might be due to invalid IL or missing references)
		//IL_16b5b: Unknown result type (might be due to invalid IL or missing references)
		//IL_16bd7: Unknown result type (might be due to invalid IL or missing references)
		//IL_16c50: Unknown result type (might be due to invalid IL or missing references)
		//IL_16cc8: Unknown result type (might be due to invalid IL or missing references)
		//IL_16d3f: Unknown result type (might be due to invalid IL or missing references)
		//IL_16db6: Unknown result type (might be due to invalid IL or missing references)
		//IL_16e2d: Unknown result type (might be due to invalid IL or missing references)
		//IL_16ea4: Unknown result type (might be due to invalid IL or missing references)
		//IL_16f18: Unknown result type (might be due to invalid IL or missing references)
		//IL_16f8c: Unknown result type (might be due to invalid IL or missing references)
		//IL_16fee: Unknown result type (might be due to invalid IL or missing references)
		//IL_16ff8: Expected O, but got Unknown
		//IL_17018: Unknown result type (might be due to invalid IL or missing references)
		//IL_170bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_17142: Unknown result type (might be due to invalid IL or missing references)
		//IL_171f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1721c: Unknown result type (might be due to invalid IL or missing references)
		//IL_174cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_174d7: Expected O, but got Unknown
		//IL_174f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_17517: Unknown result type (might be due to invalid IL or missing references)
		//IL_175e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_17604: Unknown result type (might be due to invalid IL or missing references)
		//IL_1767f: Unknown result type (might be due to invalid IL or missing references)
		//IL_17708: Unknown result type (might be due to invalid IL or missing references)
		//IL_1778e: Unknown result type (might be due to invalid IL or missing references)
		//IL_17814: Unknown result type (might be due to invalid IL or missing references)
		//IL_178b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1791b: Unknown result type (might be due to invalid IL or missing references)
		//IL_17925: Expected O, but got Unknown
		//IL_17948: Unknown result type (might be due to invalid IL or missing references)
		//IL_179c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_179d3: Expected O, but got Unknown
		//IL_17a06: Unknown result type (might be due to invalid IL or missing references)
		//IL_17a85: Unknown result type (might be due to invalid IL or missing references)
		//IL_17ae8: Unknown result type (might be due to invalid IL or missing references)
		//IL_17af2: Expected O, but got Unknown
		//IL_17b15: Unknown result type (might be due to invalid IL or missing references)
		//IL_17b96: Unknown result type (might be due to invalid IL or missing references)
		//IL_17ba0: Expected O, but got Unknown
		//IL_17bd0: Unknown result type (might be due to invalid IL or missing references)
		//IL_17c4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_17caf: Unknown result type (might be due to invalid IL or missing references)
		//IL_17cb9: Expected O, but got Unknown
		//IL_17cdc: Unknown result type (might be due to invalid IL or missing references)
		//IL_17d5d: Unknown result type (might be due to invalid IL or missing references)
		//IL_17d67: Expected O, but got Unknown
		//IL_17d97: Unknown result type (might be due to invalid IL or missing references)
		//IL_17e01: Unknown result type (might be due to invalid IL or missing references)
		//IL_17e0b: Expected O, but got Unknown
		//IL_17e2e: Unknown result type (might be due to invalid IL or missing references)
		//IL_17eaf: Unknown result type (might be due to invalid IL or missing references)
		//IL_17eb9: Expected O, but got Unknown
		//IL_17eec: Unknown result type (might be due to invalid IL or missing references)
		//IL_17f56: Unknown result type (might be due to invalid IL or missing references)
		//IL_17f60: Expected O, but got Unknown
		//IL_17f80: Unknown result type (might be due to invalid IL or missing references)
		//IL_18024: Unknown result type (might be due to invalid IL or missing references)
		//IL_1809c: Unknown result type (might be due to invalid IL or missing references)
		//IL_18114: Unknown result type (might be due to invalid IL or missing references)
		//IL_18177: Unknown result type (might be due to invalid IL or missing references)
		//IL_18181: Expected O, but got Unknown
		//IL_181a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_18230: Unknown result type (might be due to invalid IL or missing references)
		//IL_1823a: Expected O, but got Unknown
		//IL_1825d: Unknown result type (might be due to invalid IL or missing references)
		//IL_182de: Unknown result type (might be due to invalid IL or missing references)
		//IL_182e8: Expected O, but got Unknown
		//IL_1831b: Unknown result type (might be due to invalid IL or missing references)
		//IL_18385: Unknown result type (might be due to invalid IL or missing references)
		//IL_1838f: Expected O, but got Unknown
		//IL_183b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_18433: Unknown result type (might be due to invalid IL or missing references)
		//IL_1843d: Expected O, but got Unknown
		//IL_1846d: Unknown result type (might be due to invalid IL or missing references)
		//IL_184d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_184e1: Expected O, but got Unknown
		//IL_18504: Unknown result type (might be due to invalid IL or missing references)
		//IL_18585: Unknown result type (might be due to invalid IL or missing references)
		//IL_1858f: Expected O, but got Unknown
		//IL_185bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_18629: Unknown result type (might be due to invalid IL or missing references)
		//IL_18633: Expected O, but got Unknown
		//IL_18653: Unknown result type (might be due to invalid IL or missing references)
		//IL_186f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_18779: Unknown result type (might be due to invalid IL or missing references)
		//IL_1892e: Unknown result type (might be due to invalid IL or missing references)
		//IL_18938: Expected O, but got Unknown
		//IL_18958: Unknown result type (might be due to invalid IL or missing references)
		//IL_1897b: Unknown result type (might be due to invalid IL or missing references)
		//IL_189e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_189ee: Expected O, but got Unknown
		//IL_18a0e: Unknown result type (might be due to invalid IL or missing references)
		//IL_18a9d: Unknown result type (might be due to invalid IL or missing references)
		//IL_18aa7: Expected O, but got Unknown
		//IL_18ac7: Unknown result type (might be due to invalid IL or missing references)
		//IL_18b3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_18b45: Expected O, but got Unknown
		//IL_18b62: Unknown result type (might be due to invalid IL or missing references)
		//IL_18bd6: Unknown result type (might be due to invalid IL or missing references)
		//IL_18be0: Expected O, but got Unknown
		//IL_18c00: Unknown result type (might be due to invalid IL or missing references)
		//IL_18c81: Unknown result type (might be due to invalid IL or missing references)
		//IL_18c8b: Expected O, but got Unknown
		//IL_18cbb: Unknown result type (might be due to invalid IL or missing references)
		//IL_18d2f: Unknown result type (might be due to invalid IL or missing references)
		//IL_18d39: Expected O, but got Unknown
		//IL_18d66: Unknown result type (might be due to invalid IL or missing references)
		//IL_18dda: Unknown result type (might be due to invalid IL or missing references)
		//IL_18de4: Expected O, but got Unknown
		//IL_18e14: Unknown result type (might be due to invalid IL or missing references)
		//IL_18e88: Unknown result type (might be due to invalid IL or missing references)
		//IL_18e92: Expected O, but got Unknown
		//IL_18ebf: Unknown result type (might be due to invalid IL or missing references)
		//IL_18f3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_18fb0: Unknown result type (might be due to invalid IL or missing references)
		//IL_19028: Unknown result type (might be due to invalid IL or missing references)
		//IL_1909d: Unknown result type (might be due to invalid IL or missing references)
		//IL_19100: Unknown result type (might be due to invalid IL or missing references)
		//IL_1910a: Expected O, but got Unknown
		//IL_19127: Unknown result type (might be due to invalid IL or missing references)
		//IL_1919b: Unknown result type (might be due to invalid IL or missing references)
		//IL_191a5: Expected O, but got Unknown
		//IL_191c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_19280: Unknown result type (might be due to invalid IL or missing references)
		//IL_192a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_19785: Unknown result type (might be due to invalid IL or missing references)
		//IL_1978f: Expected O, but got Unknown
		//IL_197ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_197cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_198b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_198da: Unknown result type (might be due to invalid IL or missing references)
		//IL_1992c: Unknown result type (might be due to invalid IL or missing references)
		//IL_19936: Expected O, but got Unknown
		//IL_19953: Unknown result type (might be due to invalid IL or missing references)
		//IL_199ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_199f6: Expected O, but got Unknown
		//IL_19a12: Unknown result type (might be due to invalid IL or missing references)
		//IL_19a9f: Unknown result type (might be due to invalid IL or missing references)
		//IL_19aa9: Expected O, but got Unknown
		//IL_19ac5: Unknown result type (might be due to invalid IL or missing references)
		//IL_19b45: Unknown result type (might be due to invalid IL or missing references)
		//IL_19b4f: Expected O, but got Unknown
		//IL_19b6c: Unknown result type (might be due to invalid IL or missing references)
		//IL_19c73: Unknown result type (might be due to invalid IL or missing references)
		//IL_19c96: Unknown result type (might be due to invalid IL or missing references)
		//IL_19cfc: Unknown result type (might be due to invalid IL or missing references)
		//IL_19d06: Expected O, but got Unknown
		//IL_19d26: Unknown result type (might be due to invalid IL or missing references)
		//IL_19da7: Unknown result type (might be due to invalid IL or missing references)
		//IL_19db1: Expected O, but got Unknown
		//IL_19dde: Unknown result type (might be due to invalid IL or missing references)
		//IL_19e48: Unknown result type (might be due to invalid IL or missing references)
		//IL_19e52: Expected O, but got Unknown
		//IL_19e72: Unknown result type (might be due to invalid IL or missing references)
		//IL_19ef3: Unknown result type (might be due to invalid IL or missing references)
		//IL_19efd: Expected O, but got Unknown
		//IL_19f2a: Unknown result type (might be due to invalid IL or missing references)
		//IL_19f94: Unknown result type (might be due to invalid IL or missing references)
		//IL_19f9e: Expected O, but got Unknown
		//IL_19fbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a0df: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a102: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a168: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a172: Expected O, but got Unknown
		//IL_1a18f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a21b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a225: Expected O, but got Unknown
		//IL_1a256: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a2e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a2ef: Expected O, but got Unknown
		//IL_1a30f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a383: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a38d: Expected O, but got Unknown
		//IL_1a3ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a421: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a42b: Expected O, but got Unknown
		//IL_1a448: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a4bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a4c6: Expected O, but got Unknown
		//IL_1a4e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a58d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a5b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a613: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a698: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a721: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a791: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a79b: Expected O, but got Unknown
		//IL_1a7cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a83f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a849: Expected O, but got Unknown
		//IL_1a876: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a8e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a8ea: Expected O, but got Unknown
		//IL_1a90d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1a9b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aa14: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aa1e: Expected O, but got Unknown
		//IL_1aa3e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aac3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aacd: Expected O, but got Unknown
		//IL_1aafd: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ab7c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1abdf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1abe9: Expected O, but got Unknown
		//IL_1ac0c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ac8d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ac97: Expected O, but got Unknown
		//IL_1acca: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ad49: Unknown result type (might be due to invalid IL or missing references)
		//IL_1adac: Unknown result type (might be due to invalid IL or missing references)
		//IL_1adb6: Expected O, but got Unknown
		//IL_1add9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ae5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ae64: Expected O, but got Unknown
		//IL_1ae94: Unknown result type (might be due to invalid IL or missing references)
		//IL_1aefe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1af08: Expected O, but got Unknown
		//IL_1af2b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1afac: Unknown result type (might be due to invalid IL or missing references)
		//IL_1afb6: Expected O, but got Unknown
		//IL_1afe9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b053: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b05d: Expected O, but got Unknown
		//IL_1b080: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b101: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b10b: Expected O, but got Unknown
		//IL_1b13b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b1b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b21a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b224: Expected O, but got Unknown
		//IL_1b247: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b2c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b2d2: Expected O, but got Unknown
		//IL_1b305: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b36c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b376: Expected O, but got Unknown
		//IL_1b399: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b41a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b424: Expected O, but got Unknown
		//IL_1b454: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b4d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b533: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b53d: Expected O, but got Unknown
		//IL_1b55a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b5fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b676: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b6ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b766: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b7db: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b83e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b848: Expected O, but got Unknown
		//IL_1b868: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b8f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b901: Expected O, but got Unknown
		//IL_1b924: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b9a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1b9af: Expected O, but got Unknown
		//IL_1b9e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ba4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ba56: Expected O, but got Unknown
		//IL_1ba79: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bafa: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bb04: Expected O, but got Unknown
		//IL_1bb34: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bb9e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bba8: Expected O, but got Unknown
		//IL_1bbcb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bc4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bc56: Expected O, but got Unknown
		//IL_1bc89: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bcf3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bcfd: Expected O, but got Unknown
		//IL_1bd20: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bda1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bdab: Expected O, but got Unknown
		//IL_1bddb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1be45: Unknown result type (might be due to invalid IL or missing references)
		//IL_1be4f: Expected O, but got Unknown
		//IL_1be6f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bef0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1befa: Expected O, but got Unknown
		//IL_1bf2a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bf94: Unknown result type (might be due to invalid IL or missing references)
		//IL_1bf9e: Expected O, but got Unknown
		//IL_1bfbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c03f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c049: Expected O, but got Unknown
		//IL_1c076: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c0e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c0ea: Expected O, but got Unknown
		//IL_1c107: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c1a8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c230: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c3fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c55e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c5ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c5d4: Expected O, but got Unknown
		//IL_1c5f4: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c6e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c706: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c76c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c776: Expected O, but got Unknown
		//IL_1c793: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c81f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c829: Expected O, but got Unknown
		//IL_1c849: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c8e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c8ec: Expected O, but got Unknown
		//IL_1c90b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1c977: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cacf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1caf2: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cb98: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cbfb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cc05: Expected O, but got Unknown
		//IL_1cc25: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cc99: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cca3: Expected O, but got Unknown
		//IL_1ccc0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cd55: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cd5f: Expected O, but got Unknown
		//IL_1cd7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cdeb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ce7b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cf68: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cfcb: Unknown result type (might be due to invalid IL or missing references)
		//IL_1cfd5: Expected O, but got Unknown
		//IL_1cff1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d08d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d17c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d2a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d2ab: Expected O, but got Unknown
		//IL_1d2c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d2ea: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d368: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d3cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d3d9: Expected O, but got Unknown
		//IL_1d3f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d49a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d516: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d5ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d675: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d719: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d76f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d779: Expected O, but got Unknown
		//IL_1d796: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d822: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d82c: Expected O, but got Unknown
		//IL_1d848: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d94f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1d972: Unknown result type (might be due to invalid IL or missing references)
		//IL_1da09: Unknown result type (might be due to invalid IL or missing references)
		//IL_1da2c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1daa0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1db4a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dc21: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dc44: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dcdc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dcff: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dd65: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ddf7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1deab: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dece: Unknown result type (might be due to invalid IL or missing references)
		//IL_1df34: Unknown result type (might be due to invalid IL or missing references)
		//IL_1dfc7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e05c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e0d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e19d: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e1c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e258: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e27b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e2e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e373: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e427: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e44a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e4b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e542: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e5d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e650: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e6be: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e752: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e7e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e869: Unknown result type (might be due to invalid IL or missing references)
		//IL_1e873: Expected O, but got Unknown
		//IL_1e896: Unknown result type (might be due to invalid IL or missing references)
		//IL_1eca3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ecc6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ed64: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ed87: Unknown result type (might be due to invalid IL or missing references)
		//IL_1edec: Unknown result type (might be due to invalid IL or missing references)
		//IL_1edf6: Expected O, but got Unknown
		//IL_1ee13: Unknown result type (might be due to invalid IL or missing references)
		//IL_1eea1: Unknown result type (might be due to invalid IL or missing references)
		//IL_1eeab: Expected O, but got Unknown
		//IL_1eec8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ef82: Unknown result type (might be due to invalid IL or missing references)
		//IL_1efa5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f00a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f014: Expected O, but got Unknown
		//IL_1f031: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f0bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f0c9: Expected O, but got Unknown
		//IL_1f0e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f16f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f20c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f22f: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f291: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f29b: Expected O, but got Unknown
		//IL_1f2b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f345: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f34f: Expected O, but got Unknown
		//IL_1f36c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f408: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f487: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f4fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f593: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f63a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f6ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f72e: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f79a: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f81c: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f88b: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f8fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f969: Unknown result type (might be due to invalid IL or missing references)
		//IL_1f9d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fa47: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fab6: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fb34: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fba3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fc12: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fc81: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fced: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fd59: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fdc5: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fe44: Unknown result type (might be due to invalid IL or missing references)
		//IL_1fec3: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ff42: Unknown result type (might be due to invalid IL or missing references)
		//IL_1ffbd: Unknown result type (might be due to invalid IL or missing references)
		//IL_2003c: Unknown result type (might be due to invalid IL or missing references)
		//IL_200bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_20139: Unknown result type (might be due to invalid IL or missing references)
		//IL_201b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_20231: Unknown result type (might be due to invalid IL or missing references)
		//IL_202af: Unknown result type (might be due to invalid IL or missing references)
		//IL_2032d: Unknown result type (might be due to invalid IL or missing references)
		//IL_203a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_20422: Unknown result type (might be due to invalid IL or missing references)
		//IL_205b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_205db: Unknown result type (might be due to invalid IL or missing references)
		//IL_2065a: Unknown result type (might be due to invalid IL or missing references)
		//IL_20664: Expected O, but got Unknown
		//IL_20681: Unknown result type (might be due to invalid IL or missing references)
		//IL_2071c: Unknown result type (might be due to invalid IL or missing references)
		//IL_20726: Expected O, but got Unknown
		//IL_20746: Unknown result type (might be due to invalid IL or missing references)
		//IL_207e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_20809: Unknown result type (might be due to invalid IL or missing references)
		//IL_2086b: Unknown result type (might be due to invalid IL or missing references)
		//IL_20875: Expected O, but got Unknown
		//IL_20890: Unknown result type (might be due to invalid IL or missing references)
		//IL_20920: Unknown result type (might be due to invalid IL or missing references)
		//IL_20943: Unknown result type (might be due to invalid IL or missing references)
		//IL_209a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_209af: Expected O, but got Unknown
		//IL_209cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_20a54: Unknown result type (might be due to invalid IL or missing references)
		//IL_20ad0: Unknown result type (might be due to invalid IL or missing references)
		//IL_20b5d: Unknown result type (might be due to invalid IL or missing references)
		//IL_20bcc: Unknown result type (might be due to invalid IL or missing references)
		//IL_20c60: Unknown result type (might be due to invalid IL or missing references)
		//IL_20cf4: Unknown result type (might be due to invalid IL or missing references)
		//IL_20d62: Unknown result type (might be due to invalid IL or missing references)
		//IL_20ddd: Unknown result type (might be due to invalid IL or missing references)
		//IL_20e5b: Unknown result type (might be due to invalid IL or missing references)
		//IL_20f6d: Unknown result type (might be due to invalid IL or missing references)
		//IL_20f90: Unknown result type (might be due to invalid IL or missing references)
		//IL_21018: Unknown result type (might be due to invalid IL or missing references)
		//IL_2103b: Unknown result type (might be due to invalid IL or missing references)
		//IL_210b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_21141: Unknown result type (might be due to invalid IL or missing references)
		//IL_211e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2120a: Unknown result type (might be due to invalid IL or missing references)
		//IL_21273: Unknown result type (might be due to invalid IL or missing references)
		//IL_21306: Unknown result type (might be due to invalid IL or missing references)
		//IL_2139c: Unknown result type (might be due to invalid IL or missing references)
		//IL_21417: Unknown result type (might be due to invalid IL or missing references)
		//IL_21495: Unknown result type (might be due to invalid IL or missing references)
		//IL_21503: Unknown result type (might be due to invalid IL or missing references)
		//IL_21597: Unknown result type (might be due to invalid IL or missing references)
		//IL_21848: Unknown result type (might be due to invalid IL or missing references)
		//IL_21852: Expected O, but got Unknown
		//IL_21872: Unknown result type (might be due to invalid IL or missing references)
		//IL_218fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_21908: Expected O, but got Unknown
		//IL_2192b: Unknown result type (might be due to invalid IL or missing references)
		//IL_219b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_219c1: Expected O, but got Unknown
		//IL_219e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_21a55: Unknown result type (might be due to invalid IL or missing references)
		//IL_21a5f: Expected O, but got Unknown
		//IL_21a7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_21af3: Unknown result type (might be due to invalid IL or missing references)
		//IL_21afd: Expected O, but got Unknown
		//IL_21b1d: Unknown result type (might be due to invalid IL or missing references)
		//IL_21b91: Unknown result type (might be due to invalid IL or missing references)
		//IL_21b9b: Expected O, but got Unknown
		//IL_21bbb: Unknown result type (might be due to invalid IL or missing references)
		//IL_21c2f: Unknown result type (might be due to invalid IL or missing references)
		//IL_21c39: Expected O, but got Unknown
		//IL_21c56: Unknown result type (might be due to invalid IL or missing references)
		//IL_21cca: Unknown result type (might be due to invalid IL or missing references)
		//IL_21cd4: Expected O, but got Unknown
		//IL_21cf4: Unknown result type (might be due to invalid IL or missing references)
		//IL_21d68: Unknown result type (might be due to invalid IL or missing references)
		//IL_21d72: Expected O, but got Unknown
		//IL_21d92: Unknown result type (might be due to invalid IL or missing references)
		//IL_21e06: Unknown result type (might be due to invalid IL or missing references)
		//IL_21e10: Expected O, but got Unknown
		//IL_21e30: Unknown result type (might be due to invalid IL or missing references)
		//IL_21ea4: Unknown result type (might be due to invalid IL or missing references)
		//IL_21eae: Expected O, but got Unknown
		//IL_21ecb: Unknown result type (might be due to invalid IL or missing references)
		//IL_21f3f: Unknown result type (might be due to invalid IL or missing references)
		//IL_21f49: Expected O, but got Unknown
		//IL_21f69: Unknown result type (might be due to invalid IL or missing references)
		//IL_21fdd: Unknown result type (might be due to invalid IL or missing references)
		//IL_21fe7: Expected O, but got Unknown
		//IL_22007: Unknown result type (might be due to invalid IL or missing references)
		//IL_2207b: Unknown result type (might be due to invalid IL or missing references)
		//IL_22085: Expected O, but got Unknown
		//IL_220a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_22119: Unknown result type (might be due to invalid IL or missing references)
		//IL_22123: Expected O, but got Unknown
		//IL_22140: Unknown result type (might be due to invalid IL or missing references)
		//IL_221c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_221cb: Expected O, but got Unknown
		//IL_221ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_22261: Unknown result type (might be due to invalid IL or missing references)
		//IL_2226b: Expected O, but got Unknown
		//IL_2228b: Unknown result type (might be due to invalid IL or missing references)
		//IL_222ff: Unknown result type (might be due to invalid IL or missing references)
		//IL_22309: Expected O, but got Unknown
		//IL_22328: Unknown result type (might be due to invalid IL or missing references)
		//IL_2239c: Unknown result type (might be due to invalid IL or missing references)
		//IL_223a6: Expected O, but got Unknown
		//IL_223c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_224b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_22608: Unknown result type (might be due to invalid IL or missing references)
		//IL_22612: Expected O, but got Unknown
		//IL_2262f: Unknown result type (might be due to invalid IL or missing references)
		//IL_22652: Unknown result type (might be due to invalid IL or missing references)
		//IL_226b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_226c2: Expected O, but got Unknown
		//IL_226e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_22786: Unknown result type (might be due to invalid IL or missing references)
		//IL_227ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_227f7: Expected O, but got Unknown
		//IL_22817: Unknown result type (might be due to invalid IL or missing references)
		//IL_228bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_22937: Unknown result type (might be due to invalid IL or missing references)
		//IL_229ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_22a96: Unknown result type (might be due to invalid IL or missing references)
		//IL_22b3a: Unknown result type (might be due to invalid IL or missing references)
		//IL_22b90: Unknown result type (might be due to invalid IL or missing references)
		//IL_22b9a: Expected O, but got Unknown
		//IL_22bba: Unknown result type (might be due to invalid IL or missing references)
		//IL_22c46: Unknown result type (might be due to invalid IL or missing references)
		//IL_22c50: Expected O, but got Unknown
		//IL_22c6d: Unknown result type (might be due to invalid IL or missing references)
		//IL_22d2f: Unknown result type (might be due to invalid IL or missing references)
		//IL_22d52: Unknown result type (might be due to invalid IL or missing references)
		//IL_22e98: Unknown result type (might be due to invalid IL or missing references)
		//IL_22ebb: Unknown result type (might be due to invalid IL or missing references)
		//IL_22f56: Unknown result type (might be due to invalid IL or missing references)
		//IL_22f79: Unknown result type (might be due to invalid IL or missing references)
		//IL_22fe0: Unknown result type (might be due to invalid IL or missing references)
		//IL_23073: Unknown result type (might be due to invalid IL or missing references)
		//IL_23127: Unknown result type (might be due to invalid IL or missing references)
		//IL_2314a: Unknown result type (might be due to invalid IL or missing references)
		//IL_231b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_23242: Unknown result type (might be due to invalid IL or missing references)
		//IL_232f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2331c: Unknown result type (might be due to invalid IL or missing references)
		//IL_23383: Unknown result type (might be due to invalid IL or missing references)
		//IL_23416: Unknown result type (might be due to invalid IL or missing references)
		//IL_2349f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2355e: Unknown result type (might be due to invalid IL or missing references)
		//IL_23581: Unknown result type (might be due to invalid IL or missing references)
		//IL_235e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2367b: Unknown result type (might be due to invalid IL or missing references)
		//IL_23701: Unknown result type (might be due to invalid IL or missing references)
		//IL_237a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_2381f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2389d: Unknown result type (might be due to invalid IL or missing references)
		//IL_23917: Unknown result type (might be due to invalid IL or missing references)
		//IL_239f5: Unknown result type (might be due to invalid IL or missing references)
		//IL_23a18: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ab0: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ad3: Unknown result type (might be due to invalid IL or missing references)
		//IL_23b39: Unknown result type (might be due to invalid IL or missing references)
		//IL_23bcb: Unknown result type (might be due to invalid IL or missing references)
		//IL_23c7f: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ca2: Unknown result type (might be due to invalid IL or missing references)
		//IL_23d08: Unknown result type (might be due to invalid IL or missing references)
		//IL_23d9a: Unknown result type (might be due to invalid IL or missing references)
		//IL_23e1f: Unknown result type (might be due to invalid IL or missing references)
		//IL_23ec0: Unknown result type (might be due to invalid IL or missing references)
		//IL_23f3b: Unknown result type (might be due to invalid IL or missing references)
		//IL_24130: Unknown result type (might be due to invalid IL or missing references)
		//IL_24153: Unknown result type (might be due to invalid IL or missing references)
		//IL_241c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_24238: Unknown result type (might be due to invalid IL or missing references)
		//IL_242cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_24366: Unknown result type (might be due to invalid IL or missing references)
		//IL_243e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2445d: Unknown result type (might be due to invalid IL or missing references)
		//IL_244de: Unknown result type (might be due to invalid IL or missing references)
		//IL_2457e: Unknown result type (might be due to invalid IL or missing references)
		//IL_245a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_24606: Unknown result type (might be due to invalid IL or missing references)
		//IL_24610: Expected O, but got Unknown
		//IL_2462c: Unknown result type (might be due to invalid IL or missing references)
		//IL_246ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_246c4: Expected O, but got Unknown
		//IL_246e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_24777: Unknown result type (might be due to invalid IL or missing references)
		//IL_2481a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2483d: Unknown result type (might be due to invalid IL or missing references)
		//IL_248a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_248ac: Expected O, but got Unknown
		//IL_248c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_24957: Unknown result type (might be due to invalid IL or missing references)
		//IL_24961: Expected O, but got Unknown
		//IL_2497e: Unknown result type (might be due to invalid IL or missing references)
		//IL_24a17: Unknown result type (might be due to invalid IL or missing references)
		//IL_24a99: Unknown result type (might be due to invalid IL or missing references)
		//IL_24b0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_24b90: Unknown result type (might be due to invalid IL or missing references)
		//IL_24c12: Unknown result type (might be due to invalid IL or missing references)
		//IL_24c81: Unknown result type (might be due to invalid IL or missing references)
		//IL_24d03: Unknown result type (might be due to invalid IL or missing references)
		//IL_24de8: Unknown result type (might be due to invalid IL or missing references)
		//IL_24e0b: Unknown result type (might be due to invalid IL or missing references)
		//IL_24e68: Unknown result type (might be due to invalid IL or missing references)
		//IL_24efc: Unknown result type (might be due to invalid IL or missing references)
		//IL_24f67: Unknown result type (might be due to invalid IL or missing references)
		//IL_24fd7: Unknown result type (might be due to invalid IL or missing references)
		//IL_24fe1: Expected O, but got Unknown
		//IL_25001: Unknown result type (might be due to invalid IL or missing references)
		//IL_2507d: Unknown result type (might be due to invalid IL or missing references)
		//IL_25173: Unknown result type (might be due to invalid IL or missing references)
		//IL_25196: Unknown result type (might be due to invalid IL or missing references)
		//IL_251f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2525b: Unknown result type (might be due to invalid IL or missing references)
		//IL_252b9: Unknown result type (might be due to invalid IL or missing references)
		//IL_25352: Unknown result type (might be due to invalid IL or missing references)
		//IL_2535c: Expected O, but got Unknown
		//IL_2537c: Unknown result type (might be due to invalid IL or missing references)
		//IL_253f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_25464: Unknown result type (might be due to invalid IL or missing references)
		//IL_2559c: Unknown result type (might be due to invalid IL or missing references)
		//IL_25671: Unknown result type (might be due to invalid IL or missing references)
		//IL_2567b: Expected O, but got Unknown
		//IL_25697: Unknown result type (might be due to invalid IL or missing references)
		//IL_256ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_2572d: Unknown result type (might be due to invalid IL or missing references)
		//IL_25737: Expected O, but got Unknown
		//IL_25757: Unknown result type (might be due to invalid IL or missing references)
		//IL_257f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2586c: Unknown result type (might be due to invalid IL or missing references)
		//IL_25876: Expected O, but got Unknown
		//IL_25896: Unknown result type (might be due to invalid IL or missing references)
		//IL_2593c: Unknown result type (might be due to invalid IL or missing references)
		//IL_25946: Expected O, but got Unknown
		//IL_25965: Unknown result type (might be due to invalid IL or missing references)
		//IL_25a66: Unknown result type (might be due to invalid IL or missing references)
		//IL_25a70: Expected O, but got Unknown
		//IL_25a8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_25ab2: Unknown result type (might be due to invalid IL or missing references)
		//IL_25b25: Unknown result type (might be due to invalid IL or missing references)
		//IL_25b2f: Expected O, but got Unknown
		//IL_25b4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_25bea: Unknown result type (might be due to invalid IL or missing references)
		//IL_25c80: Unknown result type (might be due to invalid IL or missing references)
		//IL_25cf9: Unknown result type (might be due to invalid IL or missing references)
		//IL_25d8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_25e03: Unknown result type (might be due to invalid IL or missing references)
		//IL_25e0d: Expected O, but got Unknown
		//IL_25e2a: Unknown result type (might be due to invalid IL or missing references)
		//IL_25f08: Unknown result type (might be due to invalid IL or missing references)
		//IL_25f12: Expected O, but got Unknown
		//IL_25f31: Unknown result type (might be due to invalid IL or missing references)
		//IL_25f54: Unknown result type (might be due to invalid IL or missing references)
		//IL_26026: Unknown result type (might be due to invalid IL or missing references)
		//IL_26030: Expected O, but got Unknown
		//IL_26050: Unknown result type (might be due to invalid IL or missing references)
		//IL_26073: Unknown result type (might be due to invalid IL or missing references)
		//IL_260f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_260fd: Expected O, but got Unknown
		//IL_2611a: Unknown result type (might be due to invalid IL or missing references)
		//IL_261cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_261d7: Expected O, but got Unknown
		//IL_261f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_26281: Unknown result type (might be due to invalid IL or missing references)
		//IL_2628b: Expected O, but got Unknown
		//IL_262ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_26344: Unknown result type (might be due to invalid IL or missing references)
		//IL_2634e: Expected O, but got Unknown
		//IL_2636e: Unknown result type (might be due to invalid IL or missing references)
		//IL_26463: Unknown result type (might be due to invalid IL or missing references)
		//IL_2646d: Expected O, but got Unknown
		//IL_2648d: Unknown result type (might be due to invalid IL or missing references)
		//IL_264b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_26523: Unknown result type (might be due to invalid IL or missing references)
		//IL_2652d: Expected O, but got Unknown
		//IL_2654d: Unknown result type (might be due to invalid IL or missing references)
		//IL_265f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_265fd: Expected O, but got Unknown
		//IL_2661a: Unknown result type (might be due to invalid IL or missing references)
		//IL_266b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_266bf: Expected O, but got Unknown
		//IL_266db: Unknown result type (might be due to invalid IL or missing references)
		//IL_26776: Unknown result type (might be due to invalid IL or missing references)
		//IL_26780: Expected O, but got Unknown
		//IL_2679c: Unknown result type (might be due to invalid IL or missing references)
		//IL_26955: Unknown result type (might be due to invalid IL or missing references)
		//IL_2695f: Expected O, but got Unknown
		//IL_2697c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2699f: Unknown result type (might be due to invalid IL or missing references)
		//IL_26a1f: Unknown result type (might be due to invalid IL or missing references)
		//IL_26a29: Expected O, but got Unknown
		//IL_26a49: Unknown result type (might be due to invalid IL or missing references)
		//IL_26ae7: Unknown result type (might be due to invalid IL or missing references)
		//IL_26af1: Expected O, but got Unknown
		//IL_26b0d: Unknown result type (might be due to invalid IL or missing references)
		//IL_26bb6: Unknown result type (might be due to invalid IL or missing references)
		//IL_26c42: Unknown result type (might be due to invalid IL or missing references)
		//IL_26cce: Unknown result type (might be due to invalid IL or missing references)
		//IL_26d59: Unknown result type (might be due to invalid IL or missing references)
		//IL_26dd5: Unknown result type (might be due to invalid IL or missing references)
		//IL_26ea8: Unknown result type (might be due to invalid IL or missing references)
		//IL_26f80: Unknown result type (might be due to invalid IL or missing references)
		//IL_26fe3: Unknown result type (might be due to invalid IL or missing references)
		//IL_26fed: Expected O, but got Unknown
		//IL_2700d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2710f: Unknown result type (might be due to invalid IL or missing references)
		//IL_27177: Unknown result type (might be due to invalid IL or missing references)
		//IL_271f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_27202: Expected O, but got Unknown
		//IL_2721f: Unknown result type (might be due to invalid IL or missing references)
		//IL_274e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_274ea: Expected O, but got Unknown
		//IL_27509: Unknown result type (might be due to invalid IL or missing references)
		//IL_2752c: Unknown result type (might be due to invalid IL or missing references)
		//IL_275af: Unknown result type (might be due to invalid IL or missing references)
		//IL_275b9: Expected O, but got Unknown
		//IL_275dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_27656: Unknown result type (might be due to invalid IL or missing references)
		//IL_27660: Expected O, but got Unknown
		//IL_27680: Unknown result type (might be due to invalid IL or missing references)
		//IL_276f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_27701: Expected O, but got Unknown
		//IL_27721: Unknown result type (might be due to invalid IL or missing references)
		//IL_277a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_277af: Expected O, but got Unknown
		//IL_277d2: Unknown result type (might be due to invalid IL or missing references)
		//IL_27849: Unknown result type (might be due to invalid IL or missing references)
		//IL_27853: Expected O, but got Unknown
		//IL_27884: Unknown result type (might be due to invalid IL or missing references)
		//IL_2791d: Unknown result type (might be due to invalid IL or missing references)
		//IL_27927: Expected O, but got Unknown
		//IL_27947: Unknown result type (might be due to invalid IL or missing references)
		//IL_279ed: Unknown result type (might be due to invalid IL or missing references)
		//IL_279f7: Expected O, but got Unknown
		//IL_27a1a: Unknown result type (might be due to invalid IL or missing references)
		//IL_27a91: Unknown result type (might be due to invalid IL or missing references)
		//IL_27a9b: Expected O, but got Unknown
		//IL_27abb: Unknown result type (might be due to invalid IL or missing references)
		//IL_27b3f: Unknown result type (might be due to invalid IL or missing references)
		//IL_27b49: Expected O, but got Unknown
		//IL_27b6c: Unknown result type (might be due to invalid IL or missing references)
		//IL_27bf0: Unknown result type (might be due to invalid IL or missing references)
		//IL_27bfa: Expected O, but got Unknown
		//IL_27c1d: Unknown result type (might be due to invalid IL or missing references)
		//IL_27c94: Unknown result type (might be due to invalid IL or missing references)
		//IL_27c9e: Expected O, but got Unknown
		//IL_27cbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_27d35: Unknown result type (might be due to invalid IL or missing references)
		//IL_27d3f: Expected O, but got Unknown
		//IL_27d5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_27de3: Unknown result type (might be due to invalid IL or missing references)
		//IL_27ded: Expected O, but got Unknown
		//IL_27e10: Unknown result type (might be due to invalid IL or missing references)
		//IL_27e94: Unknown result type (might be due to invalid IL or missing references)
		//IL_27e9e: Expected O, but got Unknown
		//IL_27ec1: Unknown result type (might be due to invalid IL or missing references)
		//IL_27f38: Unknown result type (might be due to invalid IL or missing references)
		//IL_27f42: Expected O, but got Unknown
		//IL_27f62: Unknown result type (might be due to invalid IL or missing references)
		//IL_27fd9: Unknown result type (might be due to invalid IL or missing references)
		//IL_27fe3: Expected O, but got Unknown
		//IL_28003: Unknown result type (might be due to invalid IL or missing references)
		//IL_28087: Unknown result type (might be due to invalid IL or missing references)
		//IL_28091: Expected O, but got Unknown
		//IL_280b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_28134: Unknown result type (might be due to invalid IL or missing references)
		//IL_2813e: Expected O, but got Unknown
		//IL_2815d: Unknown result type (might be due to invalid IL or missing references)
		//IL_281e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_281eb: Expected O, but got Unknown
		//IL_2820a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2828e: Unknown result type (might be due to invalid IL or missing references)
		//IL_28298: Expected O, but got Unknown
		//IL_282b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2832e: Unknown result type (might be due to invalid IL or missing references)
		//IL_28338: Expected O, but got Unknown
		//IL_28355: Unknown result type (might be due to invalid IL or missing references)
		//IL_283cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_283d6: Expected O, but got Unknown
		//IL_283f3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2846a: Unknown result type (might be due to invalid IL or missing references)
		//IL_28474: Expected O, but got Unknown
		//IL_28491: Unknown result type (might be due to invalid IL or missing references)
		//IL_28508: Unknown result type (might be due to invalid IL or missing references)
		//IL_28512: Expected O, but got Unknown
		//IL_2852f: Unknown result type (might be due to invalid IL or missing references)
		//IL_286a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_286ad: Expected O, but got Unknown
		//IL_286cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_286ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_2879b: Unknown result type (might be due to invalid IL or missing references)
		//IL_287be: Unknown result type (might be due to invalid IL or missing references)
		//IL_28837: Unknown result type (might be due to invalid IL or missing references)
		//IL_28841: Expected O, but got Unknown
		//IL_2885e: Unknown result type (might be due to invalid IL or missing references)
		//IL_288f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_28902: Expected O, but got Unknown
		//IL_2891f: Unknown result type (might be due to invalid IL or missing references)
		//IL_289d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_289f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_28a71: Unknown result type (might be due to invalid IL or missing references)
		//IL_28a7b: Expected O, but got Unknown
		//IL_28a97: Unknown result type (might be due to invalid IL or missing references)
		//IL_28b31: Unknown result type (might be due to invalid IL or missing references)
		//IL_28b3b: Expected O, but got Unknown
		//IL_28b57: Unknown result type (might be due to invalid IL or missing references)
		//IL_28c0d: Unknown result type (might be due to invalid IL or missing references)
		//IL_28c30: Unknown result type (might be due to invalid IL or missing references)
		//IL_28ca9: Unknown result type (might be due to invalid IL or missing references)
		//IL_28cb3: Expected O, but got Unknown
		//IL_28ccf: Unknown result type (might be due to invalid IL or missing references)
		//IL_28d69: Unknown result type (might be due to invalid IL or missing references)
		//IL_28d73: Expected O, but got Unknown
		//IL_28d8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_28e45: Unknown result type (might be due to invalid IL or missing references)
		//IL_28e68: Unknown result type (might be due to invalid IL or missing references)
		//IL_28ee4: Unknown result type (might be due to invalid IL or missing references)
		//IL_28eee: Expected O, but got Unknown
		//IL_28f0a: Unknown result type (might be due to invalid IL or missing references)
		//IL_28fa4: Unknown result type (might be due to invalid IL or missing references)
		//IL_28fae: Expected O, but got Unknown
		//IL_28fca: Unknown result type (might be due to invalid IL or missing references)
		//IL_29083: Unknown result type (might be due to invalid IL or missing references)
		//IL_290a6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2911f: Unknown result type (might be due to invalid IL or missing references)
		//IL_29129: Expected O, but got Unknown
		//IL_29145: Unknown result type (might be due to invalid IL or missing references)
		//IL_291df: Unknown result type (might be due to invalid IL or missing references)
		//IL_291e9: Expected O, but got Unknown
		//IL_29205: Unknown result type (might be due to invalid IL or missing references)
		//IL_292bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_292de: Unknown result type (might be due to invalid IL or missing references)
		//IL_2934f: Unknown result type (might be due to invalid IL or missing references)
		//IL_293fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_29493: Unknown result type (might be due to invalid IL or missing references)
		//IL_2949d: Expected O, but got Unknown
		//IL_294bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_295a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_295c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2963c: Unknown result type (might be due to invalid IL or missing references)
		//IL_29646: Expected O, but got Unknown
		//IL_29663: Unknown result type (might be due to invalid IL or missing references)
		//IL_29716: Unknown result type (might be due to invalid IL or missing references)
		//IL_29720: Expected O, but got Unknown
		//IL_2973d: Unknown result type (might be due to invalid IL or missing references)
		//IL_297e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_297ed: Expected O, but got Unknown
		//IL_2980a: Unknown result type (might be due to invalid IL or missing references)
		//IL_298d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_298f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_29975: Unknown result type (might be due to invalid IL or missing references)
		//IL_2997f: Expected O, but got Unknown
		//IL_2999b: Unknown result type (might be due to invalid IL or missing references)
		//IL_29a38: Unknown result type (might be due to invalid IL or missing references)
		//IL_29a42: Expected O, but got Unknown
		//IL_29a5e: Unknown result type (might be due to invalid IL or missing references)
		//IL_29b14: Unknown result type (might be due to invalid IL or missing references)
		//IL_29b37: Unknown result type (might be due to invalid IL or missing references)
		//IL_29bb0: Unknown result type (might be due to invalid IL or missing references)
		//IL_29bba: Expected O, but got Unknown
		//IL_29bd7: Unknown result type (might be due to invalid IL or missing references)
		//IL_29c71: Unknown result type (might be due to invalid IL or missing references)
		//IL_29c7b: Expected O, but got Unknown
		//IL_29c98: Unknown result type (might be due to invalid IL or missing references)
		//IL_29d18: Unknown result type (might be due to invalid IL or missing references)
		//IL_29d22: Expected O, but got Unknown
		//IL_29d42: Unknown result type (might be due to invalid IL or missing references)
		//IL_29eaa: Unknown result type (might be due to invalid IL or missing references)
		//IL_29eb4: Expected O, but got Unknown
		//IL_29ecf: Unknown result type (might be due to invalid IL or missing references)
		//IL_29ef2: Unknown result type (might be due to invalid IL or missing references)
		//IL_29f65: Unknown result type (might be due to invalid IL or missing references)
		//IL_29f6f: Expected O, but got Unknown
		//IL_29f8f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a040: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a0c9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a152: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a217: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a2c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a3a4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a407: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a411: Expected O, but got Unknown
		//IL_2a431: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a4ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a4d4: Expected O, but got Unknown
		//IL_2a4f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a5e4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a607: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a82c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a84f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a8f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2a97b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aa07: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aa7b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aa85: Expected O, but got Unknown
		//IL_2aaa8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ab5c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ac00: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ac8c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ad18: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ada7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ae30: Unknown result type (might be due to invalid IL or missing references)
		//IL_2aebc: Unknown result type (might be due to invalid IL or missing references)
		//IL_2af45: Unknown result type (might be due to invalid IL or missing references)
		//IL_2afd1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b05d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b0ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b178: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b204: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b290: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b31c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b8db: Unknown result type (might be due to invalid IL or missing references)
		//IL_2b8fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_2baa8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bb34: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bbc0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bc4c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bcd8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bd64: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bdf0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2be7c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bf08: Unknown result type (might be due to invalid IL or missing references)
		//IL_2bf94: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c020: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c0ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c12d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c137: Expected O, but got Unknown
		//IL_2c157: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c1f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c1fa: Expected O, but got Unknown
		//IL_2c21a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c2be: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c34a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c3d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c462: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c4fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c595: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c621: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c6ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c739: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c7d2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c854: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c8e0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c96c: Unknown result type (might be due to invalid IL or missing references)
		//IL_2c9f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ca91: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cb10: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cbac: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cc28: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ccc4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cd46: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cde2: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ce61: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cefa: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cf73: Unknown result type (might be due to invalid IL or missing references)
		//IL_2cfff: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d07b: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d114: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d190: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d226: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d2a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d2b1: Expected O, but got Unknown
		//IL_2d2d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d33e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d3c7: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d450: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d4e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d562: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d5eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d69d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d729: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d7b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d830: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d8b9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2d96a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2da52: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dc47: Unknown result type (might be due to invalid IL or missing references)
		//IL_2dc51: Expected O, but got Unknown
		//IL_2dd0e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ddbe: Unknown result type (might be due to invalid IL or missing references)
		//IL_2de6e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2df1d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e05e: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e068: Expected O, but got Unknown
		//IL_2e122: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e1d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e283: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e332: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e3e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e490: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e53f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e5ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e6ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e8e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_2e970: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eae0: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eb5f: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ebce: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ec5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ecc9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ed52: Unknown result type (might be due to invalid IL or missing references)
		//IL_2edc1: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ee3d: Unknown result type (might be due to invalid IL or missing references)
		//IL_2eeb9: Unknown result type (might be due to invalid IL or missing references)
		//IL_2ef42: Unknown result type (might be due to invalid IL or missing references)
		//IL_2efae: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f285: Unknown result type (might be due to invalid IL or missing references)
		//IL_2f318: Unknown result type (might be due to invalid IL or missing references)
		//IL_2fb1e: Unknown result type (might be due to invalid IL or missing references)
		//IL_3000a: Unknown result type (might be due to invalid IL or missing references)
		//IL_30014: Expected O, but got Unknown
		//IL_312ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_312f9: Expected O, but got Unknown
		//IL_31316: Unknown result type (might be due to invalid IL or missing references)
		//IL_3139e: Unknown result type (might be due to invalid IL or missing references)
		//IL_313a8: Expected O, but got Unknown
		//IL_313c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_31437: Unknown result type (might be due to invalid IL or missing references)
		//IL_314cb: Unknown result type (might be due to invalid IL or missing references)
		//IL_31564: Unknown result type (might be due to invalid IL or missing references)
		//IL_3156e: Expected O, but got Unknown
		//IL_315a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_31623: Unknown result type (might be due to invalid IL or missing references)
		//IL_3162d: Expected O, but got Unknown
		//IL_31661: Unknown result type (might be due to invalid IL or missing references)
		//IL_31817: Unknown result type (might be due to invalid IL or missing references)
		//IL_31821: Expected O, but got Unknown
		//IL_3189f: Unknown result type (might be due to invalid IL or missing references)
		//IL_318a9: Expected O, but got Unknown
		//IL_3193c: Unknown result type (might be due to invalid IL or missing references)
		//IL_31946: Expected O, but got Unknown
		//IL_319e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_319f0: Expected O, but got Unknown
		//IL_31a5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_31a64: Expected O, but got Unknown
		//IL_31a84: Unknown result type (might be due to invalid IL or missing references)
		//IL_31afe: Unknown result type (might be due to invalid IL or missing references)
		//IL_31b08: Expected O, but got Unknown
		//IL_31b2b: Unknown result type (might be due to invalid IL or missing references)
		//IL_31b8b: Unknown result type (might be due to invalid IL or missing references)
		//IL_31b95: Expected O, but got Unknown
		//IL_31bb2: Unknown result type (might be due to invalid IL or missing references)
		//IL_31c30: Unknown result type (might be due to invalid IL or missing references)
		//IL_31c3a: Expected O, but got Unknown
		//IL_31c5a: Unknown result type (might be due to invalid IL or missing references)
		//IL_31cce: Unknown result type (might be due to invalid IL or missing references)
		//IL_31cd8: Expected O, but got Unknown
		//IL_31cf8: Unknown result type (might be due to invalid IL or missing references)
		//IL_31d84: Unknown result type (might be due to invalid IL or missing references)
		//IL_31d8e: Expected O, but got Unknown
		//IL_31dae: Unknown result type (might be due to invalid IL or missing references)
		//IL_31e40: Unknown result type (might be due to invalid IL or missing references)
		//IL_31e4a: Expected O, but got Unknown
		//IL_31e67: Unknown result type (might be due to invalid IL or missing references)
		//IL_31ee1: Unknown result type (might be due to invalid IL or missing references)
		//IL_31eeb: Expected O, but got Unknown
		//IL_31f17: Unknown result type (might be due to invalid IL or missing references)
		//IL_3203f: Unknown result type (might be due to invalid IL or missing references)
		components = new Container();
		menuStrip1 = new MenuStrip();
		toolStripMenuItem1 = new ToolStripMenuItem();
		toolStripMenuItem3 = new ToolStripMenuItem();
		toolStripMenuItem2 = new ToolStripMenuItem();
		groupBox新增版 = new GroupBox();
		型号 = new Label();
		需量时间 = new Label();
		label270 = new Label();
		最大需量 = new TextBox();
		版本号 = new Label();
		单三相状态 = new Label();
		最大回路数 = new Label();
		label79 = new Label();
		时间显示 = new Label();
		groupBox1 = new GroupBox();
		groupBox8 = new GroupBox();
		越限 = new Label();
		label62 = new Label();
		欠费 = new Label();
		label58 = new Label();
		ALM2 = new Label();
		label56 = new Label();
		ALM1 = new Label();
		label54 = new Label();
		label46 = new Label();
		label47 = new Label();
		故障 = new Label();
		label49 = new Label();
		label50 = new Label();
		label51 = new Label();
		label52 = new Label();
		groupBox7 = new GroupBox();
		L2 = new Label();
		L3 = new Label();
		L1 = new Label();
		label38 = new Label();
		label39 = new Label();
		label44 = new Label();
		label45 = new Label();
		groupBox6 = new GroupBox();
		ps2 = new Label();
		ps1 = new Label();
		ps3 = new Label();
		ps = new Label();
		label40 = new Label();
		label41 = new Label();
		label42 = new Label();
		label43 = new Label();
		groupBox5 = new GroupBox();
		ms2 = new Label();
		ms1 = new Label();
		ms3 = new Label();
		ms = new Label();
		label32 = new Label();
		label33 = new Label();
		label14 = new Label();
		label17 = new Label();
		groupBox4 = new GroupBox();
		ts2 = new Label();
		ts1 = new Label();
		ts = new Label();
		label24 = new Label();
		ts3 = new Label();
		label25 = new Label();
		label26 = new Label();
		label27 = new Label();
		groupBox3 = new GroupBox();
		fs2 = new Label();
		fs1 = new Label();
		fs = new Label();
		label20 = new Label();
		label23 = new Label();
		fs3 = new Label();
		label28 = new Label();
		label29 = new Label();
		label22 = new Label();
		基础电量 = new TextBox();
		label8 = new Label();
		允许次数 = new TextBox();
		label2 = new Label();
		负控次数 = new TextBox();
		label7 = new Label();
		总用电量 = new TextBox();
		label6 = new Label();
		谷电能 = new TextBox();
		label1 = new Label();
		平电能 = new TextBox();
		label21 = new Label();
		购电次数 = new TextBox();
		label19 = new Label();
		峰电能 = new TextBox();
		label18 = new Label();
		电流变比 = new TextBox();
		label15 = new Label();
		电压变比 = new TextBox();
		label16 = new Label();
		PFt = new TextBox();
		label11 = new Label();
		PFc = new TextBox();
		label13 = new Label();
		PFb = new TextBox();
		label10 = new Label();
		Qc = new TextBox();
		label84 = new Label();
		Qb = new TextBox();
		label80 = new Label();
		Qa = new TextBox();
		label76 = new Label();
		Pc = new TextBox();
		label69 = new Label();
		Pb = new TextBox();
		label65 = new Label();
		Pa = new TextBox();
		label61 = new Label();
		剩余金额 = new TextBox();
		label35 = new Label();
		尖电能 = new TextBox();
		label34 = new Label();
		Ic = new TextBox();
		label72 = new Label();
		Ib = new TextBox();
		label71 = new Label();
		Uc = new TextBox();
		label70 = new Label();
		Ub = new TextBox();
		label59 = new Label();
		PFa = new TextBox();
		label9 = new Label();
		Qt = new TextBox();
		Pt = new TextBox();
		Ia = new TextBox();
		Ua = new TextBox();
		label5 = new Label();
		label4 = new Label();
		label3 = new Label();
		label12 = new Label();
		tabPage6 = new TabPage();
		groupBox72 = new GroupBox();
		Readxulihao = new Button();
		Setxuliehao = new Button();
		label236 = new Label();
		ADF300序列号 = new TextBox();
		groupBox51 = new GroupBox();
		button10 = new Button();
		button11 = new Button();
		外置互感器 = new RadioButton();
		内置互感器 = new RadioButton();
		ADF参数设置 = new GroupBox();
		无无线 = new RadioButton();
		groupBox40 = new GroupBox();
		有无线 = new RadioButton();
		label178 = new Label();
		label177 = new Label();
		ADF间隔 = new TextBox();
		label175 = new Label();
		ADF脉宽 = new TextBox();
		label176 = new Label();
		groupBox42 = new GroupBox();
		ADF三相三线 = new RadioButton();
		ADF三相四线 = new RadioButton();
		ADFCT4 = new TextBox();
		label174 = new Label();
		ADFCT2 = new TextBox();
		label173 = new Label();
		ADFCT3 = new TextBox();
		label172 = new Label();
		ADFCT1 = new TextBox();
		label171 = new Label();
		ADFPT = new TextBox();
		label170 = new Label();
		groupBox41 = new GroupBox();
		ADF脉冲 = new RadioButton();
		ADF电平 = new RadioButton();
		读取ADF = new Button();
		设置ADF = new Button();
		groupBox34 = new GroupBox();
		ADF300类型读取 = new Button();
		ADF300广播清零 = new Button();
		ADF300类型设置 = new Button();
		label164 = new Label();
		II = new RadioButton();
		ADF300清零 = new Button();
		III = new RadioButton();
		label180 = new Label();
		I = new RadioButton();
		label181 = new Label();
		ADF脉冲常数 = new ComboBox();
		ADF电流 = new ComboBox();
		ADF电压 = new ComboBox();
		CorrectMeter = new Button();
		Init = new Button();
		groupBox28 = new GroupBox();
		label245 = new Label();
		ADF副通讯 = new RadioButton();
		ADF主通讯 = new RadioButton();
		ADF300波特率 = new ComboBox();
		button2 = new Button();
		button3 = new Button();
		ADF300地址 = new ComboBox();
		label165 = new Label();
		groupBoxChangePhaseType = new GroupBox();
		groupBox47 = new GroupBox();
		使能IC = new RadioButton();
		无IC = new RadioButton();
		groupBox46 = new GroupBox();
		jiliangxing = new RadioButton();
		yufufei = new RadioButton();
		dlt645xieyi = new CheckBox();
		ADF表号 = new TextBox();
		buttonReadPhase = new Button();
		buttonChangePhase = new Button();
		三相数量 = new TextBox();
		单相数量 = new TextBox();
		label146 = new Label();
		label147 = new Label();
		label179 = new Label();
		tabPage5 = new TabPage();
		button14 = new Button();
		groupBox16 = new GroupBox();
		buttonReadTimeZone = new Button();
		buttonSetTimeZone = new Button();
		label99 = new Label();
		label100 = new Label();
		label101 = new Label();
		label102 = new Label();
		label116 = new Label();
		label117 = new Label();
		label118 = new Label();
		textBoxMonth4 = new TextBox();
		textBoxDay4 = new TextBox();
		comboBoxschedu4 = new ComboBox();
		textBoxMonth3 = new TextBox();
		textBoxDay3 = new TextBox();
		comboBoxschedu3 = new ComboBox();
		textBoxMonth2 = new TextBox();
		textBoxDay2 = new TextBox();
		comboBoxschedu2 = new ComboBox();
		textBoxMonth1 = new TextBox();
		textBoxDay1 = new TextBox();
		comboBoxschedu1 = new ComboBox();
		groupBox17 = new GroupBox();
		buttonReadSched2 = new Button();
		buttonSetSched2 = new Button();
		label119 = new Label();
		label122 = new Label();
		label123 = new Label();
		label124 = new Label();
		label125 = new Label();
		label126 = new Label();
		comboBoxCharge14_S2 = new ComboBox();
		comboBoxCharge13_S2 = new ComboBox();
		comboBoxCharge12_S2 = new ComboBox();
		comboBoxCharge11_S2 = new ComboBox();
		comboBoxCharge10_S2 = new ComboBox();
		comboBoxCharge9_S2 = new ComboBox();
		textBoxMinute14_S2 = new TextBox();
		textBoxMinute13_S2 = new TextBox();
		textBoxMinute12_S2 = new TextBox();
		textBoxMinute11_S2 = new TextBox();
		textBoxMinute10_S2 = new TextBox();
		textBoxMinute9_S2 = new TextBox();
		textBoxHour14_S2 = new TextBox();
		textBoxHour13_S2 = new TextBox();
		textBoxHour12_S2 = new TextBox();
		textBoxHour11_S2 = new TextBox();
		textBoxHour10_S2 = new TextBox();
		textBoxHour9_S2 = new TextBox();
		label127 = new Label();
		label128 = new Label();
		label129 = new Label();
		label130 = new Label();
		label131 = new Label();
		label132 = new Label();
		label133 = new Label();
		label134 = new Label();
		label135 = new Label();
		label136 = new Label();
		label137 = new Label();
		textBoxHour8_S2 = new TextBox();
		textBoxMinute8_S2 = new TextBox();
		comboBoxCharge8_S2 = new ComboBox();
		textBoxHour7_S2 = new TextBox();
		textBoxMinute7_S2 = new TextBox();
		comboBoxCharge7_S2 = new ComboBox();
		textBoxHour6_S2 = new TextBox();
		textBoxMinute6_S2 = new TextBox();
		comboBoxCharge6_S2 = new ComboBox();
		textBoxHour5_S2 = new TextBox();
		textBoxMinute5_S2 = new TextBox();
		comboBoxCharge5_S2 = new ComboBox();
		textBoxHour4_S2 = new TextBox();
		textBoxMinute4_S2 = new TextBox();
		comboBoxCharge4_S2 = new ComboBox();
		textBoxHour3_S2 = new TextBox();
		textBoxMinute3_S2 = new TextBox();
		comboBoxCharge3_S2 = new ComboBox();
		textBoxHour2_S2 = new TextBox();
		textBoxMinute2_S2 = new TextBox();
		comboBoxCharge2_S2 = new ComboBox();
		textBoxHour1_S2 = new TextBox();
		textBoxMinute1_S2 = new TextBox();
		comboBoxCharge1_S2 = new ComboBox();
		groupBox19 = new GroupBox();
		buttonReadSched1 = new Button();
		buttonSetSched1 = new Button();
		label138 = new Label();
		label139 = new Label();
		label140 = new Label();
		label141 = new Label();
		label143 = new Label();
		label151 = new Label();
		comboBoxCharge14_S1 = new ComboBox();
		comboBoxCharge13_S1 = new ComboBox();
		comboBoxCharge12_S1 = new ComboBox();
		comboBoxCharge11_S1 = new ComboBox();
		comboBoxCharge10_S1 = new ComboBox();
		comboBoxCharge9_S1 = new ComboBox();
		textBoxMinute14_S1 = new TextBox();
		textBoxMinute13_S1 = new TextBox();
		textBoxMinute12_S1 = new TextBox();
		textBoxMinute11_S1 = new TextBox();
		textBoxMinute10_S1 = new TextBox();
		textBoxMinute9_S1 = new TextBox();
		textBoxHour14_S1 = new TextBox();
		textBoxHour13_S1 = new TextBox();
		textBoxHour12_S1 = new TextBox();
		textBoxHour11_S1 = new TextBox();
		textBoxHour10_S1 = new TextBox();
		textBoxHour9_S1 = new TextBox();
		label152 = new Label();
		label153 = new Label();
		label154 = new Label();
		label155 = new Label();
		label156 = new Label();
		label157 = new Label();
		label158 = new Label();
		label159 = new Label();
		label160 = new Label();
		label161 = new Label();
		label162 = new Label();
		textBoxHour8_S1 = new TextBox();
		textBoxMinute8_S1 = new TextBox();
		comboBoxCharge8_S1 = new ComboBox();
		textBoxHour7_S1 = new TextBox();
		textBoxMinute7_S1 = new TextBox();
		comboBoxCharge7_S1 = new ComboBox();
		textBoxHour6_S1 = new TextBox();
		textBoxMinute6_S1 = new TextBox();
		comboBoxCharge6_S1 = new ComboBox();
		textBoxHour5_S1 = new TextBox();
		textBoxMinute5_S1 = new TextBox();
		comboBoxCharge5_S1 = new ComboBox();
		textBoxHour4_S1 = new TextBox();
		textBoxMinute4_S1 = new TextBox();
		comboBoxCharge4_S1 = new ComboBox();
		textBoxHour3_S1 = new TextBox();
		textBoxMinute3_S1 = new TextBox();
		comboBoxCharge3_S1 = new ComboBox();
		textBoxHour2_S1 = new TextBox();
		textBoxMinute2_S1 = new TextBox();
		comboBoxCharge2_S1 = new ComboBox();
		textBoxHour1_S1 = new TextBox();
		textBoxMinute1_S1 = new TextBox();
		comboBoxCharge1_S1 = new ComboBox();
		tabPage4 = new TabPage();
		groupBox14 = new GroupBox();
		groupBox38 = new GroupBox();
		L3OFF = new RadioButton();
		L3ON = new RadioButton();
		groupBox37 = new GroupBox();
		L2OFF = new RadioButton();
		L2ON = new RadioButton();
		groupBox36 = new GroupBox();
		L1OFF = new RadioButton();
		L1ON = new RadioButton();
		button7 = new Button();
		checkBoxForceEN3 = new CheckBox();
		checkBoxForceEN2 = new CheckBox();
		checkBoxForceEN1 = new CheckBox();
		groupBoxFL3 = new GroupBox();
		L3Close = new RadioButton();
		L3Open = new RadioButton();
		groupBoxFL2 = new GroupBox();
		L2Close = new RadioButton();
		L2Open = new RadioButton();
		groupBoxFL1 = new GroupBox();
		L1Close = new RadioButton();
		L1Open = new RadioButton();
		ForceControl = new Button();
		tabPage3 = new TabPage();
		groupBox13 = new GroupBox();
		checkBox2 = new CheckBox();
		groupBox32 = new GroupBox();
		SKALL = new RadioButton();
		SKL3 = new RadioButton();
		SKL2 = new RadioButton();
		SKL1 = new RadioButton();
		ReadTimeControl = new Button();
		AllTimeControl = new Button();
		groupBoxL1 = new GroupBox();
		label82 = new Label();
		checkBox11 = new CheckBox();
		textBoxL1WorkH8 = new TextBox();
		textBoxL1WorkM8 = new TextBox();
		comboBoxL1Work8 = new ComboBox();
		textBoxL1WorkH7 = new TextBox();
		textBoxL1WorkM7 = new TextBox();
		comboBoxL1Work7 = new ComboBox();
		textBoxL1FreeH8 = new TextBox();
		textBoxL1FreeM8 = new TextBox();
		comboBoxL1Free8 = new ComboBox();
		textBoxL1FreeH7 = new TextBox();
		textBoxL1FreeM7 = new TextBox();
		comboBoxL1Free7 = new ComboBox();
		textBoxL1WorkH6 = new TextBox();
		textBoxL1WorkM6 = new TextBox();
		comboBoxL1Work6 = new ComboBox();
		textBoxL1WorkH5 = new TextBox();
		textBoxL1WorkM5 = new TextBox();
		comboBoxL1Work5 = new ComboBox();
		textBoxL1WorkH4 = new TextBox();
		textBoxL1WorkM4 = new TextBox();
		comboBoxL1Work4 = new ComboBox();
		textBoxL1FreeH6 = new TextBox();
		textBoxL1FreeM6 = new TextBox();
		comboBoxL1Free6 = new ComboBox();
		textBoxL1FreeH5 = new TextBox();
		textBoxL1FreeM5 = new TextBox();
		comboBoxL1Free5 = new ComboBox();
		textBoxL1FreeH4 = new TextBox();
		textBoxL1FreeM4 = new TextBox();
		comboBoxL1Free4 = new ComboBox();
		label103 = new Label();
		label104 = new Label();
		label105 = new Label();
		textBoxL1WorkH3 = new TextBox();
		textBoxL1WorkM3 = new TextBox();
		comboBoxL1Work3 = new ComboBox();
		textBoxL1WorkH2 = new TextBox();
		textBoxL1WorkM2 = new TextBox();
		comboBoxL1Work2 = new ComboBox();
		textBoxL1WorkH1 = new TextBox();
		textBoxL1WorkM1 = new TextBox();
		comboBoxL1Work1 = new ComboBox();
		label106 = new Label();
		label107 = new Label();
		label108 = new Label();
		textBoxL1FreeH3 = new TextBox();
		textBoxL1FreeM3 = new TextBox();
		comboBoxL1Free3 = new ComboBox();
		textBoxL1FreeH2 = new TextBox();
		textBoxL1FreeM2 = new TextBox();
		comboBoxL1Free2 = new ComboBox();
		textBoxL1FreeH1 = new TextBox();
		textBoxL1FreeM1 = new TextBox();
		comboBoxL1Free1 = new ComboBox();
		groupBox15 = new GroupBox();
		label166 = new Label();
		label163 = new Label();
		textBox1 = new TextBox();
		label148 = new Label();
		textBox2 = new TextBox();
		label109 = new Label();
		label110 = new Label();
		label111 = new Label();
		label89 = new Label();
		label112 = new Label();
		label113 = new Label();
		label114 = new Label();
		label115 = new Label();
		checkBoxTimeEN1 = new CheckBox();
		checkBoxL1Mon = new CheckBox();
		checkBoxL1Thu = new CheckBox();
		checkBoxL1Wed = new CheckBox();
		checkBoxL1Tue = new CheckBox();
		checkBoxL1Fri = new CheckBox();
		checkBoxL1Sat = new CheckBox();
		checkBoxL1Sun = new CheckBox();
		TimeControl = new Button();
		CloseTime = new RadioButton();
		OpenTime = new RadioButton();
		tabPage2 = new TabPage();
		groupBox10 = new GroupBox();
		groupBox31 = new GroupBox();
		FKL3 = new RadioButton();
		FKL2 = new RadioButton();
		FKL1 = new RadioButton();
		FKALL = new RadioButton();
		checkBox10 = new CheckBox();
		textBox10 = new TextBox();
		label150 = new Label();
		checkBox9 = new CheckBox();
		textBox9 = new TextBox();
		label149 = new Label();
		checkBoxPowerEN0 = new CheckBox();
		textBoxMaxPF = new TextBox();
		label88 = new Label();
		textBoxMaxPAdd = new TextBox();
		label87 = new Label();
		ReadPowerControl = new Button();
		checkBoxPowerEN4 = new CheckBox();
		checkBoxPowerEN3 = new CheckBox();
		checkBoxPowerEN1 = new CheckBox();
		AllPowerControl = new Button();
		MaxOverCount = new TextBox();
		label74 = new Label();
		RecoverTime = new TextBox();
		label75 = new Label();
		MaxPower = new TextBox();
		label77 = new Label();
		PowerControl = new Button();
		ClosePower = new RadioButton();
		OpenPower = new RadioButton();
		groupBox25 = new GroupBox();
		button5 = new Button();
		OverCount3 = new TextBox();
		OverCount2 = new TextBox();
		OverCount1 = new TextBox();
		label169 = new Label();
		label168 = new Label();
		label167 = new Label();
		label78 = new Label();
		FWL3 = new CheckBox();
		FWL2 = new CheckBox();
		FWL1 = new CheckBox();
		FWALL = new CheckBox();
		OverCountALL = new TextBox();
		ResetPC = new Button();
		tabPage1 = new TabPage();
		groupBox9 = new GroupBox();
		groupBox48 = new GroupBox();
		button12 = new Button();
		加密开 = new RadioButton();
		加密关 = new RadioButton();
		button13 = new Button();
		groupBox50 = new GroupBox();
		新购电量 = new TextBox();
		label201 = new Label();
		new购电次数 = new TextBox();
		label202 = new Label();
		购电命令下发 = new Button();
		groupBox49 = new GroupBox();
		设置密钥 = new Button();
		button9 = new Button();
		密钥4 = new TextBox();
		密钥3 = new TextBox();
		密钥2 = new TextBox();
		密钥1 = new TextBox();
		groupBox43 = new GroupBox();
		radioButton2 = new RadioButton();
		radioButton1 = new RadioButton();
		FKEN0 = new CheckBox();
		label200 = new Label();
		label188 = new Label();
		表号读取 = new Button();
		FKEN10 = new CheckBox();
		textBox8 = new TextBox();
		label144 = new Label();
		FKEN8 = new CheckBox();
		textBox7 = new TextBox();
		FKEN9 = new Label();
		FKEN7 = new CheckBox();
		TouZhi = new TextBox();
		label142 = new Label();
		textBoxPrice4 = new TextBox();
		label95 = new Label();
		textBoxPrice3 = new TextBox();
		label96 = new Label();
		FKEN6 = new CheckBox();
		textBoxPrice2 = new TextBox();
		label93 = new Label();
		textBoxPrice1 = new TextBox();
		label94 = new Label();
		checkBox1 = new CheckBox();
		ReadMoneyControl = new Button();
		FKEN3 = new CheckBox();
		FKEN2 = new CheckBox();
		FKEN5 = new CheckBox();
		FKEN4 = new CheckBox();
		FKEN1 = new CheckBox();
		AllMoneyControl = new Button();
		Alarm2 = new TextBox();
		label63 = new Label();
		Alarm1 = new TextBox();
		label64 = new Label();
		TotalE = new TextBox();
		label66 = new Label();
		BaseE = new TextBox();
		label67 = new Label();
		BuyTimes = new TextBox();
		label68 = new Label();
		LeaveE = new TextBox();
		label73 = new Label();
		MoneyControl = new Button();
		OFFFK = new RadioButton();
		ONFK = new RadioButton();
		tabControl1 = new TabControl();
		tabPage9 = new TabPage();
		ADF400广播清零 = new Button();
		groupBox62 = new GroupBox();
		Read序列号 = new Button();
		Set序列号 = new Button();
		label235 = new Label();
		ADF400序列号 = new TextBox();
		groupBox60 = new GroupBox();
		ADF400校验位 = new ComboBox();
		label275 = new Label();
		ADF4003通讯 = new RadioButton();
		label246 = new Label();
		button32 = new Button();
		button33 = new Button();
		ADF400波特率 = new ComboBox();
		ADF4002通讯 = new RadioButton();
		label241 = new Label();
		ADF400地址 = new ComboBox();
		groupBox58 = new GroupBox();
		label237 = new Label();
		ADF400电能清零 = new Button();
		label238 = new Label();
		label239 = new Label();
		ADF400脉冲常数 = new ComboBox();
		ADF400电流 = new ComboBox();
		ADF400电压 = new ComboBox();
		ADF400校准 = new Button();
		ADF400初始化 = new Button();
		groupBox55 = new GroupBox();
		groupBox90 = new GroupBox();
		ADF400主机 = new RadioButton();
		ADF400从机 = new RadioButton();
		groupBox57 = new GroupBox();
		groupBox73 = new GroupBox();
		ADF400DO1分 = new RadioButton();
		ADF400DO1合 = new RadioButton();
		groupBox71 = new GroupBox();
		ADF400DO2分 = new RadioButton();
		ADF400DO2合 = new RadioButton();
		label234 = new Label();
		label233 = new Label();
		groupBox56 = new GroupBox();
		groupBox70 = new GroupBox();
		ADF400DI2分 = new RadioButton();
		ADF400DI2合 = new RadioButton();
		groupBox69 = new GroupBox();
		ADF400DI1分 = new RadioButton();
		ADF400DI1合 = new RadioButton();
		label232 = new Label();
		label231 = new Label();
		button19 = new Button();
		ADF400设置DO = new Button();
		ADF400互感器接入回路 = new TextBox();
		ADF4001通讯 = new RadioButton();
		groupBox54 = new GroupBox();
		groupBox68 = new GroupBox();
		ADF400无线 = new RadioButton();
		ADF400无无线 = new RadioButton();
		groupBox67 = new GroupBox();
		ADF400电平 = new RadioButton();
		ADF400脉冲 = new RadioButton();
		ADF400脉宽 = new TextBox();
		groupBox66 = new GroupBox();
		ADF4003p3l = new RadioButton();
		ADF4003p4l = new RadioButton();
		label243 = new Label();
		label242 = new Label();
		button18 = new Button();
		button17 = new Button();
		label230 = new Label();
		ADF400间隔 = new TextBox();
		label229 = new Label();
		ADF400PT = new TextBox();
		label228 = new Label();
		ADF400CT12 = new TextBox();
		ADF400CT8 = new TextBox();
		ADF400CT4 = new TextBox();
		ADF400CT11 = new TextBox();
		ADF400CT7 = new TextBox();
		ADF400CT3 = new TextBox();
		label227 = new Label();
		ADF400CT10 = new TextBox();
		ADF400CT6 = new TextBox();
		ADF400CT2 = new TextBox();
		ADF400CT9 = new TextBox();
		ADF400CT5 = new TextBox();
		ADF400CT1 = new TextBox();
		label223 = new Label();
		label224 = new Label();
		label225 = new Label();
		label226 = new Label();
		label219 = new Label();
		label220 = new Label();
		label221 = new Label();
		label222 = new Label();
		label217 = new Label();
		label218 = new Label();
		label216 = new Label();
		label214 = new Label();
		label212 = new Label();
		groupBox53 = new GroupBox();
		ADF400计量型 = new RadioButton();
		ADF400无使能IC = new RadioButton();
		groupBox63 = new GroupBox();
		ADF400使能IC = new RadioButton();
		groupBox61 = new GroupBox();
		ADF400预付费型 = new RadioButton();
		ADF400dlt645协议 = new CheckBox();
		ADF400表号 = new TextBox();
		label240 = new Label();
		button16 = new Button();
		button15 = new Button();
		ADF400三相数量 = new TextBox();
		ADF400单相数量 = new TextBox();
		label207 = new Label();
		label204 = new Label();
		groupBox59 = new GroupBox();
		groupBox65 = new GroupBox();
		ADF400从机地址重排2 = new RadioButton();
		ADF400从机地址重排1 = new RadioButton();
		groupBox64 = new GroupBox();
		ADF400使能CE以太网1 = new RadioButton();
		ADF400使能CE以太网0 = new RadioButton();
		label247 = new Label();
		label209 = new Label();
		label210 = new Label();
		button21 = new Button();
		button22 = new Button();
		tabPage12 = new TabPage();
		ADF400无线读取 = new Button();
		ADF400无线设置 = new Button();
		ADF400端口号 = new TextBox();
		ADF400IP2 = new TextBox();
		ADF400IP3 = new TextBox();
		ADF400IP4 = new TextBox();
		ADF400IP1 = new TextBox();
		子网掩码2 = new TextBox();
		子网掩码3 = new TextBox();
		子网掩码4 = new TextBox();
		子网掩码1 = new TextBox();
		ADF400网关IP2 = new TextBox();
		ADF400网关IP3 = new TextBox();
		ADF400网关IP4 = new TextBox();
		ADF400网关IP1 = new TextBox();
		label274 = new Label();
		label273 = new Label();
		label272 = new Label();
		label244 = new Label();
		tabPage10 = new TabPage();
		groupBox88 = new GroupBox();
		button24 = new Button();
		label267 = new Label();
		button27 = new Button();
		label268 = new Label();
		label269 = new Label();
		ADF400L从pulse = new ComboBox();
		ADF400L从电流 = new ComboBox();
		ADF400L从电压 = new ComboBox();
		button28 = new Button();
		button29 = new Button();
		groupBox79 = new GroupBox();
		groupBox80 = new GroupBox();
		groupBox81 = new GroupBox();
		ADF400L从DO4分 = new RadioButton();
		ADF400L从DO4合 = new RadioButton();
		groupBox82 = new GroupBox();
		ADF400L从DO1分 = new RadioButton();
		ADF400L从DO1合 = new RadioButton();
		groupBox83 = new GroupBox();
		ADF400L从DO2分 = new RadioButton();
		ADF400L从DO2合 = new RadioButton();
		ADF400L从DOW = new Button();
		groupBox84 = new GroupBox();
		ADF400L从DO3分 = new RadioButton();
		ADF400L从DO3合 = new RadioButton();
		ADF400L从DOR = new Button();
		label260 = new Label();
		label261 = new Label();
		label262 = new Label();
		label263 = new Label();
		groupBox85 = new GroupBox();
		groupBox86 = new GroupBox();
		ADF400L从DI2分 = new RadioButton();
		ADF400L从DI2合 = new RadioButton();
		groupBox87 = new GroupBox();
		ADF400L从DI1分 = new RadioButton();
		ADF400L从DI1合 = new RadioButton();
		ADF400L从DI = new Button();
		label264 = new Label();
		label265 = new Label();
		groupBox76 = new GroupBox();
		label266 = new Label();
		ADF400L从参数W = new Button();
		ADF400L从参数R = new Button();
		ADF400L从消抖时间 = new TextBox();
		label259 = new Label();
		ADF400L从脉冲常数 = new TextBox();
		label258 = new Label();
		groupBox78 = new GroupBox();
		ADF400L从3p3l = new RadioButton();
		ADF400L从3p4l = new RadioButton();
		label257 = new Label();
		groupBox77 = new GroupBox();
		ADF400L从电平 = new RadioButton();
		ADF400L从脉冲 = new RadioButton();
		label252 = new Label();
		label253 = new Label();
		ADF400L从脉冲间隔 = new TextBox();
		label254 = new Label();
		label255 = new Label();
		ADF400L从脉冲宽度 = new TextBox();
		label256 = new Label();
		groupBox75 = new GroupBox();
		ADF400L额定参数读取 = new Button();
		ADF400L从额定电压 = new TextBox();
		ADF400L从额定电流 = new TextBox();
		label251 = new Label();
		label250 = new Label();
		groupBox74 = new GroupBox();
		ADF400L从波特率 = new TextBox();
		ADF400L从地址 = new TextBox();
		ADF400L从通讯W = new Button();
		label248 = new Label();
		label249 = new Label();
		ADF400L从通讯R = new Button();
		tabPage7 = new TabPage();
		groupBox52 = new GroupBox();
		XuLieHao读取 = new Button();
		XuLieHao = new TextBox();
		XuLieHao设置 = new Button();
		label271 = new Label();
		groupBox29 = new GroupBox();
		读取变比 = new Button();
		CTValue = new TextBox();
		label120 = new Label();
		PTValue = new TextBox();
		label121 = new Label();
		设置变比 = new Button();
		groupBox23 = new GroupBox();
		groupBox33 = new GroupBox();
		脉冲 = new RadioButton();
		电平 = new RadioButton();
		输出方式读取 = new Button();
		输出方式设置 = new Button();
		groupBox12 = new GroupBox();
		强控设置 = new Button();
		强制合闸 = new RadioButton();
		强制调制 = new RadioButton();
		强控关 = new RadioButton();
		groupBox24 = new GroupBox();
		第二路通讯 = new RadioButton();
		主通讯 = new RadioButton();
		label145 = new Label();
		label85 = new Label();
		label83 = new Label();
		label81 = new Label();
		表号textBox = new TextBox();
		停止位comboBox = new ComboBox();
		校验位comboBox = new ComboBox();
		地址读取 = new Button();
		波特率comboBox = new ComboBox();
		地址textBox = new TextBox();
		地址设置 = new Button();
		groupBox11 = new GroupBox();
		label98 = new Label();
		FKState = new TextBox();
		BuyTime = new TextBox();
		label97 = new Label();
		设置预付费参数 = new Button();
		读取预付费参数 = new Button();
		label92 = new Label();
		PMAX = new TextBox();
		label90 = new Label();
		label91 = new Label();
		SQJE = new TextBox();
		SYJE = new TextBox();
		label57 = new Label();
		label60 = new Label();
		BJ1 = new TextBox();
		BJ2 = new TextBox();
		label55 = new Label();
		label53 = new Label();
		label48 = new Label();
		label37 = new Label();
		PriceF = new TextBox();
		PriceP = new TextBox();
		PriceG = new TextBox();
		PriceJ = new TextBox();
		groupBox18 = new GroupBox();
		groupBox91 = new GroupBox();
		DDSY = new RadioButton();
		DDSF = new RadioButton();
		groupBox27 = new GroupBox();
		内控 = new RadioButton();
		外控 = new RadioButton();
		groupBox30 = new GroupBox();
		无射频 = new RadioButton();
		有射频 = new RadioButton();
		groupBox22 = new GroupBox();
		红外 = new RadioButton();
		副通讯 = new RadioButton();
		groupBox21 = new GroupBox();
		单费率 = new RadioButton();
		复费率 = new RadioButton();
		groupBox45 = new GroupBox();
		checkBox3 = new CheckBox();
		checkBox4 = new CheckBox();
		运行状态读取 = new Button();
		groupBox44 = new GroupBox();
		radioButton3 = new RadioButton();
		radioButton4 = new RadioButton();
		radioButton5 = new RadioButton();
		groupBox35 = new GroupBox();
		三相四线 = new RadioButton();
		三相三线 = new RadioButton();
		groupBox20 = new GroupBox();
		电能脉冲 = new RadioButton();
		时钟脉冲 = new RadioButton();
		运行状态设置 = new Button();
		groupBox2 = new GroupBox();
		button1 = new Button();
		label30 = new Label();
		label31 = new Label();
		label36 = new Label();
		comboBoxEc = new ComboBox();
		comboBoxIb = new ComboBox();
		comboBoxUn = new ComboBox();
		增益 = new Button();
		初始化 = new Button();
		tabPage8 = new TabPage();
		groupBox39 = new GroupBox();
		连接状态值 = new Label();
		label203 = new Label();
		系统复位值 = new Label();
		button8 = new Button();
		IMEI号值 = new Label();
		label215 = new Label();
		接受次数值 = new Label();
		label213 = new Label();
		发送次数值 = new Label();
		label211 = new Label();
		CCID卡号值 = new Label();
		label208 = new Label();
		label206 = new Label();
		连接状态信号值 = new Label();
		label205 = new Label();
		软件版本号 = new Label();
		编号 = new Label();
		label199 = new Label();
		label198 = new Label();
		groupBox26 = new GroupBox();
		ADF300 = new RadioButton();
		DDSYDTSY = new RadioButton();
		ALMM8 = new TextBox();
		ALMM7 = new TextBox();
		ALMM6 = new TextBox();
		ALMM5 = new TextBox();
		LONG8 = new TextBox();
		LONG7 = new TextBox();
		LONG6 = new TextBox();
		LONG5 = new TextBox();
		Addr8 = new TextBox();
		Addr7 = new TextBox();
		Addr6 = new TextBox();
		Addr5 = new TextBox();
		button4 = new Button();
		button6 = new Button();
		ALMM4 = new TextBox();
		ALMM3 = new TextBox();
		ALMM2 = new TextBox();
		ALMM1 = new TextBox();
		label197 = new Label();
		LONG4 = new TextBox();
		LONG3 = new TextBox();
		LONG2 = new TextBox();
		LONG1 = new TextBox();
		label196 = new Label();
		Addr4 = new TextBox();
		Addr3 = new TextBox();
		Addr2 = new TextBox();
		Addr1 = new TextBox();
		label195 = new Label();
		TCP = new TextBox();
		label193 = new Label();
		告警段数量 = new TextBox();
		label194 = new Label();
		数据段数量 = new TextBox();
		label192 = new Label();
		设备数量 = new TextBox();
		label191 = new Label();
		域名 = new TextBox();
		labe端口l188 = new Label();
		协议模式 = new TextBox();
		label187 = new Label();
		端口号 = new TextBox();
		label190 = new Label();
		label189 = new Label();
		IP4 = new TextBox();
		IP3 = new TextBox();
		IP2 = new TextBox();
		label186 = new Label();
		IP1 = new TextBox();
		序列号 = new TextBox();
		label185 = new Label();
		label184 = new Label();
		label182 = new Label();
		数据上报间隔 = new TextBox();
		无线调制信息 = new TextBox();
		label183 = new Label();
		tabPage11 = new TabPage();
		设置DO = new Button();
		读取DIO = new Button();
		DO = new GroupBox();
		DO4checkBox = new CheckBox();
		DO3checkBox = new CheckBox();
		DO2checkBox = new CheckBox();
		DO1checkBox = new CheckBox();
		groupBox89 = new GroupBox();
		DI8checkBox = new CheckBox();
		DI4checkBox = new CheckBox();
		DI7checkBox = new CheckBox();
		DI3checkBox = new CheckBox();
		DI6checkBox = new CheckBox();
		DI2checkBox = new CheckBox();
		DI5checkBox = new CheckBox();
		DI1checkBox = new CheckBox();
		tabPage13 = new TabPage();
		groupBox95 = new GroupBox();
		序列号1 = new TextBox();
		label339 = new Label();
		无限信息设置 = new Button();
		无线信息读取 = new Button();
		域名1 = new TextBox();
		label335 = new Label();
		协议模式1 = new TextBox();
		label336 = new Label();
		端口号1 = new TextBox();
		label337 = new Label();
		IP44 = new TextBox();
		IP33 = new TextBox();
		IP22 = new TextBox();
		label338 = new Label();
		IP11 = new TextBox();
		groupBox94 = new GroupBox();
		label367 = new Label();
		label366 = new Label();
		label360 = new Label();
		cxzcycsj = new TextBox();
		label341 = new Label();
		label340 = new Label();
		comboBox2 = new ComboBox();
		comboBox1 = new ComboBox();
		setWIFI = new Button();
		readWIFI = new Button();
		WIFIsignal = new TextBox();
		MACaddress = new TextBox();
		WIFIpassword = new TextBox();
		WIFIname = new TextBox();
		label334 = new Label();
		label333 = new Label();
		label332 = new Label();
		label331 = new Label();
		label330 = new Label();
		label329 = new Label();
		tabPage14 = new TabPage();
		groupBox96 = new GroupBox();
		label688 = new Label();
		button80 = new Button();
		label689 = new Label();
		label690 = new Label();
		label691 = new Label();
		textBox199 = new TextBox();
		textBox201 = new TextBox();
		button82 = new Button();
		comboBox5 = new ComboBox();
		comboBox6 = new ComboBox();
		label692 = new Label();
		label693 = new Label();
		label694 = new Label();
		仪表型号 = new ComboBox();
		setZT2 = new Button();
		setZT1 = new Button();
		自注册IP = new TextBox();
		调试网站ip = new TextBox();
		label357 = new Label();
		setZhongtai = new Button();
		readZhongtai = new Button();
		zzcDKH = new TextBox();
		tswzDKH = new TextBox();
		ztXLH = new TextBox();
		密码 = new TextBox();
		用户名 = new TextBox();
		label355 = new Label();
		ztSBZQ = new TextBox();
		ztDKH = new TextBox();
		中台域名 = new TextBox();
		平台选择 = new ComboBox();
		中台EIOT协议模式 = new ComboBox();
		label354 = new Label();
		label353 = new Label();
		label352 = new Label();
		label351 = new Label();
		label350 = new Label();
		label349 = new Label();
		label348 = new Label();
		label347 = new Label();
		label346 = new Label();
		label345 = new Label();
		label344 = new Label();
		label343 = new Label();
		label342 = new Label();
		地址 = new TextBox();
		label86 = new Label();
		关闭串口 = new Button();
		读取数据 = new Button();
		labelGOOD = new Label();
		labelERROR = new Label();
		主轮抄定时器 = new Timer(components);
		透传定时器 = new Timer(components);
		timer3 = new Timer(components);
		groupBox92 = new GroupBox();
		button71 = new Button();
		button70 = new Button();
		label276 = new Label();
		心跳 = new TextBox();
		label277 = new Label();
		APN号 = new TextBox();
		APNOFF = new RadioButton();
		button23 = new Button();
		button20 = new Button();
		APNON = new RadioButton();
		label278 = new Label();
		((Control)menuStrip1).SuspendLayout();
		((Control)groupBox新增版).SuspendLayout();
		((Control)groupBox1).SuspendLayout();
		((Control)groupBox8).SuspendLayout();
		((Control)groupBox7).SuspendLayout();
		((Control)groupBox6).SuspendLayout();
		((Control)groupBox5).SuspendLayout();
		((Control)groupBox4).SuspendLayout();
		((Control)groupBox3).SuspendLayout();
		((Control)tabPage6).SuspendLayout();
		((Control)groupBox72).SuspendLayout();
		((Control)groupBox51).SuspendLayout();
		((Control)ADF参数设置).SuspendLayout();
		((Control)groupBox40).SuspendLayout();
		((Control)groupBox42).SuspendLayout();
		((Control)groupBox41).SuspendLayout();
		((Control)groupBox34).SuspendLayout();
		((Control)groupBox28).SuspendLayout();
		((Control)groupBoxChangePhaseType).SuspendLayout();
		((Control)groupBox47).SuspendLayout();
		((Control)groupBox46).SuspendLayout();
		((Control)tabPage5).SuspendLayout();
		((Control)groupBox16).SuspendLayout();
		((Control)groupBox17).SuspendLayout();
		((Control)groupBox19).SuspendLayout();
		((Control)tabPage4).SuspendLayout();
		((Control)groupBox14).SuspendLayout();
		((Control)groupBox38).SuspendLayout();
		((Control)groupBox37).SuspendLayout();
		((Control)groupBox36).SuspendLayout();
		((Control)groupBoxFL3).SuspendLayout();
		((Control)groupBoxFL2).SuspendLayout();
		((Control)groupBoxFL1).SuspendLayout();
		((Control)tabPage3).SuspendLayout();
		((Control)groupBox13).SuspendLayout();
		((Control)groupBox32).SuspendLayout();
		((Control)groupBoxL1).SuspendLayout();
		((Control)groupBox15).SuspendLayout();
		((Control)tabPage2).SuspendLayout();
		((Control)groupBox10).SuspendLayout();
		((Control)groupBox31).SuspendLayout();
		((Control)groupBox25).SuspendLayout();
		((Control)tabPage1).SuspendLayout();
		((Control)groupBox9).SuspendLayout();
		((Control)groupBox48).SuspendLayout();
		((Control)groupBox50).SuspendLayout();
		((Control)groupBox49).SuspendLayout();
		((Control)groupBox43).SuspendLayout();
		((Control)tabControl1).SuspendLayout();
		((Control)tabPage9).SuspendLayout();
		((Control)groupBox62).SuspendLayout();
		((Control)groupBox60).SuspendLayout();
		((Control)groupBox58).SuspendLayout();
		((Control)groupBox55).SuspendLayout();
		((Control)groupBox90).SuspendLayout();
		((Control)groupBox57).SuspendLayout();
		((Control)groupBox73).SuspendLayout();
		((Control)groupBox71).SuspendLayout();
		((Control)groupBox56).SuspendLayout();
		((Control)groupBox70).SuspendLayout();
		((Control)groupBox69).SuspendLayout();
		((Control)groupBox54).SuspendLayout();
		((Control)groupBox68).SuspendLayout();
		((Control)groupBox67).SuspendLayout();
		((Control)groupBox66).SuspendLayout();
		((Control)groupBox53).SuspendLayout();
		((Control)groupBox63).SuspendLayout();
		((Control)groupBox61).SuspendLayout();
		((Control)groupBox59).SuspendLayout();
		((Control)groupBox65).SuspendLayout();
		((Control)groupBox64).SuspendLayout();
		((Control)tabPage12).SuspendLayout();
		((Control)tabPage10).SuspendLayout();
		((Control)groupBox88).SuspendLayout();
		((Control)groupBox79).SuspendLayout();
		((Control)groupBox80).SuspendLayout();
		((Control)groupBox81).SuspendLayout();
		((Control)groupBox82).SuspendLayout();
		((Control)groupBox83).SuspendLayout();
		((Control)groupBox84).SuspendLayout();
		((Control)groupBox85).SuspendLayout();
		((Control)groupBox86).SuspendLayout();
		((Control)groupBox87).SuspendLayout();
		((Control)groupBox76).SuspendLayout();
		((Control)groupBox78).SuspendLayout();
		((Control)groupBox77).SuspendLayout();
		((Control)groupBox75).SuspendLayout();
		((Control)groupBox74).SuspendLayout();
		((Control)tabPage7).SuspendLayout();
		((Control)groupBox52).SuspendLayout();
		((Control)groupBox29).SuspendLayout();
		((Control)groupBox23).SuspendLayout();
		((Control)groupBox33).SuspendLayout();
		((Control)groupBox12).SuspendLayout();
		((Control)groupBox24).SuspendLayout();
		((Control)groupBox11).SuspendLayout();
		((Control)groupBox18).SuspendLayout();
		((Control)groupBox91).SuspendLayout();
		((Control)groupBox27).SuspendLayout();
		((Control)groupBox30).SuspendLayout();
		((Control)groupBox22).SuspendLayout();
		((Control)groupBox21).SuspendLayout();
		((Control)groupBox45).SuspendLayout();
		((Control)groupBox44).SuspendLayout();
		((Control)groupBox35).SuspendLayout();
		((Control)groupBox20).SuspendLayout();
		((Control)groupBox2).SuspendLayout();
		((Control)tabPage8).SuspendLayout();
		((Control)groupBox39).SuspendLayout();
		((Control)groupBox26).SuspendLayout();
		((Control)tabPage11).SuspendLayout();
		((Control)DO).SuspendLayout();
		((Control)groupBox89).SuspendLayout();
		((Control)tabPage13).SuspendLayout();
		((Control)groupBox95).SuspendLayout();
		((Control)groupBox94).SuspendLayout();
		((Control)tabPage14).SuspendLayout();
		((Control)groupBox96).SuspendLayout();
		((Control)groupBox92).SuspendLayout();
		((Control)this).SuspendLayout();
		((ToolStrip)menuStrip1).AllowItemReorder = true;
		((ToolStrip)menuStrip1).Items.AddRange((ToolStripItem[])(object)new ToolStripItem[2]
		{
			(ToolStripItem)toolStripMenuItem1,
			(ToolStripItem)toolStripMenuItem2
		});
		((Control)menuStrip1).Location = new Point(0, 0);
		((Control)menuStrip1).Name = "menuStrip1";
		((Control)menuStrip1).Size = new Size(1192, 25);
		((Control)menuStrip1).TabIndex = 0;
		((Control)menuStrip1).Text = "menuStrip1";
		((ToolStripDropDownItem)toolStripMenuItem1).DropDownItems.AddRange((ToolStripItem[])(object)new ToolStripItem[1] { (ToolStripItem)toolStripMenuItem3 });
		((ToolStripItem)toolStripMenuItem1).Name = "toolStripMenuItem1";
		((ToolStripItem)toolStripMenuItem1).Size = new Size(38, 21);
		((ToolStripItem)toolStripMenuItem1).Text = "Set";
		((ToolStripItem)toolStripMenuItem3).Name = "toolStripMenuItem3";
		((ToolStripItem)toolStripMenuItem3).Size = new Size(180, 22);
		((ToolStripItem)toolStripMenuItem3).Text = "Serial port setting";
		((ToolStripItem)toolStripMenuItem3).Click += toolStripMenuItem3_Click;
		((ToolStripItem)toolStripMenuItem2).Name = "toolStripMenuItem2";
		((ToolStripItem)toolStripMenuItem2).Size = new Size(47, 21);
		((ToolStripItem)toolStripMenuItem2).Text = "Help";
		((Control)groupBox新增版).BackColor = Color.Gainsboro;
		((Control)groupBox新增版).Controls.Add((Control)(object)型号);
		((Control)groupBox新增版).Controls.Add((Control)(object)需量时间);
		((Control)groupBox新增版).Controls.Add((Control)(object)label270);
		((Control)groupBox新增版).Controls.Add((Control)(object)最大需量);
		((Control)groupBox新增版).Controls.Add((Control)(object)版本号);
		((Control)groupBox新增版).Controls.Add((Control)(object)单三相状态);
		((Control)groupBox新增版).Controls.Add((Control)(object)最大回路数);
		((Control)groupBox新增版).Controls.Add((Control)(object)label79);
		((Control)groupBox新增版).Controls.Add((Control)(object)时间显示);
		((Control)groupBox新增版).Controls.Add((Control)(object)groupBox1);
		((Control)groupBox新增版).Controls.Add((Control)(object)label22);
		((Control)groupBox新增版).Controls.Add((Control)(object)基础电量);
		((Control)groupBox新增版).Controls.Add((Control)(object)label8);
		((Control)groupBox新增版).Controls.Add((Control)(object)允许次数);
		((Control)groupBox新增版).Controls.Add((Control)(object)label2);
		((Control)groupBox新增版).Controls.Add((Control)(object)负控次数);
		((Control)groupBox新增版).Controls.Add((Control)(object)label7);
		((Control)groupBox新增版).Controls.Add((Control)(object)总用电量);
		((Control)groupBox新增版).Controls.Add((Control)(object)label6);
		((Control)groupBox新增版).Controls.Add((Control)(object)谷电能);
		((Control)groupBox新增版).Controls.Add((Control)(object)label1);
		((Control)groupBox新增版).Controls.Add((Control)(object)平电能);
		((Control)groupBox新增版).Controls.Add((Control)(object)label21);
		((Control)groupBox新增版).Controls.Add((Control)(object)购电次数);
		((Control)groupBox新增版).Controls.Add((Control)(object)label19);
		((Control)groupBox新增版).Controls.Add((Control)(object)峰电能);
		((Control)groupBox新增版).Controls.Add((Control)(object)label18);
		((Control)groupBox新增版).Controls.Add((Control)(object)电流变比);
		((Control)groupBox新增版).Controls.Add((Control)(object)label15);
		((Control)groupBox新增版).Controls.Add((Control)(object)电压变比);
		((Control)groupBox新增版).Controls.Add((Control)(object)label16);
		((Control)groupBox新增版).Controls.Add((Control)(object)PFt);
		((Control)groupBox新增版).Controls.Add((Control)(object)label11);
		((Control)groupBox新增版).Controls.Add((Control)(object)PFc);
		((Control)groupBox新增版).Controls.Add((Control)(object)label13);
		((Control)groupBox新增版).Controls.Add((Control)(object)PFb);
		((Control)groupBox新增版).Controls.Add((Control)(object)label10);
		((Control)groupBox新增版).Controls.Add((Control)(object)Qc);
		((Control)groupBox新增版).Controls.Add((Control)(object)label84);
		((Control)groupBox新增版).Controls.Add((Control)(object)Qb);
		((Control)groupBox新增版).Controls.Add((Control)(object)label80);
		((Control)groupBox新增版).Controls.Add((Control)(object)Qa);
		((Control)groupBox新增版).Controls.Add((Control)(object)label76);
		((Control)groupBox新增版).Controls.Add((Control)(object)Pc);
		((Control)groupBox新增版).Controls.Add((Control)(object)label69);
		((Control)groupBox新增版).Controls.Add((Control)(object)Pb);
		((Control)groupBox新增版).Controls.Add((Control)(object)label65);
		((Control)groupBox新增版).Controls.Add((Control)(object)Pa);
		((Control)groupBox新增版).Controls.Add((Control)(object)label61);
		((Control)groupBox新增版).Controls.Add((Control)(object)剩余金额);
		((Control)groupBox新增版).Controls.Add((Control)(object)label35);
		((Control)groupBox新增版).Controls.Add((Control)(object)尖电能);
		((Control)groupBox新增版).Controls.Add((Control)(object)label34);
		((Control)groupBox新增版).Controls.Add((Control)(object)Ic);
		((Control)groupBox新增版).Controls.Add((Control)(object)label72);
		((Control)groupBox新增版).Controls.Add((Control)(object)Ib);
		((Control)groupBox新增版).Controls.Add((Control)(object)label71);
		((Control)groupBox新增版).Controls.Add((Control)(object)Uc);
		((Control)groupBox新增版).Controls.Add((Control)(object)label70);
		((Control)groupBox新增版).Controls.Add((Control)(object)Ub);
		((Control)groupBox新增版).Controls.Add((Control)(object)label59);
		((Control)groupBox新增版).Controls.Add((Control)(object)PFa);
		((Control)groupBox新增版).Controls.Add((Control)(object)label9);
		((Control)groupBox新增版).Controls.Add((Control)(object)Qt);
		((Control)groupBox新增版).Controls.Add((Control)(object)Pt);
		((Control)groupBox新增版).Controls.Add((Control)(object)Ia);
		((Control)groupBox新增版).Controls.Add((Control)(object)Ua);
		((Control)groupBox新增版).Controls.Add((Control)(object)label5);
		((Control)groupBox新增版).Controls.Add((Control)(object)label4);
		((Control)groupBox新增版).Controls.Add((Control)(object)label3);
		((Control)groupBox新增版).Controls.Add((Control)(object)label12);
		((Control)groupBox新增版).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox新增版).Location = new Point(9, 58);
		((Control)groupBox新增版).Margin = new Padding(2);
		((Control)groupBox新增版).Name = "groupBox新增版";
		((Control)groupBox新增版).Padding = new Padding(2);
		((Control)groupBox新增版).Size = new Size(563, 658);
		((Control)groupBox新增版).TabIndex = 12;
		groupBox新增版.TabStop = false;
		((Control)groupBox新增版).Text = "Monitoring data";
		((Control)型号).AutoSize = true;
		((Control)型号).ForeColor = Color.FromArgb(192, 64, 0);
		((Control)型号).Location = new Point(393, 310);
		((Control)型号).Margin = new Padding(2, 0, 2, 0);
		((Control)型号).Name = "型号";
		((Control)型号).Size = new Size(15, 16);
		((Control)型号).TabIndex = 198;
		((Control)型号).Text = ".";
		((Control)需量时间).AutoSize = true;
		((Control)需量时间).Location = new Point(184, 320);
		((Control)需量时间).Margin = new Padding(2, 0, 2, 0);
		((Control)需量时间).Name = "需量时间";
		((Control)需量时间).Size = new Size(15, 16);
		((Control)需量时间).TabIndex = 197;
		((Control)需量时间).Text = ".";
		((Control)label270).AutoSize = true;
		((Control)label270).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label270).Location = new Point(14, 315);
		((Control)label270).Margin = new Padding(2, 0, 2, 0);
		((Control)label270).Name = "label270";
		((Control)label270).Size = new Size(89, 12);
		((Control)label270).TabIndex = 196;
		((Control)label270).Text = "Maximum demand";
		((Control)最大需量).Location = new Point(107, 310);
		((Control)最大需量).Margin = new Padding(2);
		((Control)最大需量).Name = "最大需量";
		((TextBoxBase)最大需量).ReadOnly = true;
		((Control)最大需量).Size = new Size(70, 26);
		((Control)最大需量).TabIndex = 195;
		((Control)最大需量).Text = "0";
		((Control)版本号).AutoSize = true;
		((Control)版本号).ForeColor = Color.FromArgb(192, 64, 0);
		((Control)版本号).Location = new Point(445, 310);
		((Control)版本号).Margin = new Padding(2, 0, 2, 0);
		((Control)版本号).Name = "版本号";
		((Control)版本号).Size = new Size(15, 16);
		((Control)版本号).TabIndex = 191;
		((Control)版本号).Text = ".";
		((Control)单三相状态).AutoSize = true;
		((Control)单三相状态).ForeColor = Color.Red;
		((Control)单三相状态).Location = new Point(445, 362);
		((Control)单三相状态).Margin = new Padding(2, 0, 2, 0);
		((Control)单三相状态).Name = "单三相状态";
		((Control)单三相状态).Size = new Size(15, 16);
		((Control)单三相状态).TabIndex = 190;
		((Control)单三相状态).Text = ".";
		((Control)最大回路数).AutoSize = true;
		((Control)最大回路数).ForeColor = Color.ForestGreen;
		((Control)最大回路数).Location = new Point(445, 336);
		((Control)最大回路数).Margin = new Padding(2, 0, 2, 0);
		((Control)最大回路数).Name = "最大回路数";
		((Control)最大回路数).Size = new Size(15, 16);
		((Control)最大回路数).TabIndex = 189;
		((Control)最大回路数).Text = ".";
		((Control)label79).AutoSize = true;
		((Control)label79).Location = new Point(400, 354);
		((Control)label79).Margin = new Padding(2, 0, 2, 0);
		((Control)label79).Name = "label79";
		((Control)label79).Size = new Size(0, 16);
		((Control)label79).TabIndex = 188;
		((Control)时间显示).AutoSize = true;
		((Control)时间显示).ForeColor = SystemColors.HotTrack;
		((Control)时间显示).Location = new Point(88, 349);
		((Control)时间显示).Margin = new Padding(2, 0, 2, 0);
		((Control)时间显示).Name = "时间显示";
		((Control)时间显示).Size = new Size(15, 16);
		((Control)时间显示).TabIndex = 187;
		((Control)时间显示).Text = ".";
		((Control)groupBox1).Controls.Add((Control)(object)groupBox8);
		((Control)groupBox1).Controls.Add((Control)(object)groupBox7);
		((Control)groupBox1).Controls.Add((Control)(object)groupBox6);
		((Control)groupBox1).Controls.Add((Control)(object)groupBox5);
		((Control)groupBox1).Controls.Add((Control)(object)groupBox4);
		((Control)groupBox1).Controls.Add((Control)(object)groupBox3);
		((Control)groupBox1).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox1).Location = new Point(15, 379);
		((Control)groupBox1).Margin = new Padding(2);
		((Control)groupBox1).Name = "groupBox1";
		((Control)groupBox1).Padding = new Padding(2);
		((Control)groupBox1).Size = new Size(534, 212);
		((Control)groupBox1).TabIndex = 186;
		groupBox1.TabStop = false;
		((Control)groupBox1).Text = "Control status";
		((Control)groupBox8).Controls.Add((Control)(object)越限);
		((Control)groupBox8).Controls.Add((Control)(object)label62);
		((Control)groupBox8).Controls.Add((Control)(object)欠费);
		((Control)groupBox8).Controls.Add((Control)(object)label58);
		((Control)groupBox8).Controls.Add((Control)(object)ALM2);
		((Control)groupBox8).Controls.Add((Control)(object)label56);
		((Control)groupBox8).Controls.Add((Control)(object)ALM1);
		((Control)groupBox8).Controls.Add((Control)(object)label54);
		((Control)groupBox8).Controls.Add((Control)(object)label46);
		((Control)groupBox8).Controls.Add((Control)(object)label47);
		((Control)groupBox8).Controls.Add((Control)(object)故障);
		((Control)groupBox8).Controls.Add((Control)(object)label49);
		((Control)groupBox8).Controls.Add((Control)(object)label50);
		((Control)groupBox8).Controls.Add((Control)(object)label51);
		((Control)groupBox8).Controls.Add((Control)(object)label52);
		((Control)groupBox8).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox8).Location = new Point(16, 146);
		((Control)groupBox8).Margin = new Padding(2);
		((Control)groupBox8).Name = "groupBox8";
		((Control)groupBox8).Padding = new Padding(2);
		((Control)groupBox8).Size = new Size(502, 50);
		((Control)groupBox8).TabIndex = 16;
		groupBox8.TabStop = false;
		((Control)groupBox8).Text = "OFF ON";
		((Control)越限).AutoSize = true;
		((Control)越限).Location = new Point(477, 26);
		((Control)越限).Margin = new Padding(2, 0, 2, 0);
		((Control)越限).Name = "越限";
		((Control)越限).Size = new Size(21, 14);
		((Control)越限).TabIndex = 14;
		((Control)越限).Text = "**";
		((Control)label62).AutoSize = true;
		((Control)label62).Location = new Point(374, 26);
		((Control)label62).Margin = new Padding(2, 0, 2, 0);
		((Control)label62).Name = "label62";
		((Control)label62).Size = new Size(105, 14);
		((Control)label62).TabIndex = 13;
		((Control)label62).Text = "exceed limit：";
		((Control)欠费).AutoSize = true;
		((Control)欠费).Location = new Point(340, 26);
		((Control)欠费).Margin = new Padding(2, 0, 2, 0);
		((Control)欠费).Name = "欠费";
		((Control)欠费).Size = new Size(21, 14);
		((Control)欠费).TabIndex = 12;
		((Control)欠费).Text = "**";
		((Control)label58).AutoSize = true;
		((Control)label58).Location = new Point(290, 26);
		((Control)label58).Margin = new Padding(2, 0, 2, 0);
		((Control)label58).Name = "label58";
		((Control)label58).Size = new Size(70, 14);
		((Control)label58).TabIndex = 11;
		((Control)label58).Text = "Arrears：";
		((Control)ALM2).AutoSize = true;
		((Control)ALM2).Location = new Point(250, 26);
		((Control)ALM2).Margin = new Padding(2, 0, 2, 0);
		((Control)ALM2).Name = "ALM2";
		((Control)ALM2).Size = new Size(21, 14);
		((Control)ALM2).TabIndex = 10;
		((Control)ALM2).Text = "**";
		((Control)label56).AutoSize = true;
		((Control)label56).Location = new Point(198, 26);
		((Control)label56).Margin = new Padding(2, 0, 2, 0);
		((Control)label56).Name = "label56";
		((Control)label56).Size = new Size(49, 14);
		((Control)label56).TabIndex = 9;
		((Control)label56).Text = "ALM2：";
		((Control)ALM1).AutoSize = true;
		((Control)ALM1).Location = new Point(156, 28);
		((Control)ALM1).Margin = new Padding(2, 0, 2, 0);
		((Control)ALM1).Name = "ALM1";
		((Control)ALM1).Size = new Size(21, 14);
		((Control)ALM1).TabIndex = 8;
		((Control)ALM1).Text = "**";
		((Control)label54).AutoSize = true;
		((Control)label54).Location = new Point(106, 26);
		((Control)label54).Margin = new Padding(2, 0, 2, 0);
		((Control)label54).Name = "label54";
		((Control)label54).Size = new Size(49, 14);
		((Control)label54).TabIndex = 7;
		((Control)label54).Text = "ALM1：";
		((Control)label46).AutoSize = true;
		((Control)label46).Location = new Point(58, 67);
		((Control)label46).Margin = new Padding(2, 0, 2, 0);
		((Control)label46).Name = "label46";
		((Control)label46).Size = new Size(21, 14);
		((Control)label46).TabIndex = 6;
		((Control)label46).Text = "**";
		((Control)label47).AutoSize = true;
		((Control)label47).Location = new Point(58, 46);
		((Control)label47).Margin = new Padding(2, 0, 2, 0);
		((Control)label47).Name = "label47";
		((Control)label47).Size = new Size(0, 14);
		((Control)label47).TabIndex = 5;
		((Control)故障).AutoSize = true;
		((Control)故障).Location = new Point(58, 26);
		((Control)故障).Margin = new Padding(2, 0, 2, 0);
		((Control)故障).Name = "故障";
		((Control)故障).Size = new Size(21, 14);
		((Control)故障).TabIndex = 4;
		((Control)故障).Text = "**";
		((Control)label49).AutoSize = true;
		((Control)label49).Location = new Point(7, 86);
		((Control)label49).Margin = new Padding(2, 0, 2, 0);
		((Control)label49).Name = "label49";
		((Control)label49).Size = new Size(49, 14);
		((Control)label49).TabIndex = 3;
		((Control)label49).Text = "  L3：";
		((Control)label50).AutoSize = true;
		((Control)label50).Location = new Point(7, 66);
		((Control)label50).Margin = new Padding(2, 0, 2, 0);
		((Control)label50).Name = "label50";
		((Control)label50).Size = new Size(49, 14);
		((Control)label50).TabIndex = 2;
		((Control)label50).Text = "  L2：";
		((Control)label51).AutoSize = true;
		((Control)label51).Location = new Point(7, 46);
		((Control)label51).Margin = new Padding(2, 0, 2, 0);
		((Control)label51).Name = "label51";
		((Control)label51).Size = new Size(0, 14);
		((Control)label51).TabIndex = 1;
		((Control)label52).AutoSize = true;
		((Control)label52).Location = new Point(7, 26);
		((Control)label52).Margin = new Padding(2, 0, 2, 0);
		((Control)label52).Name = "label52";
		((Control)label52).Size = new Size(56, 14);
		((Control)label52).TabIndex = 0;
		((Control)label52).Text = "fault：";
		((Control)groupBox7).Controls.Add((Control)(object)L2);
		((Control)groupBox7).Controls.Add((Control)(object)L3);
		((Control)groupBox7).Controls.Add((Control)(object)L1);
		((Control)groupBox7).Controls.Add((Control)(object)label38);
		((Control)groupBox7).Controls.Add((Control)(object)label39);
		((Control)groupBox7).Controls.Add((Control)(object)label44);
		((Control)groupBox7).Controls.Add((Control)(object)label45);
		((Control)groupBox7).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox7).Location = new Point(16, 26);
		((Control)groupBox7).Margin = new Padding(2);
		((Control)groupBox7).Name = "groupBox7";
		((Control)groupBox7).Padding = new Padding(2);
		((Control)groupBox7).Size = new Size(92, 113);
		((Control)groupBox7).TabIndex = 14;
		groupBox7.TabStop = false;
		((Control)groupBox7).Text = "OFF ON";
		((Control)L2).AutoSize = true;
		((Control)L2).Location = new Point(51, 67);
		((Control)L2).Margin = new Padding(2, 0, 2, 0);
		((Control)L2).Name = "L2";
		((Control)L2).Size = new Size(21, 14);
		((Control)L2).TabIndex = 6;
		((Control)L2).Text = "**";
		((Control)L3).AutoSize = true;
		((Control)L3).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)L3).Location = new Point(52, 86);
		((Control)L3).Margin = new Padding(2, 0, 2, 0);
		((Control)L3).Name = "L3";
		((Control)L3).Size = new Size(21, 14);
		((Control)L3).TabIndex = 15;
		((Control)L3).Text = "**";
		((Control)L1).AutoSize = true;
		((Control)L1).Location = new Point(51, 46);
		((Control)L1).Margin = new Padding(2, 0, 2, 0);
		((Control)L1).Name = "L1";
		((Control)L1).Size = new Size(21, 14);
		((Control)L1).TabIndex = 5;
		((Control)L1).Text = "**";
		((Control)label38).AutoSize = true;
		((Control)label38).Location = new Point(4, 85);
		((Control)label38).Margin = new Padding(2, 0, 2, 0);
		((Control)label38).Name = "label38";
		((Control)label38).Size = new Size(49, 14);
		((Control)label38).TabIndex = 3;
		((Control)label38).Text = "  L3：";
		((Control)label39).AutoSize = true;
		((Control)label39).Location = new Point(4, 65);
		((Control)label39).Margin = new Padding(2, 0, 2, 0);
		((Control)label39).Name = "label39";
		((Control)label39).Size = new Size(49, 14);
		((Control)label39).TabIndex = 2;
		((Control)label39).Text = "  L2：";
		((Control)label44).AutoSize = true;
		((Control)label44).Location = new Point(4, 47);
		((Control)label44).Margin = new Padding(2, 0, 2, 0);
		((Control)label44).Name = "label44";
		((Control)label44).Size = new Size(49, 14);
		((Control)label44).TabIndex = 1;
		((Control)label44).Text = "  L1：";
		((Control)label45).AutoSize = true;
		((Control)label45).Location = new Point(7, 25);
		((Control)label45).Margin = new Padding(2, 0, 2, 0);
		((Control)label45).Name = "label45";
		((Control)label45).Size = new Size(56, 14);
		((Control)label45).TabIndex = 0;
		((Control)label45).Text = "State：";
		((Control)groupBox6).Controls.Add((Control)(object)ps2);
		((Control)groupBox6).Controls.Add((Control)(object)ps1);
		((Control)groupBox6).Controls.Add((Control)(object)ps3);
		((Control)groupBox6).Controls.Add((Control)(object)ps);
		((Control)groupBox6).Controls.Add((Control)(object)label40);
		((Control)groupBox6).Controls.Add((Control)(object)label41);
		((Control)groupBox6).Controls.Add((Control)(object)label42);
		((Control)groupBox6).Controls.Add((Control)(object)label43);
		((Control)groupBox6).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox6).Location = new Point(324, 26);
		((Control)groupBox6).Margin = new Padding(2);
		((Control)groupBox6).Name = "groupBox6";
		((Control)groupBox6).Padding = new Padding(2);
		((Control)groupBox6).Size = new Size(88, 113);
		((Control)groupBox6).TabIndex = 12;
		groupBox6.TabStop = false;
		((Control)groupBox6).Text = "Load control";
		((Control)ps2).AutoSize = true;
		((Control)ps2).Location = new Point(58, 67);
		((Control)ps2).Margin = new Padding(2, 0, 2, 0);
		((Control)ps2).Name = "ps2";
		((Control)ps2).Size = new Size(21, 14);
		((Control)ps2).TabIndex = 6;
		((Control)ps2).Text = "**";
		((Control)ps1).AutoSize = true;
		((Control)ps1).Location = new Point(58, 46);
		((Control)ps1).Margin = new Padding(2, 0, 2, 0);
		((Control)ps1).Name = "ps1";
		((Control)ps1).Size = new Size(21, 14);
		((Control)ps1).TabIndex = 5;
		((Control)ps1).Text = "**";
		((Control)ps3).AutoSize = true;
		((Control)ps3).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ps3).Location = new Point(58, 89);
		((Control)ps3).Margin = new Padding(2, 0, 2, 0);
		((Control)ps3).Name = "ps3";
		((Control)ps3).Size = new Size(21, 14);
		((Control)ps3).TabIndex = 13;
		((Control)ps3).Text = "**";
		((Control)ps).AutoSize = true;
		((Control)ps).Location = new Point(58, 26);
		((Control)ps).Margin = new Padding(2, 0, 2, 0);
		((Control)ps).Name = "ps";
		((Control)ps).Size = new Size(21, 14);
		((Control)ps).TabIndex = 4;
		((Control)ps).Text = "**";
		((Control)label40).AutoSize = true;
		((Control)label40).Location = new Point(7, 86);
		((Control)label40).Margin = new Padding(2, 0, 2, 0);
		((Control)label40).Name = "label40";
		((Control)label40).Size = new Size(49, 14);
		((Control)label40).TabIndex = 3;
		((Control)label40).Text = "  L3：";
		((Control)label41).AutoSize = true;
		((Control)label41).Location = new Point(7, 66);
		((Control)label41).Margin = new Padding(2, 0, 2, 0);
		((Control)label41).Name = "label41";
		((Control)label41).Size = new Size(49, 14);
		((Control)label41).TabIndex = 2;
		((Control)label41).Text = "  L2：";
		((Control)label42).AutoSize = true;
		((Control)label42).Location = new Point(7, 46);
		((Control)label42).Margin = new Padding(2, 0, 2, 0);
		((Control)label42).Name = "label42";
		((Control)label42).Size = new Size(49, 14);
		((Control)label42).TabIndex = 1;
		((Control)label42).Text = "  L1：";
		((Control)label43).AutoSize = true;
		((Control)label43).Location = new Point(7, 26);
		((Control)label43).Margin = new Padding(2, 0, 2, 0);
		((Control)label43).Name = "label43";
		((Control)label43).Size = new Size(56, 14);
		((Control)label43).TabIndex = 0;
		((Control)label43).Text = "State：";
		((Control)groupBox5).Controls.Add((Control)(object)ms2);
		((Control)groupBox5).Controls.Add((Control)(object)ms1);
		((Control)groupBox5).Controls.Add((Control)(object)ms3);
		((Control)groupBox5).Controls.Add((Control)(object)ms);
		((Control)groupBox5).Controls.Add((Control)(object)label32);
		((Control)groupBox5).Controls.Add((Control)(object)label33);
		((Control)groupBox5).Controls.Add((Control)(object)label14);
		((Control)groupBox5).Controls.Add((Control)(object)label17);
		((Control)groupBox5).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox5).Location = new Point(430, 25);
		((Control)groupBox5).Margin = new Padding(2);
		((Control)groupBox5).Name = "groupBox5";
		((Control)groupBox5).Padding = new Padding(2);
		((Control)groupBox5).Size = new Size(88, 113);
		((Control)groupBox5).TabIndex = 10;
		groupBox5.TabStop = false;
		((Control)groupBox5).Text = "Cost control";
		((Control)ms2).AutoSize = true;
		((Control)ms2).Location = new Point(58, 67);
		((Control)ms2).Margin = new Padding(2, 0, 2, 0);
		((Control)ms2).Name = "ms2";
		((Control)ms2).Size = new Size(21, 14);
		((Control)ms2).TabIndex = 6;
		((Control)ms2).Text = "**";
		((Control)ms1).AutoSize = true;
		((Control)ms1).Location = new Point(58, 46);
		((Control)ms1).Margin = new Padding(2, 0, 2, 0);
		((Control)ms1).Name = "ms1";
		((Control)ms1).Size = new Size(21, 14);
		((Control)ms1).TabIndex = 5;
		((Control)ms1).Text = "**";
		((Control)ms3).AutoSize = true;
		((Control)ms3).Location = new Point(58, 86);
		((Control)ms3).Margin = new Padding(2, 0, 2, 0);
		((Control)ms3).Name = "ms3";
		((Control)ms3).Size = new Size(21, 14);
		((Control)ms3).TabIndex = 11;
		((Control)ms3).Text = "**";
		((Control)ms).AutoSize = true;
		((Control)ms).Location = new Point(58, 26);
		((Control)ms).Margin = new Padding(2, 0, 2, 0);
		((Control)ms).Name = "ms";
		((Control)ms).Size = new Size(21, 14);
		((Control)ms).TabIndex = 4;
		((Control)ms).Text = "**";
		((Control)label32).AutoSize = true;
		((Control)label32).Location = new Point(7, 86);
		((Control)label32).Margin = new Padding(2, 0, 2, 0);
		((Control)label32).Name = "label32";
		((Control)label32).Size = new Size(49, 14);
		((Control)label32).TabIndex = 3;
		((Control)label32).Text = "  L3：";
		((Control)label33).AutoSize = true;
		((Control)label33).Location = new Point(7, 66);
		((Control)label33).Margin = new Padding(2, 0, 2, 0);
		((Control)label33).Name = "label33";
		((Control)label33).Size = new Size(49, 14);
		((Control)label33).TabIndex = 2;
		((Control)label33).Text = "  L2：";
		((Control)label14).AutoSize = true;
		((Control)label14).Location = new Point(7, 46);
		((Control)label14).Margin = new Padding(2, 0, 2, 0);
		((Control)label14).Name = "label14";
		((Control)label14).Size = new Size(49, 14);
		((Control)label14).TabIndex = 1;
		((Control)label14).Text = "  L1：";
		((Control)label17).AutoSize = true;
		((Control)label17).Location = new Point(7, 26);
		((Control)label17).Margin = new Padding(2, 0, 2, 0);
		((Control)label17).Name = "label17";
		((Control)label17).Size = new Size(56, 14);
		((Control)label17).TabIndex = 0;
		((Control)label17).Text = "State：";
		((Control)groupBox4).Controls.Add((Control)(object)ts2);
		((Control)groupBox4).Controls.Add((Control)(object)ts1);
		((Control)groupBox4).Controls.Add((Control)(object)ts);
		((Control)groupBox4).Controls.Add((Control)(object)label24);
		((Control)groupBox4).Controls.Add((Control)(object)ts3);
		((Control)groupBox4).Controls.Add((Control)(object)label25);
		((Control)groupBox4).Controls.Add((Control)(object)label26);
		((Control)groupBox4).Controls.Add((Control)(object)label27);
		((Control)groupBox4).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox4).Location = new Point(220, 26);
		((Control)groupBox4).Margin = new Padding(2);
		((Control)groupBox4).Name = "groupBox4";
		((Control)groupBox4).Padding = new Padding(2);
		((Control)groupBox4).Size = new Size(88, 113);
		((Control)groupBox4).TabIndex = 8;
		groupBox4.TabStop = false;
		((Control)groupBox4).Text = "Time control";
		((Control)ts2).AutoSize = true;
		((Control)ts2).Location = new Point(58, 67);
		((Control)ts2).Margin = new Padding(2, 0, 2, 0);
		((Control)ts2).Name = "ts2";
		((Control)ts2).Size = new Size(21, 14);
		((Control)ts2).TabIndex = 6;
		((Control)ts2).Text = "**";
		((Control)ts1).AutoSize = true;
		((Control)ts1).Location = new Point(58, 46);
		((Control)ts1).Margin = new Padding(2, 0, 2, 0);
		((Control)ts1).Name = "ts1";
		((Control)ts1).Size = new Size(21, 14);
		((Control)ts1).TabIndex = 5;
		((Control)ts1).Text = "**";
		((Control)ts).AutoSize = true;
		((Control)ts).Location = new Point(58, 26);
		((Control)ts).Margin = new Padding(2, 0, 2, 0);
		((Control)ts).Name = "ts";
		((Control)ts).Size = new Size(21, 14);
		((Control)ts).TabIndex = 4;
		((Control)ts).Text = "**";
		((Control)label24).AutoSize = true;
		((Control)label24).Location = new Point(7, 86);
		((Control)label24).Margin = new Padding(2, 0, 2, 0);
		((Control)label24).Name = "label24";
		((Control)label24).Size = new Size(49, 14);
		((Control)label24).TabIndex = 3;
		((Control)label24).Text = "  L3：";
		((Control)ts3).AutoSize = true;
		((Control)ts3).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ts3).Location = new Point(58, 88);
		((Control)ts3).Margin = new Padding(2, 0, 2, 0);
		((Control)ts3).Name = "ts3";
		((Control)ts3).Size = new Size(21, 14);
		((Control)ts3).TabIndex = 9;
		((Control)ts3).Text = "**";
		((Control)label25).AutoSize = true;
		((Control)label25).Location = new Point(7, 66);
		((Control)label25).Margin = new Padding(2, 0, 2, 0);
		((Control)label25).Name = "label25";
		((Control)label25).Size = new Size(49, 14);
		((Control)label25).TabIndex = 2;
		((Control)label25).Text = "  L2：";
		((Control)label26).AutoSize = true;
		((Control)label26).Location = new Point(7, 46);
		((Control)label26).Margin = new Padding(2, 0, 2, 0);
		((Control)label26).Name = "label26";
		((Control)label26).Size = new Size(49, 14);
		((Control)label26).TabIndex = 1;
		((Control)label26).Text = "  L1：";
		((Control)label27).AutoSize = true;
		((Control)label27).Location = new Point(7, 26);
		((Control)label27).Margin = new Padding(2, 0, 2, 0);
		((Control)label27).Name = "label27";
		((Control)label27).Size = new Size(56, 14);
		((Control)label27).TabIndex = 0;
		((Control)label27).Text = "State：";
		((Control)groupBox3).Controls.Add((Control)(object)fs2);
		((Control)groupBox3).Controls.Add((Control)(object)fs1);
		((Control)groupBox3).Controls.Add((Control)(object)fs);
		((Control)groupBox3).Controls.Add((Control)(object)label20);
		((Control)groupBox3).Controls.Add((Control)(object)label23);
		((Control)groupBox3).Controls.Add((Control)(object)fs3);
		((Control)groupBox3).Controls.Add((Control)(object)label28);
		((Control)groupBox3).Controls.Add((Control)(object)label29);
		((Control)groupBox3).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox3).Location = new Point(115, 26);
		((Control)groupBox3).Margin = new Padding(2);
		((Control)groupBox3).Name = "groupBox3";
		((Control)groupBox3).Padding = new Padding(2);
		((Control)groupBox3).Size = new Size(88, 113);
		((Control)groupBox3).TabIndex = 0;
		groupBox3.TabStop = false;
		((Control)groupBox3).Text = "Forced control";
		((Control)fs2).AutoSize = true;
		((Control)fs2).Location = new Point(58, 67);
		((Control)fs2).Margin = new Padding(2, 0, 2, 0);
		((Control)fs2).Name = "fs2";
		((Control)fs2).Size = new Size(21, 14);
		((Control)fs2).TabIndex = 6;
		((Control)fs2).Text = "**";
		((Control)fs1).AutoSize = true;
		((Control)fs1).Location = new Point(58, 46);
		((Control)fs1).Margin = new Padding(2, 0, 2, 0);
		((Control)fs1).Name = "fs1";
		((Control)fs1).Size = new Size(21, 14);
		((Control)fs1).TabIndex = 5;
		((Control)fs1).Text = "**";
		((Control)fs).AutoSize = true;
		((Control)fs).Location = new Point(58, 26);
		((Control)fs).Margin = new Padding(2, 0, 2, 0);
		((Control)fs).Name = "fs";
		((Control)fs).Size = new Size(21, 14);
		((Control)fs).TabIndex = 4;
		((Control)fs).Text = "**";
		((Control)label20).AutoSize = true;
		((Control)label20).Location = new Point(7, 86);
		((Control)label20).Margin = new Padding(2, 0, 2, 0);
		((Control)label20).Name = "label20";
		((Control)label20).Size = new Size(49, 14);
		((Control)label20).TabIndex = 3;
		((Control)label20).Text = "  L3：";
		((Control)label23).AutoSize = true;
		((Control)label23).Location = new Point(7, 66);
		((Control)label23).Margin = new Padding(2, 0, 2, 0);
		((Control)label23).Name = "label23";
		((Control)label23).Size = new Size(49, 14);
		((Control)label23).TabIndex = 2;
		((Control)label23).Text = "  L2：";
		((Control)fs3).AutoSize = true;
		((Control)fs3).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)fs3).Location = new Point(57, 88);
		((Control)fs3).Margin = new Padding(2, 0, 2, 0);
		((Control)fs3).Name = "fs3";
		((Control)fs3).Size = new Size(21, 14);
		((Control)fs3).TabIndex = 7;
		((Control)fs3).Text = "**";
		((Control)label28).AutoSize = true;
		((Control)label28).Location = new Point(7, 46);
		((Control)label28).Margin = new Padding(2, 0, 2, 0);
		((Control)label28).Name = "label28";
		((Control)label28).Size = new Size(49, 14);
		((Control)label28).TabIndex = 1;
		((Control)label28).Text = "  L1：";
		((Control)label29).AutoSize = true;
		((Control)label29).Location = new Point(7, 26);
		((Control)label29).Margin = new Padding(2, 0, 2, 0);
		((Control)label29).Name = "label29";
		((Control)label29).Size = new Size(56, 14);
		((Control)label29).TabIndex = 0;
		((Control)label29).Text = "State：";
		((Control)label22).AutoSize = true;
		((Control)label22).Location = new Point(13, 349);
		((Control)label22).Margin = new Padding(2, 0, 2, 0);
		((Control)label22).Name = "label22";
		((Control)label22).Size = new Size(79, 16);
		((Control)label22).TabIndex = 185;
		((Control)label22).Text = "Date time";
		((Control)基础电量).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)基础电量).Location = new Point(459, 57);
		((Control)基础电量).Margin = new Padding(2);
		((Control)基础电量).Name = "基础电量";
		((TextBoxBase)基础电量).ReadOnly = true;
		((Control)基础电量).Size = new Size(94, 21);
		((Control)基础电量).TabIndex = 181;
		((Control)基础电量).Text = "0";
		((Control)label8).AutoSize = true;
		((Control)label8).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label8).Location = new Point(348, 62);
		((Control)label8).Margin = new Padding(2, 0, 2, 0);
		((Control)label8).Name = "label8";
		((Control)label8).Size = new Size(107, 12);
		((Control)label8).TabIndex = 180;
		((Control)label8).Text = "Basic electricity";
		((Control)允许次数).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)允许次数).Location = new Point(300, 276);
		((Control)允许次数).Margin = new Padding(2);
		((Control)允许次数).Name = "允许次数";
		((TextBoxBase)允许次数).ReadOnly = true;
		((Control)允许次数).Size = new Size(70, 21);
		((Control)允许次数).TabIndex = 179;
		((Control)允许次数).Text = "0";
		((Control)label2).AutoSize = true;
		((Control)label2).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label2).Location = new Point(202, 279);
		((Control)label2).Margin = new Padding(2, 0, 2, 0);
		((Control)label2).Name = "label2";
		((Control)label2).Size = new Size(89, 12);
		((Control)label2).TabIndex = 178;
		((Control)label2).Text = " times allowed";
		((Control)负控次数).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)负控次数).Location = new Point(130, 275);
		((Control)负控次数).Margin = new Padding(2);
		((Control)负控次数).Name = "负控次数";
		((TextBoxBase)负控次数).ReadOnly = true;
		((Control)负控次数).Size = new Size(70, 21);
		((Control)负控次数).TabIndex = 177;
		((Control)负控次数).Text = "0";
		((Control)label7).AutoSize = true;
		((Control)label7).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label7).Location = new Point(14, 278);
		((Control)label7).Margin = new Padding(2, 0, 2, 0);
		((Control)label7).Name = "label7";
		((Control)label7).Size = new Size(113, 12);
		((Control)label7).TabIndex = 176;
		((Control)label7).Text = "Load control times";
		((Control)总用电量).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)总用电量).Location = new Point(262, 202);
		((Control)总用电量).Margin = new Padding(2);
		((Control)总用电量).Name = "总用电量";
		((TextBoxBase)总用电量).ReadOnly = true;
		((Control)总用电量).Size = new Size(70, 21);
		((Control)总用电量).TabIndex = 175;
		((Control)总用电量).Text = "0";
		((Control)label6).AutoSize = true;
		((Control)label6).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label6).Location = new Point(233, 202);
		((Control)label6).Margin = new Padding(2, 0, 2, 0);
		((Control)label6).Name = "label6";
		((Control)label6).Size = new Size(23, 12);
		((Control)label6).TabIndex = 174;
		((Control)label6).Text = "EPT";
		((Control)谷电能).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)谷电能).Location = new Point(396, 240);
		((Control)谷电能).Margin = new Padding(2);
		((Control)谷电能).Name = "谷电能";
		((TextBoxBase)谷电能).ReadOnly = true;
		((Control)谷电能).Size = new Size(70, 21);
		((Control)谷电能).TabIndex = 171;
		((Control)谷电能).Text = "0";
		((Control)label1).AutoSize = true;
		((Control)label1).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label1).Location = new Point(358, 242);
		((Control)label1).Margin = new Padding(2, 0, 2, 0);
		((Control)label1).Name = "label1";
		((Control)label1).Size = new Size(23, 12);
		((Control)label1).TabIndex = 170;
		((Control)label1).Text = "EPG";
		((Control)平电能).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)平电能).Location = new Point(262, 240);
		((Control)平电能).Margin = new Padding(2);
		((Control)平电能).Name = "平电能";
		((TextBoxBase)平电能).ReadOnly = true;
		((Control)平电能).Size = new Size(70, 21);
		((Control)平电能).TabIndex = 169;
		((Control)平电能).Text = "0";
		((Control)label21).AutoSize = true;
		((Control)label21).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label21).Location = new Point(233, 242);
		((Control)label21).Margin = new Padding(2, 0, 2, 0);
		((Control)label21).Name = "label21";
		((Control)label21).Size = new Size(23, 12);
		((Control)label21).TabIndex = 168;
		((Control)label21).Text = "EPP";
		((Control)购电次数).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)购电次数).Location = new Point(473, 277);
		((Control)购电次数).Margin = new Padding(2);
		((Control)购电次数).Name = "购电次数";
		((TextBoxBase)购电次数).ReadOnly = true;
		((Control)购电次数).Size = new Size(70, 21);
		((Control)购电次数).TabIndex = 165;
		((Control)购电次数).Text = "0";
		((Control)label19).AutoSize = true;
		((Control)label19).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label19).Location = new Point(377, 281);
		((Control)label19).Margin = new Padding(2, 0, 2, 0);
		((Control)label19).Name = "label19";
		((Control)label19).Size = new Size(89, 12);
		((Control)label19).TabIndex = 164;
		((Control)label19).Text = "purchase times";
		((Control)峰电能).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)峰电能).Location = new Point(146, 240);
		((Control)峰电能).Margin = new Padding(2);
		((Control)峰电能).Name = "峰电能";
		((TextBoxBase)峰电能).ReadOnly = true;
		((Control)峰电能).Size = new Size(70, 21);
		((Control)峰电能).TabIndex = 163;
		((Control)峰电能).Text = "0";
		((Control)label18).AutoSize = true;
		((Control)label18).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label18).Location = new Point(122, 242);
		((Control)label18).Margin = new Padding(2, 0, 2, 0);
		((Control)label18).Name = "label18";
		((Control)label18).Size = new Size(23, 12);
		((Control)label18).TabIndex = 162;
		((Control)label18).Text = "EPF";
		((Control)电流变比).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)电流变比).Location = new Point(146, 202);
		((Control)电流变比).Margin = new Padding(2);
		((Control)电流变比).Name = "电流变比";
		((TextBoxBase)电流变比).ReadOnly = true;
		((Control)电流变比).Size = new Size(70, 21);
		((Control)电流变比).TabIndex = 157;
		((Control)电流变比).Text = "0";
		((Control)label15).AutoSize = true;
		((Control)label15).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label15).Location = new Point(122, 202);
		((Control)label15).Margin = new Padding(2, 0, 2, 0);
		((Control)label15).Name = "label15";
		((Control)label15).Size = new Size(29, 12);
		((Control)label15).TabIndex = 156;
		((Control)label15).Text = "CT  ";
		((Control)电压变比).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)电压变比).Location = new Point(38, 202);
		((Control)电压变比).Margin = new Padding(2);
		((Control)电压变比).Name = "电压变比";
		((TextBoxBase)电压变比).ReadOnly = true;
		((Control)电压变比).Size = new Size(70, 21);
		((Control)电压变比).TabIndex = 155;
		((Control)电压变比).Text = "0";
		((Control)label16).AutoSize = true;
		((Control)label16).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label16).Location = new Point(14, 202);
		((Control)label16).Margin = new Padding(2, 0, 2, 0);
		((Control)label16).Name = "label16";
		((Control)label16).Size = new Size(17, 12);
		((Control)label16).TabIndex = 154;
		((Control)label16).Text = "PT";
		((Control)PFt).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PFt).Location = new Point(407, 166);
		((Control)PFt).Margin = new Padding(2);
		((Control)PFt).Name = "PFt";
		((TextBoxBase)PFt).ReadOnly = true;
		((Control)PFt).Size = new Size(70, 21);
		((Control)PFt).TabIndex = 153;
		((Control)PFt).Text = "0";
		((Control)label11).AutoSize = true;
		((Control)label11).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label11).Location = new Point(354, 166);
		((Control)label11).Margin = new Padding(2, 0, 2, 0);
		((Control)label11).Name = "label11";
		((Control)label11).Size = new Size(53, 12);
		((Control)label11).TabIndex = 152;
		((Control)label11).Text = "PF total";
		((Control)PFc).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PFc).Location = new Point(262, 166);
		((Control)PFc).Margin = new Padding(2);
		((Control)PFc).Name = "PFc";
		((TextBoxBase)PFc).ReadOnly = true;
		((Control)PFc).Size = new Size(70, 21);
		((Control)PFc).TabIndex = 151;
		((Control)PFc).Text = "0";
		((Control)label13).AutoSize = true;
		((Control)label13).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label13).Location = new Point(233, 166);
		((Control)label13).Margin = new Padding(2, 0, 2, 0);
		((Control)label13).Name = "label13";
		((Control)label13).Size = new Size(23, 12);
		((Control)label13).TabIndex = 150;
		((Control)label13).Text = "PFc";
		((Control)PFb).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PFb).Location = new Point(146, 166);
		((Control)PFb).Margin = new Padding(2);
		((Control)PFb).Name = "PFb";
		((TextBoxBase)PFb).ReadOnly = true;
		((Control)PFb).Size = new Size(70, 21);
		((Control)PFb).TabIndex = 149;
		((Control)PFb).Text = "0";
		((Control)label10).AutoSize = true;
		((Control)label10).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label10).Location = new Point(122, 166);
		((Control)label10).Margin = new Padding(2, 0, 2, 0);
		((Control)label10).Name = "label10";
		((Control)label10).Size = new Size(23, 12);
		((Control)label10).TabIndex = 148;
		((Control)label10).Text = "PFb";
		((Control)Qc).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Qc).Location = new Point(259, 130);
		((Control)Qc).Margin = new Padding(2);
		((Control)Qc).Name = "Qc";
		((TextBoxBase)Qc).ReadOnly = true;
		((Control)Qc).Size = new Size(70, 21);
		((Control)Qc).TabIndex = 139;
		((Control)Qc).Text = "0";
		((Control)label84).AutoSize = true;
		((Control)label84).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label84).Location = new Point(233, 130);
		((Control)label84).Margin = new Padding(2, 0, 2, 0);
		((Control)label84).Name = "label84";
		((Control)label84).Size = new Size(17, 12);
		((Control)label84).TabIndex = 138;
		((Control)label84).Text = "Qc";
		((Control)Qb).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Qb).Location = new Point(146, 130);
		((Control)Qb).Margin = new Padding(2);
		((Control)Qb).Name = "Qb";
		((TextBoxBase)Qb).ReadOnly = true;
		((Control)Qb).Size = new Size(70, 21);
		((Control)Qb).TabIndex = 131;
		((Control)Qb).Text = "0";
		((Control)label80).AutoSize = true;
		((Control)label80).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label80).Location = new Point(124, 130);
		((Control)label80).Margin = new Padding(2, 0, 2, 0);
		((Control)label80).Name = "label80";
		((Control)label80).Size = new Size(17, 12);
		((Control)label80).TabIndex = 130;
		((Control)label80).Text = "Qb";
		((Control)Qa).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Qa).Location = new Point(40, 130);
		((Control)Qa).Margin = new Padding(2);
		((Control)Qa).Name = "Qa";
		((TextBoxBase)Qa).ReadOnly = true;
		((Control)Qa).Size = new Size(70, 21);
		((Control)Qa).TabIndex = 123;
		((Control)Qa).Text = "0";
		((Control)label76).AutoSize = true;
		((Control)label76).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label76).Location = new Point(14, 130);
		((Control)label76).Margin = new Padding(2, 0, 2, 0);
		((Control)label76).Name = "label76";
		((Control)label76).Size = new Size(17, 12);
		((Control)label76).TabIndex = 122;
		((Control)label76).Text = "Qa";
		((Control)Pc).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Pc).Location = new Point(259, 94);
		((Control)Pc).Margin = new Padding(2);
		((Control)Pc).Name = "Pc";
		((TextBoxBase)Pc).ReadOnly = true;
		((Control)Pc).Size = new Size(70, 21);
		((Control)Pc).TabIndex = 115;
		((Control)Pc).Text = "0";
		((Control)label69).AutoSize = true;
		((Control)label69).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label69).Location = new Point(233, 96);
		((Control)label69).Margin = new Padding(2, 0, 2, 0);
		((Control)label69).Name = "label69";
		((Control)label69).Size = new Size(17, 12);
		((Control)label69).TabIndex = 114;
		((Control)label69).Text = "Pc";
		((Control)Pb).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Pb).Location = new Point(146, 94);
		((Control)Pb).Margin = new Padding(2);
		((Control)Pb).Name = "Pb";
		((TextBoxBase)Pb).ReadOnly = true;
		((Control)Pb).Size = new Size(70, 21);
		((Control)Pb).TabIndex = 107;
		((Control)Pb).Text = "0";
		((Control)label65).AutoSize = true;
		((Control)label65).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label65).Location = new Point(124, 96);
		((Control)label65).Margin = new Padding(2, 0, 2, 0);
		((Control)label65).Name = "label65";
		((Control)label65).Size = new Size(17, 12);
		((Control)label65).TabIndex = 106;
		((Control)label65).Text = "Pb";
		((Control)Pa).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Pa).Location = new Point(40, 94);
		((Control)Pa).Margin = new Padding(2);
		((Control)Pa).Name = "Pa";
		((TextBoxBase)Pa).ReadOnly = true;
		((Control)Pa).Size = new Size(70, 21);
		((Control)Pa).TabIndex = 99;
		((Control)Pa).Text = "0";
		((Control)label61).AutoSize = true;
		((Control)label61).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label61).Location = new Point(14, 96);
		((Control)label61).Margin = new Padding(2, 0, 2, 0);
		((Control)label61).Name = "label61";
		((Control)label61).Size = new Size(17, 12);
		((Control)label61).TabIndex = 98;
		((Control)label61).Text = "Pa";
		((Control)剩余金额).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)剩余金额).Location = new Point(459, 22);
		((Control)剩余金额).Margin = new Padding(2);
		((Control)剩余金额).Name = "剩余金额";
		((TextBoxBase)剩余金额).ReadOnly = true;
		((Control)剩余金额).Size = new Size(94, 21);
		((Control)剩余金额).TabIndex = 85;
		((Control)剩余金额).Text = "0";
		((Control)label35).AutoSize = true;
		((Control)label35).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label35).Location = new Point(350, 26);
		((Control)label35).Margin = new Padding(2, 0, 2, 0);
		((Control)label35).Name = "label35";
		((Control)label35).Size = new Size(101, 12);
		((Control)label35).TabIndex = 84;
		((Control)label35).Text = "Remaining amount";
		((Control)尖电能).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)尖电能).Location = new Point(34, 240);
		((Control)尖电能).Margin = new Padding(2);
		((Control)尖电能).Name = "尖电能";
		((TextBoxBase)尖电能).ReadOnly = true;
		((Control)尖电能).Size = new Size(70, 21);
		((Control)尖电能).TabIndex = 83;
		((Control)尖电能).Text = "0";
		((Control)label34).AutoSize = true;
		((Control)label34).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label34).Location = new Point(14, 242);
		((Control)label34).Margin = new Padding(2, 0, 2, 0);
		((Control)label34).Name = "label34";
		((Control)label34).Size = new Size(23, 12);
		((Control)label34).TabIndex = 82;
		((Control)label34).Text = "EPJ";
		((Control)Ic).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Ic).Location = new Point(262, 58);
		((Control)Ic).Margin = new Padding(2);
		((Control)Ic).Name = "Ic";
		((TextBoxBase)Ic).ReadOnly = true;
		((Control)Ic).Size = new Size(70, 21);
		((Control)Ic).TabIndex = 27;
		((Control)Ic).Text = "0";
		((Control)label72).AutoSize = true;
		((Control)label72).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label72).Location = new Point(233, 62);
		((Control)label72).Margin = new Padding(2, 0, 2, 0);
		((Control)label72).Name = "label72";
		((Control)label72).Size = new Size(17, 12);
		((Control)label72).TabIndex = 26;
		((Control)label72).Text = "Ic";
		((Control)Ib).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Ib).Location = new Point(146, 58);
		((Control)Ib).Margin = new Padding(2);
		((Control)Ib).Name = "Ib";
		((TextBoxBase)Ib).ReadOnly = true;
		((Control)Ib).Size = new Size(70, 21);
		((Control)Ib).TabIndex = 25;
		((Control)Ib).Text = "0";
		((Control)label71).AutoSize = true;
		((Control)label71).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label71).Location = new Point(122, 62);
		((Control)label71).Margin = new Padding(2, 0, 2, 0);
		((Control)label71).Name = "label71";
		((Control)label71).Size = new Size(17, 12);
		((Control)label71).TabIndex = 24;
		((Control)label71).Text = "Ib";
		((Control)Uc).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Uc).Location = new Point(262, 24);
		((Control)Uc).Margin = new Padding(2);
		((Control)Uc).Name = "Uc";
		((TextBoxBase)Uc).ReadOnly = true;
		((Control)Uc).Size = new Size(70, 21);
		((Control)Uc).TabIndex = 23;
		((Control)Uc).Text = "0";
		((Control)label70).AutoSize = true;
		((Control)label70).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label70).Location = new Point(233, 26);
		((Control)label70).Margin = new Padding(2, 0, 2, 0);
		((Control)label70).Name = "label70";
		((Control)label70).Size = new Size(17, 12);
		((Control)label70).TabIndex = 22;
		((Control)label70).Text = "Uc";
		((Control)Ub).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Ub).Location = new Point(146, 24);
		((Control)Ub).Margin = new Padding(2);
		((Control)Ub).Name = "Ub";
		((TextBoxBase)Ub).ReadOnly = true;
		((Control)Ub).Size = new Size(70, 21);
		((Control)Ub).TabIndex = 21;
		((Control)Ub).Text = "0";
		((Control)label59).AutoSize = true;
		((Control)label59).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label59).Location = new Point(122, 26);
		((Control)label59).Margin = new Padding(2, 0, 2, 0);
		((Control)label59).Name = "label59";
		((Control)label59).Size = new Size(17, 12);
		((Control)label59).TabIndex = 20;
		((Control)label59).Text = "Ub";
		((Control)PFa).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PFa).Location = new Point(41, 166);
		((Control)PFa).Margin = new Padding(2);
		((Control)PFa).Name = "PFa";
		((TextBoxBase)PFa).ReadOnly = true;
		((Control)PFa).Size = new Size(70, 21);
		((Control)PFa).TabIndex = 12;
		((Control)PFa).Text = "0";
		((Control)label9).AutoSize = true;
		((Control)label9).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label9).Location = new Point(14, 166);
		((Control)label9).Margin = new Padding(2, 0, 2, 0);
		((Control)label9).Name = "label9";
		((Control)label9).Size = new Size(23, 12);
		((Control)label9).TabIndex = 8;
		((Control)label9).Text = "PFa";
		((Control)Qt).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Qt).Location = new Point(406, 127);
		((Control)Qt).Margin = new Padding(2);
		((Control)Qt).Name = "Qt";
		((TextBoxBase)Qt).ReadOnly = true;
		((Control)Qt).Size = new Size(70, 21);
		((Control)Qt).TabIndex = 7;
		((Control)Qt).Text = "0";
		((Control)Pt).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Pt).Location = new Point(408, 94);
		((Control)Pt).Margin = new Padding(2);
		((Control)Pt).Name = "Pt";
		((TextBoxBase)Pt).ReadOnly = true;
		((Control)Pt).Size = new Size(70, 21);
		((Control)Pt).TabIndex = 6;
		((Control)Pt).Text = "0";
		((Control)Ia).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Ia).Location = new Point(40, 58);
		((Control)Ia).Margin = new Padding(2);
		((Control)Ia).Name = "Ia";
		((TextBoxBase)Ia).ReadOnly = true;
		((Control)Ia).Size = new Size(70, 21);
		((Control)Ia).TabIndex = 5;
		((Control)Ia).Text = "0";
		((Control)Ua).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Ua).Location = new Point(40, 24);
		((Control)Ua).Margin = new Padding(2);
		((Control)Ua).Name = "Ua";
		((TextBoxBase)Ua).ReadOnly = true;
		((Control)Ua).Size = new Size(70, 21);
		((Control)Ua).TabIndex = 4;
		((Control)Ua).Text = "0";
		((Control)label5).AutoSize = true;
		((Control)label5).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label5).Location = new Point(355, 130);
		((Control)label5).Margin = new Padding(2, 0, 2, 0);
		((Control)label5).Name = "label5";
		((Control)label5).Size = new Size(47, 12);
		((Control)label5).TabIndex = 3;
		((Control)label5).Text = "Q total";
		((Control)label4).AutoSize = true;
		((Control)label4).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label4).Location = new Point(355, 96);
		((Control)label4).Margin = new Padding(2, 0, 2, 0);
		((Control)label4).Name = "label4";
		((Control)label4).Size = new Size(47, 12);
		((Control)label4).TabIndex = 2;
		((Control)label4).Text = "P total";
		((Control)label3).AutoSize = true;
		((Control)label3).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label3).Location = new Point(14, 62);
		((Control)label3).Margin = new Padding(2, 0, 2, 0);
		((Control)label3).Name = "label3";
		((Control)label3).Size = new Size(17, 12);
		((Control)label3).TabIndex = 1;
		((Control)label3).Text = "Ia";
		((Control)label12).AutoSize = true;
		((Control)label12).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label12).Location = new Point(14, 26);
		((Control)label12).Margin = new Padding(2, 0, 2, 0);
		((Control)label12).Name = "label12";
		((Control)label12).Size = new Size(17, 12);
		((Control)label12).TabIndex = 0;
		((Control)label12).Text = "Ua";
		((Control)tabPage6).BackColor = Color.Gainsboro;
		((Control)tabPage6).Controls.Add((Control)(object)groupBox72);
		((Control)tabPage6).Controls.Add((Control)(object)groupBox51);
		((Control)tabPage6).Controls.Add((Control)(object)ADF参数设置);
		((Control)tabPage6).Controls.Add((Control)(object)groupBox34);
		((Control)tabPage6).Controls.Add((Control)(object)groupBox28);
		((Control)tabPage6).Controls.Add((Control)(object)groupBoxChangePhaseType);
		tabPage6.Location = new Point(4, 22);
		((Control)tabPage6).Margin = new Padding(2);
		((Control)tabPage6).Name = "tabPage6";
		((Control)tabPage6).Size = new Size(608, 632);
		tabPage6.TabIndex = 5;
		((Control)tabPage6).Text = "ADF300参数设置";
		((Control)tabPage6).UseWaitCursor = true;
		((Control)tabPage6).Click += tabPage6_Click;
		((Control)groupBox72).Controls.Add((Control)(object)Readxulihao);
		((Control)groupBox72).Controls.Add((Control)(object)Setxuliehao);
		((Control)groupBox72).Controls.Add((Control)(object)label236);
		((Control)groupBox72).Controls.Add((Control)(object)ADF300序列号);
		((Control)groupBox72).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox72).Location = new Point(317, 6);
		((Control)groupBox72).Margin = new Padding(2);
		((Control)groupBox72).Name = "groupBox72";
		((Control)groupBox72).Padding = new Padding(2);
		((Control)groupBox72).Size = new Size(284, 107);
		((Control)groupBox72).TabIndex = 54;
		groupBox72.TabStop = false;
		((Control)groupBox72).Text = "Serial number setting";
		((Control)groupBox72).UseWaitCursor = true;
		((Control)Readxulihao).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Readxulihao).Location = new Point(32, 66);
		((Control)Readxulihao).Margin = new Padding(2);
		((Control)Readxulihao).Name = "Readxulihao";
		((Control)Readxulihao).Size = new Size(59, 21);
		((Control)Readxulihao).TabIndex = 61;
		((Control)Readxulihao).Text = "read";
		((ButtonBase)Readxulihao).UseVisualStyleBackColor = true;
		((Control)Readxulihao).UseWaitCursor = true;
		((Control)Readxulihao).Click += Readxulihao_Click;
		((Control)Setxuliehao).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Setxuliehao).Location = new Point(152, 66);
		((Control)Setxuliehao).Margin = new Padding(2);
		((Control)Setxuliehao).Name = "Setxuliehao";
		((Control)Setxuliehao).Size = new Size(64, 21);
		((Control)Setxuliehao).TabIndex = 60;
		((Control)Setxuliehao).Text = "set";
		((ButtonBase)Setxuliehao).UseVisualStyleBackColor = true;
		((Control)Setxuliehao).UseWaitCursor = true;
		((Control)Setxuliehao).Click += Setxuliehao_Click;
		((Control)label236).AutoSize = true;
		((Control)label236).Font = new Font("宋体", 10.8f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label236).Location = new Point(0, 28);
		((Control)label236).Margin = new Padding(2, 0, 2, 0);
		((Control)label236).Name = "label236";
		((Control)label236).Size = new Size(126, 15);
		((Control)label236).TabIndex = 59;
		((Control)label236).Text = "serial number：";
		((Control)label236).UseWaitCursor = true;
		((Control)ADF300序列号).Location = new Point(126, 22);
		((Control)ADF300序列号).Margin = new Padding(2);
		((TextBoxBase)ADF300序列号).MaxLength = 14;
		((Control)ADF300序列号).Name = "ADF300序列号";
		((Control)ADF300序列号).Size = new Size(159, 26);
		((Control)ADF300序列号).TabIndex = 58;
		((Control)ADF300序列号).UseWaitCursor = true;
		((Control)groupBox51).Controls.Add((Control)(object)button10);
		((Control)groupBox51).Controls.Add((Control)(object)button11);
		((Control)groupBox51).Controls.Add((Control)(object)外置互感器);
		((Control)groupBox51).Controls.Add((Control)(object)内置互感器);
		((Control)groupBox51).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox51).Location = new Point(6, 5);
		((Control)groupBox51).Margin = new Padding(2);
		((Control)groupBox51).Name = "groupBox51";
		((Control)groupBox51).Padding = new Padding(2);
		((Control)groupBox51).Size = new Size(307, 82);
		((Control)groupBox51).TabIndex = 53;
		groupBox51.TabStop = false;
		((Control)groupBox51).Text = "Selection of transformer type";
		((Control)groupBox51).UseWaitCursor = true;
		((Control)button10).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button10).Location = new Point(156, 50);
		((Control)button10).Margin = new Padding(2);
		((Control)button10).Name = "button10";
		((Control)button10).Size = new Size(55, 26);
		((Control)button10).TabIndex = 48;
		((Control)button10).Text = "read";
		((ButtonBase)button10).UseVisualStyleBackColor = true;
		((Control)button10).UseWaitCursor = true;
		((Control)button10).Click += button10_Click_2;
		((Control)button11).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button11).Location = new Point(54, 50);
		((Control)button11).Margin = new Padding(2);
		((Control)button11).Name = "button11";
		((Control)button11).Size = new Size(55, 26);
		((Control)button11).TabIndex = 47;
		((Control)button11).Text = "set";
		((ButtonBase)button11).UseVisualStyleBackColor = true;
		((Control)button11).UseWaitCursor = true;
		((Control)button11).Click += button11_Click_1;
		((Control)外置互感器).AutoSize = true;
		((Control)外置互感器).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)外置互感器).Location = new Point(170, 26);
		((Control)外置互感器).Margin = new Padding(2);
		((Control)外置互感器).Name = "外置互感器";
		((Control)外置互感器).Size = new Size(165, 18);
		((Control)外置互感器).TabIndex = 46;
		((Control)外置互感器).Tag = "";
		((Control)外置互感器).Text = "External transformer";
		((ButtonBase)外置互感器).UseVisualStyleBackColor = true;
		((Control)外置互感器).UseWaitCursor = true;
		((Control)内置互感器).AutoSize = true;
		内置互感器.Checked = true;
		((Control)内置互感器).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)内置互感器).Location = new Point(1, 26);
		((Control)内置互感器).Margin = new Padding(2);
		((Control)内置互感器).Name = "内置互感器";
		((Control)内置互感器).Size = new Size(165, 18);
		((Control)内置互感器).TabIndex = 45;
		内置互感器.TabStop = true;
		((Control)内置互感器).Text = "Built in transformer";
		((ButtonBase)内置互感器).UseVisualStyleBackColor = true;
		((Control)内置互感器).UseWaitCursor = true;
		((Control)ADF参数设置).Controls.Add((Control)(object)无无线);
		((Control)ADF参数设置).Controls.Add((Control)(object)groupBox40);
		((Control)ADF参数设置).Controls.Add((Control)(object)label178);
		((Control)ADF参数设置).Controls.Add((Control)(object)label177);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADF间隔);
		((Control)ADF参数设置).Controls.Add((Control)(object)label175);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADF脉宽);
		((Control)ADF参数设置).Controls.Add((Control)(object)label176);
		((Control)ADF参数设置).Controls.Add((Control)(object)groupBox42);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADFCT4);
		((Control)ADF参数设置).Controls.Add((Control)(object)label174);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADFCT2);
		((Control)ADF参数设置).Controls.Add((Control)(object)label173);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADFCT3);
		((Control)ADF参数设置).Controls.Add((Control)(object)label172);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADFCT1);
		((Control)ADF参数设置).Controls.Add((Control)(object)label171);
		((Control)ADF参数设置).Controls.Add((Control)(object)ADFPT);
		((Control)ADF参数设置).Controls.Add((Control)(object)label170);
		((Control)ADF参数设置).Controls.Add((Control)(object)groupBox41);
		((Control)ADF参数设置).Controls.Add((Control)(object)读取ADF);
		((Control)ADF参数设置).Controls.Add((Control)(object)设置ADF);
		((Control)ADF参数设置).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF参数设置).Location = new Point(22, 436);
		((Control)ADF参数设置).Margin = new Padding(2);
		((Control)ADF参数设置).Name = "ADF参数设置";
		((Control)ADF参数设置).Padding = new Padding(2);
		((Control)ADF参数设置).Size = new Size(470, 186);
		((Control)ADF参数设置).TabIndex = 52;
		ADF参数设置.TabStop = false;
		((Control)ADF参数设置).Text = "parameter setting ";
		((Control)ADF参数设置).UseWaitCursor = true;
		((Control)ADF参数设置).Enter += ADF参数设置_Enter;
		((Control)无无线).AutoSize = true;
		无无线.Checked = true;
		((Control)无无线).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)无无线).Location = new Point(428, 42);
		((Control)无无线).Margin = new Padding(2);
		((Control)无无线).Name = "无无线";
		((Control)无无线).Size = new Size(53, 18);
		((Control)无无线).TabIndex = 48;
		无无线.TabStop = true;
		((Control)无无线).Text = "none";
		((ButtonBase)无无线).UseVisualStyleBackColor = true;
		((Control)无无线).UseWaitCursor = true;
		((Control)groupBox40).Controls.Add((Control)(object)有无线);
		((Control)groupBox40).Location = new Point(314, 22);
		((Control)groupBox40).Margin = new Padding(2);
		((Control)groupBox40).Name = "groupBox40";
		((Control)groupBox40).Padding = new Padding(2);
		((Control)groupBox40).Size = new Size(134, 46);
		((Control)groupBox40).TabIndex = 49;
		groupBox40.TabStop = false;
		((Control)groupBox40).UseWaitCursor = true;
		((Control)有无线).AutoSize = true;
		((Control)有无线).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)有无线).Location = new Point(14, 19);
		((Control)有无线).Margin = new Padding(2);
		((Control)有无线).Name = "有无线";
		((Control)有无线).Size = new Size(81, 18);
		((Control)有无线).TabIndex = 47;
		((Control)有无线).Text = "wireless";
		((ButtonBase)有无线).UseVisualStyleBackColor = true;
		((Control)有无线).UseWaitCursor = true;
		((Control)label178).AutoSize = true;
		((Control)label178).Location = new Point(374, 144);
		((Control)label178).Margin = new Padding(2, 0, 2, 0);
		((Control)label178).Name = "label178";
		((Control)label178).Size = new Size(14, 14);
		((Control)label178).TabIndex = 63;
		((Control)label178).Text = "S";
		((Control)label178).UseWaitCursor = true;
		((Control)label177).AutoSize = true;
		((Control)label177).Location = new Point(372, 112);
		((Control)label177).Margin = new Padding(2, 0, 2, 0);
		((Control)label177).Name = "label177";
		((Control)label177).Size = new Size(21, 14);
		((Control)label177).TabIndex = 62;
		((Control)label177).Text = "ms";
		((Control)label177).UseWaitCursor = true;
		((Control)ADF间隔).Location = new Point(308, 139);
		((Control)ADF间隔).Margin = new Padding(2);
		((TextBoxBase)ADF间隔).MaxLength = 5;
		((Control)ADF间隔).Name = "ADF间隔";
		((Control)ADF间隔).Size = new Size(60, 23);
		((Control)ADF间隔).TabIndex = 61;
		((Control)ADF间隔).Text = "30";
		((Control)ADF间隔).UseWaitCursor = true;
		((Control)label175).AutoSize = true;
		((Control)label175).Location = new Point(266, 142);
		((Control)label175).Margin = new Padding(2, 0, 2, 0);
		((Control)label175).Name = "label175";
		((Control)label175).Size = new Size(70, 14);
		((Control)label175).TabIndex = 60;
		((Control)label175).Text = "interval ";
		((Control)label175).UseWaitCursor = true;
		((Control)ADF脉宽).Location = new Point(308, 110);
		((Control)ADF脉宽).Margin = new Padding(2);
		((TextBoxBase)ADF脉宽).MaxLength = 5;
		((Control)ADF脉宽).Name = "ADF脉宽";
		((Control)ADF脉宽).Size = new Size(60, 23);
		((Control)ADF脉宽).TabIndex = 59;
		((Control)ADF脉宽).Text = "500";
		((Control)ADF脉宽).UseWaitCursor = true;
		((Control)label176).AutoSize = true;
		((Control)label176).Location = new Point(266, 112);
		((Control)label176).Margin = new Padding(2, 0, 2, 0);
		((Control)label176).Name = "label176";
		((Control)label176).Size = new Size(91, 14);
		((Control)label176).TabIndex = 58;
		((Control)label176).Text = "pulse width ";
		((Control)label176).UseWaitCursor = true;
		((Control)groupBox42).Controls.Add((Control)(object)ADF三相三线);
		((Control)groupBox42).Controls.Add((Control)(object)ADF三相四线);
		((Control)groupBox42).Location = new Point(10, 22);
		((Control)groupBox42).Margin = new Padding(2);
		((Control)groupBox42).Name = "groupBox42";
		((Control)groupBox42).Padding = new Padding(2);
		((Control)groupBox42).Size = new Size(139, 46);
		((Control)groupBox42).TabIndex = 49;
		groupBox42.TabStop = false;
		((Control)groupBox42).UseWaitCursor = true;
		((Control)ADF三相三线).AutoSize = true;
		((Control)ADF三相三线).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF三相三线).Location = new Point(74, 19);
		((Control)ADF三相三线).Margin = new Padding(2);
		((Control)ADF三相三线).Name = "ADF三相三线";
		((Control)ADF三相三线).Size = new Size(53, 18);
		((Control)ADF三相三线).TabIndex = 48;
		((Control)ADF三相三线).Text = "3P3L";
		((ButtonBase)ADF三相三线).UseVisualStyleBackColor = true;
		((Control)ADF三相三线).UseWaitCursor = true;
		((Control)ADF三相四线).AutoSize = true;
		ADF三相四线.Checked = true;
		((Control)ADF三相四线).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF三相四线).Location = new Point(14, 19);
		((Control)ADF三相四线).Margin = new Padding(2);
		((Control)ADF三相四线).Name = "ADF三相四线";
		((Control)ADF三相四线).Size = new Size(53, 18);
		((Control)ADF三相四线).TabIndex = 47;
		ADF三相四线.TabStop = true;
		((Control)ADF三相四线).Text = "3P4L";
		((ButtonBase)ADF三相四线).UseVisualStyleBackColor = true;
		((Control)ADF三相四线).UseWaitCursor = true;
		((Control)ADFCT4).Location = new Point(178, 139);
		((Control)ADFCT4).Margin = new Padding(2);
		((TextBoxBase)ADFCT4).MaxLength = 5;
		((Control)ADFCT4).Name = "ADFCT4";
		((Control)ADFCT4).Size = new Size(60, 23);
		((Control)ADFCT4).TabIndex = 57;
		((Control)ADFCT4).Text = "1";
		((Control)ADFCT4).UseWaitCursor = true;
		((Control)label174).AutoSize = true;
		((Control)label174).Location = new Point(137, 142);
		((Control)label174).Margin = new Padding(2, 0, 2, 0);
		((Control)label174).Name = "label174";
		((Control)label174).Size = new Size(35, 14);
		((Control)label174).TabIndex = 56;
		((Control)label174).Text = "CT4:";
		((Control)label174).UseWaitCursor = true;
		((Control)ADFCT2).Location = new Point(178, 110);
		((Control)ADFCT2).Margin = new Padding(2);
		((TextBoxBase)ADFCT2).MaxLength = 5;
		((Control)ADFCT2).Name = "ADFCT2";
		((Control)ADFCT2).Size = new Size(60, 23);
		((Control)ADFCT2).TabIndex = 55;
		((Control)ADFCT2).Text = "1";
		((Control)ADFCT2).UseWaitCursor = true;
		((Control)label173).AutoSize = true;
		((Control)label173).Location = new Point(137, 112);
		((Control)label173).Margin = new Padding(2, 0, 2, 0);
		((Control)label173).Name = "label173";
		((Control)label173).Size = new Size(35, 14);
		((Control)label173).TabIndex = 54;
		((Control)label173).Text = "CT2:";
		((Control)label173).UseWaitCursor = true;
		((Control)ADFCT3).Location = new Point(64, 138);
		((Control)ADFCT3).Margin = new Padding(2);
		((TextBoxBase)ADFCT3).MaxLength = 5;
		((Control)ADFCT3).Name = "ADFCT3";
		((Control)ADFCT3).Size = new Size(60, 23);
		((Control)ADFCT3).TabIndex = 53;
		((Control)ADFCT3).Text = "1";
		((Control)ADFCT3).UseWaitCursor = true;
		((Control)label172).AutoSize = true;
		((Control)label172).Location = new Point(22, 142);
		((Control)label172).Margin = new Padding(2, 0, 2, 0);
		((Control)label172).Name = "label172";
		((Control)label172).Size = new Size(35, 14);
		((Control)label172).TabIndex = 52;
		((Control)label172).Text = "CT3:";
		((Control)label172).UseWaitCursor = true;
		((Control)ADFCT1).Location = new Point(64, 110);
		((Control)ADFCT1).Margin = new Padding(2);
		((TextBoxBase)ADFCT1).MaxLength = 5;
		((Control)ADFCT1).Name = "ADFCT1";
		((Control)ADFCT1).Size = new Size(60, 23);
		((Control)ADFCT1).TabIndex = 51;
		((Control)ADFCT1).Text = "1";
		((Control)ADFCT1).UseWaitCursor = true;
		((Control)label171).AutoSize = true;
		((Control)label171).Location = new Point(22, 112);
		((Control)label171).Margin = new Padding(2, 0, 2, 0);
		((Control)label171).Name = "label171";
		((Control)label171).Size = new Size(42, 14);
		((Control)label171).TabIndex = 50;
		((Control)label171).Text = "CT1：";
		((Control)label171).UseWaitCursor = true;
		((Control)ADFPT).Location = new Point(64, 82);
		((Control)ADFPT).Margin = new Padding(2);
		((TextBoxBase)ADFPT).MaxLength = 5;
		((Control)ADFPT).Name = "ADFPT";
		((Control)ADFPT).Size = new Size(60, 23);
		((Control)ADFPT).TabIndex = 49;
		((Control)ADFPT).Text = "1";
		((Control)ADFPT).UseWaitCursor = true;
		((Control)label170).AutoSize = true;
		((Control)label170).Location = new Point(22, 86);
		((Control)label170).Margin = new Padding(2, 0, 2, 0);
		((Control)label170).Name = "label170";
		((Control)label170).Size = new Size(28, 14);
		((Control)label170).TabIndex = 48;
		((Control)label170).Text = "PT:";
		((Control)label170).UseWaitCursor = true;
		((Control)groupBox41).Controls.Add((Control)(object)ADF脉冲);
		((Control)groupBox41).Controls.Add((Control)(object)ADF电平);
		((Control)groupBox41).Location = new Point(166, 22);
		((Control)groupBox41).Margin = new Padding(2);
		((Control)groupBox41).Name = "groupBox41";
		((Control)groupBox41).Padding = new Padding(2);
		((Control)groupBox41).Size = new Size(134, 46);
		((Control)groupBox41).TabIndex = 47;
		groupBox41.TabStop = false;
		((Control)groupBox41).UseWaitCursor = true;
		((Control)ADF脉冲).AutoSize = true;
		ADF脉冲.Checked = true;
		((Control)ADF脉冲).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF脉冲).Location = new Point(72, 19);
		((Control)ADF脉冲).Margin = new Padding(2);
		((Control)ADF脉冲).Name = "ADF脉冲";
		((Control)ADF脉冲).Size = new Size(67, 18);
		((Control)ADF脉冲).TabIndex = 48;
		ADF脉冲.TabStop = true;
		((Control)ADF脉冲).Text = "pulse ";
		((ButtonBase)ADF脉冲).UseVisualStyleBackColor = true;
		((Control)ADF脉冲).UseWaitCursor = true;
		((Control)ADF电平).AutoSize = true;
		((Control)ADF电平).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF电平).Location = new Point(14, 19);
		((Control)ADF电平).Margin = new Padding(2);
		((Control)ADF电平).Name = "ADF电平";
		((Control)ADF电平).Size = new Size(67, 18);
		((Control)ADF电平).TabIndex = 47;
		((Control)ADF电平).Text = " level";
		((ButtonBase)ADF电平).UseVisualStyleBackColor = true;
		((Control)ADF电平).UseWaitCursor = true;
		((Control)读取ADF).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)读取ADF).Location = new Point(398, 138);
		((Control)读取ADF).Margin = new Padding(2);
		((Control)读取ADF).Name = "读取ADF";
		((Control)读取ADF).Size = new Size(46, 22);
		((Control)读取ADF).TabIndex = 40;
		((Control)读取ADF).Text = "read";
		((ButtonBase)读取ADF).UseVisualStyleBackColor = true;
		((Control)读取ADF).UseWaitCursor = true;
		((Control)读取ADF).Click += 读取ADF_Click;
		((Control)设置ADF).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)设置ADF).Location = new Point(398, 103);
		((Control)设置ADF).Margin = new Padding(2);
		((Control)设置ADF).Name = "设置ADF";
		((Control)设置ADF).Size = new Size(46, 22);
		((Control)设置ADF).TabIndex = 35;
		((Control)设置ADF).Text = "set";
		((ButtonBase)设置ADF).UseVisualStyleBackColor = true;
		((Control)设置ADF).UseWaitCursor = true;
		((Control)设置ADF).Click += 设置ADF_Click;
		((Control)groupBox34).Controls.Add((Control)(object)ADF300类型读取);
		((Control)groupBox34).Controls.Add((Control)(object)ADF300广播清零);
		((Control)groupBox34).Controls.Add((Control)(object)ADF300类型设置);
		((Control)groupBox34).Controls.Add((Control)(object)label164);
		((Control)groupBox34).Controls.Add((Control)(object)II);
		((Control)groupBox34).Controls.Add((Control)(object)ADF300清零);
		((Control)groupBox34).Controls.Add((Control)(object)III);
		((Control)groupBox34).Controls.Add((Control)(object)label180);
		((Control)groupBox34).Controls.Add((Control)(object)I);
		((Control)groupBox34).Controls.Add((Control)(object)label181);
		((Control)groupBox34).Controls.Add((Control)(object)ADF脉冲常数);
		((Control)groupBox34).Controls.Add((Control)(object)ADF电流);
		((Control)groupBox34).Controls.Add((Control)(object)ADF电压);
		((Control)groupBox34).Controls.Add((Control)(object)CorrectMeter);
		((Control)groupBox34).Controls.Add((Control)(object)Init);
		((Control)groupBox34).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox34).Location = new Point(6, 91);
		((Control)groupBox34).Margin = new Padding(2);
		((Control)groupBox34).Name = "groupBox34";
		((Control)groupBox34).Padding = new Padding(2);
		((Control)groupBox34).Size = new Size(542, 128);
		((Control)groupBox34).TabIndex = 43;
		groupBox34.TabStop = false;
		((Control)groupBox34).Text = "calibration";
		((Control)groupBox34).UseWaitCursor = true;
		((Control)groupBox34).Enter += groupBox34_Enter;
		((Control)ADF300类型读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF300类型读取).Location = new Point(487, 60);
		((Control)ADF300类型读取).Margin = new Padding(2);
		((Control)ADF300类型读取).Name = "ADF300类型读取";
		((Control)ADF300类型读取).Size = new Size(55, 26);
		((Control)ADF300类型读取).TabIndex = 37;
		((Control)ADF300类型读取).Text = "read";
		((ButtonBase)ADF300类型读取).UseVisualStyleBackColor = true;
		((Control)ADF300类型读取).UseWaitCursor = true;
		((Control)ADF300类型读取).Click += ADF300类型读取_Click;
		((Control)ADF300广播清零).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF300广播清零).Location = new Point(220, 102);
		((Control)ADF300广播清零).Margin = new Padding(2);
		((Control)ADF300广播清零).Name = "ADF300广播清零";
		((Control)ADF300广播清零).Size = new Size(132, 22);
		((Control)ADF300广播清零).TabIndex = 42;
		((Control)ADF300广播清零).Text = "Broadcast clear";
		((ButtonBase)ADF300广播清零).UseVisualStyleBackColor = true;
		((Control)ADF300广播清零).UseWaitCursor = true;
		((Control)ADF300广播清零).Click += ADF300广播清零_Click;
		((Control)ADF300类型设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF300类型设置).Location = new Point(487, 25);
		((Control)ADF300类型设置).Margin = new Padding(2);
		((Control)ADF300类型设置).Name = "ADF300类型设置";
		((Control)ADF300类型设置).Size = new Size(55, 26);
		((Control)ADF300类型设置).TabIndex = 36;
		((Control)ADF300类型设置).Text = "set";
		((ButtonBase)ADF300类型设置).UseVisualStyleBackColor = true;
		((Control)ADF300类型设置).UseWaitCursor = true;
		((Control)ADF300类型设置).Click += ADF300类型设置_Click;
		((Control)label164).AutoSize = true;
		((Control)label164).Location = new Point(248, 28);
		((Control)label164).Margin = new Padding(2, 0, 2, 0);
		((Control)label164).Name = "label164";
		((Control)label164).Size = new Size(31, 16);
		((Control)label164).TabIndex = 23;
		((Control)label164).Text = "Ec:";
		((Control)label164).UseWaitCursor = true;
		((Control)II).AutoSize = true;
		II.Checked = true;
		((Control)II).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)II).Location = new Point(370, 46);
		((Control)II).Margin = new Padding(2);
		((Control)II).Name = "II";
		((Control)II).Size = new Size(119, 16);
		((Control)II).TabIndex = 4;
		II.TabStop = true;
		((Control)II).Text = "IItype（24road）";
		((ButtonBase)II).UseVisualStyleBackColor = true;
		((Control)II).UseWaitCursor = true;
		((Control)ADF300清零).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF300清零).Location = new Point(26, 102);
		((Control)ADF300清零).Margin = new Padding(2);
		((Control)ADF300清零).Name = "ADF300清零";
		((Control)ADF300清零).Size = new Size(172, 22);
		((Control)ADF300清零).TabIndex = 41;
		((Control)ADF300清零).Text = "Electric energy clearing";
		((ButtonBase)ADF300清零).UseVisualStyleBackColor = true;
		((Control)ADF300清零).UseWaitCursor = true;
		((Control)ADF300清零).Click += ADF300清零_Click;
		((Control)III).AutoSize = true;
		((Control)III).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)III).Location = new Point(370, 70);
		((Control)III).Margin = new Padding(2);
		((Control)III).Name = "III";
		((Control)III).Size = new Size(125, 16);
		((Control)III).TabIndex = 3;
		((Control)III).Text = "IIItype（36road）";
		((ButtonBase)III).UseVisualStyleBackColor = true;
		((Control)III).UseWaitCursor = true;
		((Control)label180).AutoSize = true;
		((Control)label180).Location = new Point(118, 28);
		((Control)label180).Margin = new Padding(2, 0, 2, 0);
		((Control)label180).Name = "label180";
		((Control)label180).Size = new Size(31, 16);
		((Control)label180).TabIndex = 22;
		((Control)label180).Text = "Ib:";
		((Control)label180).UseWaitCursor = true;
		((Control)I).AutoSize = true;
		((Control)I).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)I).Location = new Point(370, 26);
		((Control)I).Margin = new Padding(2);
		((Control)I).Name = "I";
		((Control)I).Size = new Size(113, 16);
		((Control)I).TabIndex = 2;
		((Control)I).Text = "Itype（12road）";
		((ButtonBase)I).UseVisualStyleBackColor = true;
		((Control)I).UseWaitCursor = true;
		((Control)label181).AutoSize = true;
		((Control)label181).Location = new Point(14, 28);
		((Control)label181).Margin = new Padding(2, 0, 2, 0);
		((Control)label181).Name = "label181";
		((Control)label181).Size = new Size(31, 16);
		((Control)label181).TabIndex = 21;
		((Control)label181).Text = "Un:";
		((Control)label181).UseWaitCursor = true;
		ADF脉冲常数.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF脉冲常数).FormattingEnabled = true;
		ADF脉冲常数.Items.AddRange(new object[3] { "6400", "1600", "400" });
		((Control)ADF脉冲常数).Location = new Point(286, 26);
		((Control)ADF脉冲常数).Margin = new Padding(2);
		((Control)ADF脉冲常数).Name = "ADF脉冲常数";
		((Control)ADF脉冲常数).Size = new Size(66, 24);
		((Control)ADF脉冲常数).TabIndex = 20;
		((Control)ADF脉冲常数).UseWaitCursor = true;
		ADF电流.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF电流).FormattingEnabled = true;
		ADF电流.Items.AddRange(new object[3] { "1", "10（60）", "10（100）" });
		((Control)ADF电流).Location = new Point(158, 26);
		((Control)ADF电流).Margin = new Padding(2);
		((Control)ADF电流).Name = "ADF电流";
		((Control)ADF电流).Size = new Size(86, 24);
		((Control)ADF电流).TabIndex = 19;
		((Control)ADF电流).UseWaitCursor = true;
		ADF电流.SelectionChangeCommitted += ADF电流_SelectionChangeCommitted;
		ADF电压.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF电压).FormattingEnabled = true;
		ADF电压.Items.AddRange(new object[3] { "57.7", "220", "380" });
		((Control)ADF电压).Location = new Point(50, 26);
		((Control)ADF电压).Margin = new Padding(2);
		((Control)ADF电压).Name = "ADF电压";
		((Control)ADF电压).Size = new Size(59, 24);
		((Control)ADF电压).TabIndex = 18;
		((Control)ADF电压).UseWaitCursor = true;
		ADF电压.SelectedIndexChanged += ADF电压_SelectedIndexChanged;
		((Control)CorrectMeter).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)CorrectMeter).Location = new Point(194, 64);
		((Control)CorrectMeter).Margin = new Padding(2);
		((Control)CorrectMeter).Name = "CorrectMeter";
		((Control)CorrectMeter).Size = new Size(113, 26);
		((Control)CorrectMeter).TabIndex = 11;
		((Control)CorrectMeter).Text = "calibration";
		((ButtonBase)CorrectMeter).UseVisualStyleBackColor = true;
		((Control)CorrectMeter).UseWaitCursor = true;
		((Control)CorrectMeter).Click += CorrectMeter_Click;
		((Control)Init).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Init).Location = new Point(35, 65);
		((Control)Init).Margin = new Padding(2);
		((Control)Init).Name = "Init";
		((Control)Init).Size = new Size(128, 26);
		((Control)Init).TabIndex = 10;
		((Control)Init).Text = "initialization";
		((ButtonBase)Init).UseVisualStyleBackColor = true;
		((Control)Init).UseWaitCursor = true;
		((Control)Init).Click += Init_Click;
		((Control)groupBox28).Controls.Add((Control)(object)label245);
		((Control)groupBox28).Controls.Add((Control)(object)ADF副通讯);
		((Control)groupBox28).Controls.Add((Control)(object)ADF主通讯);
		((Control)groupBox28).Controls.Add((Control)(object)ADF300波特率);
		((Control)groupBox28).Controls.Add((Control)(object)button2);
		((Control)groupBox28).Controls.Add((Control)(object)button3);
		((Control)groupBox28).Controls.Add((Control)(object)ADF300地址);
		((Control)groupBox28).Controls.Add((Control)(object)label165);
		((Control)groupBox28).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox28).Location = new Point(353, 218);
		((Control)groupBox28).Margin = new Padding(2);
		((Control)groupBox28).Name = "groupBox28";
		((Control)groupBox28).Padding = new Padding(2);
		((Control)groupBox28).Size = new Size(210, 161);
		((Control)groupBox28).TabIndex = 38;
		groupBox28.TabStop = false;
		((Control)groupBox28).UseWaitCursor = true;
		((Control)groupBox28).Enter += groupBox28_Enter;
		((Control)label245).AutoSize = true;
		((Control)label245).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label245).Location = new Point(26, 92);
		((Control)label245).Margin = new Padding(2, 0, 2, 0);
		((Control)label245).Name = "label245";
		((Control)label245).Size = new Size(77, 12);
		((Control)label245).TabIndex = 45;
		((Control)label245).Text = "Baud rate ：";
		((Control)label245).UseWaitCursor = true;
		((Control)label245).Click += label245_Click;
		((Control)ADF副通讯).AutoSize = true;
		((Control)ADF副通讯).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF副通讯).Location = new Point(46, 25);
		((Control)ADF副通讯).Margin = new Padding(2);
		((Control)ADF副通讯).Name = "ADF副通讯";
		((Control)ADF副通讯).Size = new Size(151, 18);
		((Control)ADF副通讯).TabIndex = 44;
		((Control)ADF副通讯).Tag = "";
		((Control)ADF副通讯).Text = "Vice communication";
		((ButtonBase)ADF副通讯).UseVisualStyleBackColor = true;
		((Control)ADF副通讯).UseWaitCursor = true;
		((Control)ADF主通讯).AutoSize = true;
		ADF主通讯.Checked = true;
		((Control)ADF主通讯).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF主通讯).Location = new Point(44, 3);
		((Control)ADF主通讯).Margin = new Padding(2);
		((Control)ADF主通讯).Name = "ADF主通讯";
		((Control)ADF主通讯).Size = new Size(158, 18);
		((Control)ADF主通讯).TabIndex = 43;
		ADF主通讯.TabStop = true;
		((Control)ADF主通讯).Text = " Main communication";
		((ButtonBase)ADF主通讯).UseVisualStyleBackColor = true;
		((Control)ADF主通讯).UseWaitCursor = true;
		ADF300波特率.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF300波特率).FormattingEnabled = true;
		ADF300波特率.Items.AddRange(new object[5] { "9600", "9600", "4800", "2400", "1200" });
		((Control)ADF300波特率).Location = new Point(84, 86);
		((Control)ADF300波特率).Margin = new Padding(2);
		((Control)ADF300波特率).Name = "ADF300波特率";
		((Control)ADF300波特率).Size = new Size(66, 24);
		((Control)ADF300波特率).TabIndex = 41;
		((Control)ADF300波特率).UseWaitCursor = true;
		((Control)button2).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button2).Location = new Point(106, 125);
		((Control)button2).Margin = new Padding(2);
		((Control)button2).Name = "button2";
		((Control)button2).Size = new Size(55, 26);
		((Control)button2).TabIndex = 35;
		((Control)button2).Text = "Setting";
		((ButtonBase)button2).UseVisualStyleBackColor = true;
		((Control)button2).UseWaitCursor = true;
		((Control)button2).Click += button2_Click;
		((Control)button3).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button3).Location = new Point(39, 125);
		((Control)button3).Margin = new Padding(2);
		((Control)button3).Name = "button3";
		((Control)button3).Size = new Size(55, 26);
		((Control)button3).TabIndex = 36;
		((Control)button3).Text = "Read";
		((ButtonBase)button3).UseVisualStyleBackColor = true;
		((Control)button3).UseWaitCursor = true;
		((Control)button3).Click += button3_Click;
		ADF300地址.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF300地址).FormattingEnabled = true;
		ADF300地址.Items.AddRange(new object[23]
		{
			"1", "13", "25", "37", "49", "61", "73", "85", "97", "109",
			"121", "133", "145", "157", "169", "181", "193", "205", "217", "229",
			"", "", ""
		});
		((Control)ADF300地址).Location = new Point(84, 52);
		((Control)ADF300地址).Margin = new Padding(2);
		((Control)ADF300地址).Name = "ADF300地址";
		((Control)ADF300地址).Size = new Size(62, 24);
		((Control)ADF300地址).TabIndex = 42;
		((Control)ADF300地址).UseWaitCursor = true;
		((Control)ADF300地址).Click += ADF300地址_Click;
		((Control)label165).AutoSize = true;
		((Control)label165).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label165).Location = new Point(37, 58);
		((Control)label165).Margin = new Padding(2, 0, 2, 0);
		((Control)label165).Name = "label165";
		((Control)label165).Size = new Size(59, 12);
		((Control)label165).TabIndex = 39;
		((Control)label165).Text = "address：";
		((Control)label165).UseWaitCursor = true;
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)groupBox47);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)groupBox46);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)dlt645xieyi);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)ADF表号);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)buttonReadPhase);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)buttonChangePhase);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)三相数量);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)单相数量);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)label146);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)label147);
		((Control)groupBoxChangePhaseType).Controls.Add((Control)(object)label179);
		((Control)groupBoxChangePhaseType).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBoxChangePhaseType).Location = new Point(22, 218);
		((Control)groupBoxChangePhaseType).Margin = new Padding(2);
		((Control)groupBoxChangePhaseType).Name = "groupBoxChangePhaseType";
		((Control)groupBoxChangePhaseType).Padding = new Padding(2);
		((Control)groupBoxChangePhaseType).Size = new Size(278, 214);
		((Control)groupBoxChangePhaseType).TabIndex = 29;
		groupBoxChangePhaseType.TabStop = false;
		((Control)groupBoxChangePhaseType).UseWaitCursor = true;
		((Control)groupBoxChangePhaseType).Enter += groupBoxChangePhaseType_Enter;
		((Control)groupBox47).Controls.Add((Control)(object)使能IC);
		((Control)groupBox47).Controls.Add((Control)(object)无IC);
		((Control)groupBox47).Location = new Point(113, 106);
		((Control)groupBox47).Margin = new Padding(2);
		((Control)groupBox47).Name = "groupBox47";
		((Control)groupBox47).Padding = new Padding(2);
		((Control)groupBox47).Size = new Size(90, 78);
		((Control)groupBox47).TabIndex = 61;
		groupBox47.TabStop = false;
		((Control)groupBox47).UseWaitCursor = true;
		((Control)使能IC).AutoSize = true;
		((Control)使能IC).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)使能IC).Location = new Point(16, 22);
		((Control)使能IC).Margin = new Padding(2);
		((Control)使能IC).Name = "使能IC";
		((Control)使能IC).Size = new Size(81, 18);
		((Control)使能IC).TabIndex = 40;
		((Control)使能IC).Text = "EnableIC";
		((ButtonBase)使能IC).UseVisualStyleBackColor = true;
		((Control)使能IC).UseWaitCursor = true;
		((Control)无IC).AutoSize = true;
		无IC.Checked = true;
		((Control)无IC).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)无IC).Location = new Point(16, 46);
		((Control)无IC).Margin = new Padding(2);
		((Control)无IC).Name = "无IC";
		((Control)无IC).Size = new Size(67, 18);
		((Control)无IC).TabIndex = 41;
		无IC.TabStop = true;
		((Control)无IC).Text = "NoneIC";
		((ButtonBase)无IC).UseVisualStyleBackColor = true;
		((Control)无IC).UseWaitCursor = true;
		((Control)groupBox46).Controls.Add((Control)(object)jiliangxing);
		((Control)groupBox46).Controls.Add((Control)(object)yufufei);
		((Control)groupBox46).Location = new Point(16, 106);
		((Control)groupBox46).Margin = new Padding(2);
		((Control)groupBox46).Name = "groupBox46";
		((Control)groupBox46).Padding = new Padding(2);
		((Control)groupBox46).Size = new Size(91, 78);
		((Control)groupBox46).TabIndex = 60;
		groupBox46.TabStop = false;
		((Control)groupBox46).UseWaitCursor = true;
		((Control)jiliangxing).AutoSize = true;
		jiliangxing.Checked = true;
		((Control)jiliangxing).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)jiliangxing).Location = new Point(6, 42);
		((Control)jiliangxing).Margin = new Padding(2);
		((Control)jiliangxing).Name = "jiliangxing";
		((Control)jiliangxing).Size = new Size(107, 16);
		((Control)jiliangxing).TabIndex = 56;
		jiliangxing.TabStop = true;
		((Control)jiliangxing).Text = "metering type ";
		((ButtonBase)jiliangxing).UseVisualStyleBackColor = true;
		((Control)jiliangxing).UseWaitCursor = true;
		((Control)yufufei).AutoSize = true;
		((Control)yufufei).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)yufufei).Location = new Point(6, 20);
		((Control)yufufei).Margin = new Padding(2);
		((Control)yufufei).Name = "yufufei";
		((Control)yufufei).Size = new Size(95, 16);
		((Control)yufufei).TabIndex = 55;
		((Control)yufufei).Text = "Prepaid type";
		((ButtonBase)yufufei).UseVisualStyleBackColor = true;
		((Control)yufufei).UseWaitCursor = true;
		((Control)dlt645xieyi).AutoSize = true;
		((Control)dlt645xieyi).Location = new Point(19, 191);
		((Control)dlt645xieyi).Margin = new Padding(2);
		((Control)dlt645xieyi).Name = "dlt645xieyi";
		((Control)dlt645xieyi).Size = new Size(178, 20);
		((Control)dlt645xieyi).TabIndex = 59;
		((Control)dlt645xieyi).Text = "DLT645-07 agreement";
		((ButtonBase)dlt645xieyi).UseVisualStyleBackColor = true;
		((Control)dlt645xieyi).UseWaitCursor = true;
		((Control)ADF表号).Location = new Point(64, 74);
		((Control)ADF表号).Margin = new Padding(2);
		((TextBoxBase)ADF表号).MaxLength = 10;
		((Control)ADF表号).Name = "ADF表号";
		((Control)ADF表号).Size = new Size(122, 26);
		((Control)ADF表号).TabIndex = 38;
		((Control)ADF表号).Text = "0000000001";
		((Control)ADF表号).UseWaitCursor = true;
		((Control)buttonReadPhase).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)buttonReadPhase).Location = new Point(202, 149);
		((Control)buttonReadPhase).Margin = new Padding(2);
		((Control)buttonReadPhase).Name = "buttonReadPhase";
		((Control)buttonReadPhase).Size = new Size(55, 26);
		((Control)buttonReadPhase).TabIndex = 5;
		((Control)buttonReadPhase).Text = "Read";
		((ButtonBase)buttonReadPhase).UseVisualStyleBackColor = true;
		((Control)buttonReadPhase).UseWaitCursor = true;
		((Control)buttonReadPhase).Click += buttonReadPhase_Click_1;
		((Control)buttonChangePhase).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)buttonChangePhase).Location = new Point(202, 122);
		((Control)buttonChangePhase).Margin = new Padding(2);
		((Control)buttonChangePhase).Name = "buttonChangePhase";
		((Control)buttonChangePhase).Size = new Size(55, 26);
		((Control)buttonChangePhase).TabIndex = 4;
		((Control)buttonChangePhase).Text = "Setting";
		((ButtonBase)buttonChangePhase).UseVisualStyleBackColor = true;
		((Control)buttonChangePhase).UseWaitCursor = true;
		((Control)buttonChangePhase).Click += buttonChangePhase_Click;
		((Control)三相数量).Location = new Point(204, 44);
		((Control)三相数量).Margin = new Padding(2);
		((TextBoxBase)三相数量).MaxLength = 2;
		((Control)三相数量).Name = "三相数量";
		((Control)三相数量).Size = new Size(35, 26);
		((Control)三相数量).TabIndex = 3;
		((Control)三相数量).Text = "4";
		((Control)三相数量).UseWaitCursor = true;
		((Control)单相数量).Location = new Point(204, 13);
		((Control)单相数量).Margin = new Padding(2);
		((TextBoxBase)单相数量).MaxLength = 2;
		((Control)单相数量).Name = "单相数量";
		((Control)单相数量).Size = new Size(35, 26);
		((Control)单相数量).TabIndex = 2;
		((Control)单相数量).Text = "0";
		((Control)单相数量).UseWaitCursor = true;
		((Control)label146).AutoSize = true;
		((Control)label146).Location = new Point(16, 44);
		((Control)label146).Margin = new Padding(2, 0, 2, 0);
		((Control)label146).Name = "label146";
		((Control)label146).Size = new Size(199, 16);
		((Control)label146).TabIndex = 1;
		((Control)label146).Text = "Number of three phases：";
		((Control)label146).UseWaitCursor = true;
		((Control)label147).AutoSize = true;
		((Control)label147).Location = new Point(13, 16);
		((Control)label147).Margin = new Padding(2, 0, 2, 0);
		((Control)label147).Name = "label147";
		((Control)label147).Size = new Size(199, 16);
		((Control)label147).TabIndex = 0;
		((Control)label147).Text = "Number of single phase：";
		((Control)label147).UseWaitCursor = true;
		((Control)label179).AutoSize = true;
		((Control)label179).Location = new Point(14, 80);
		((Control)label179).Margin = new Padding(2, 0, 2, 0);
		((Control)label179).Name = "label179";
		((Control)label179).Size = new Size(87, 16);
		((Control)label179).TabIndex = 39;
		((Control)label179).Text = "Table No：";
		((Control)label179).UseWaitCursor = true;
		((Control)tabPage5).BackColor = Color.Gainsboro;
		((Control)tabPage5).Controls.Add((Control)(object)button14);
		((Control)tabPage5).Controls.Add((Control)(object)groupBox16);
		((Control)tabPage5).Controls.Add((Control)(object)groupBox17);
		((Control)tabPage5).Controls.Add((Control)(object)groupBox19);
		tabPage5.Location = new Point(4, 22);
		((Control)tabPage5).Margin = new Padding(2);
		((Control)tabPage5).Name = "tabPage5";
		((Control)tabPage5).Size = new Size(608, 632);
		tabPage5.TabIndex = 4;
		((Control)tabPage5).Text = "Rate";
		((Control)button14).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button14).Location = new Point(29, 26);
		((Control)button14).Margin = new Padding(2);
		((Control)button14).Name = "button14";
		((Control)button14).Size = new Size(96, 22);
		((Control)button14).TabIndex = 64;
		((Control)button14).Text = "check time";
		((ButtonBase)button14).UseVisualStyleBackColor = true;
		((Control)button14).Click += button14_Click;
		((Control)groupBox16).Controls.Add((Control)(object)buttonReadTimeZone);
		((Control)groupBox16).Controls.Add((Control)(object)buttonSetTimeZone);
		((Control)groupBox16).Controls.Add((Control)(object)label99);
		((Control)groupBox16).Controls.Add((Control)(object)label100);
		((Control)groupBox16).Controls.Add((Control)(object)label101);
		((Control)groupBox16).Controls.Add((Control)(object)label102);
		((Control)groupBox16).Controls.Add((Control)(object)label116);
		((Control)groupBox16).Controls.Add((Control)(object)label117);
		((Control)groupBox16).Controls.Add((Control)(object)label118);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxMonth4);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxDay4);
		((Control)groupBox16).Controls.Add((Control)(object)comboBoxschedu4);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxMonth3);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxDay3);
		((Control)groupBox16).Controls.Add((Control)(object)comboBoxschedu3);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxMonth2);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxDay2);
		((Control)groupBox16).Controls.Add((Control)(object)comboBoxschedu2);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxMonth1);
		((Control)groupBox16).Controls.Add((Control)(object)textBoxDay1);
		((Control)groupBox16).Controls.Add((Control)(object)comboBoxschedu1);
		((Control)groupBox16).Location = new Point(322, 76);
		((Control)groupBox16).Margin = new Padding(2);
		((Control)groupBox16).Name = "groupBox16";
		((Control)groupBox16).Padding = new Padding(2);
		((Control)groupBox16).Size = new Size(250, 422);
		((Control)groupBox16).TabIndex = 63;
		groupBox16.TabStop = false;
		((Control)groupBox16).Text = "Time zone table";
		((Control)buttonReadTimeZone).Location = new Point(14, 166);
		((Control)buttonReadTimeZone).Margin = new Padding(2);
		((Control)buttonReadTimeZone).Name = "buttonReadTimeZone";
		((Control)buttonReadTimeZone).Size = new Size(52, 22);
		((Control)buttonReadTimeZone).TabIndex = 117;
		((Control)buttonReadTimeZone).Text = "read";
		((ButtonBase)buttonReadTimeZone).UseVisualStyleBackColor = true;
		((Control)buttonReadTimeZone).Click += buttonReadTimeZone_Click;
		((Control)buttonSetTimeZone).Location = new Point(78, 166);
		((Control)buttonSetTimeZone).Margin = new Padding(2);
		((Control)buttonSetTimeZone).Name = "buttonSetTimeZone";
		((Control)buttonSetTimeZone).Size = new Size(52, 22);
		((Control)buttonSetTimeZone).TabIndex = 116;
		((Control)buttonSetTimeZone).Text = "set";
		((ButtonBase)buttonSetTimeZone).UseVisualStyleBackColor = true;
		((Control)buttonSetTimeZone).Click += buttonSetTimeZone_Click;
		((Control)label99).AutoSize = true;
		((Control)label99).Location = new Point(20, 22);
		((Control)label99).Margin = new Padding(2, 0, 2, 0);
		((Control)label99).Name = "label99";
		((Control)label99).Size = new Size(65, 12);
		((Control)label99).TabIndex = 91;
		((Control)label99).Text = "Time table";
		((Control)label100).AutoSize = true;
		((Control)label100).Location = new Point(132, 22);
		((Control)label100).Margin = new Padding(2, 0, 2, 0);
		((Control)label100).Name = "label100";
		((Control)label100).Size = new Size(35, 12);
		((Control)label100).TabIndex = 90;
		((Control)label100).Text = "month";
		((Control)label101).AutoSize = true;
		((Control)label101).Location = new Point(98, 20);
		((Control)label101).Margin = new Padding(2, 0, 2, 0);
		((Control)label101).Name = "label101";
		((Control)label101).Size = new Size(23, 12);
		((Control)label101).TabIndex = 89;
		((Control)label101).Text = "day";
		((Control)label102).AutoSize = true;
		((Control)label102).Location = new Point(8, 118);
		((Control)label102).Margin = new Padding(2, 0, 2, 0);
		((Control)label102).Name = "label102";
		((Control)label102).Size = new Size(11, 12);
		((Control)label102).TabIndex = 84;
		((Control)label102).Text = "4";
		((Control)label116).AutoSize = true;
		((Control)label116).Location = new Point(8, 94);
		((Control)label116).Margin = new Padding(2, 0, 2, 0);
		((Control)label116).Name = "label116";
		((Control)label116).Size = new Size(11, 12);
		((Control)label116).TabIndex = 83;
		((Control)label116).Text = "3";
		((Control)label117).AutoSize = true;
		((Control)label117).Location = new Point(8, 70);
		((Control)label117).Margin = new Padding(2, 0, 2, 0);
		((Control)label117).Name = "label117";
		((Control)label117).Size = new Size(11, 12);
		((Control)label117).TabIndex = 82;
		((Control)label117).Text = "2";
		((Control)label118).AutoSize = true;
		((Control)label118).Location = new Point(8, 44);
		((Control)label118).Margin = new Padding(2, 0, 2, 0);
		((Control)label118).Name = "label118";
		((Control)label118).Size = new Size(11, 12);
		((Control)label118).TabIndex = 81;
		((Control)label118).Text = "1";
		((Control)textBoxMonth4).Location = new Point(130, 115);
		((Control)textBoxMonth4).Margin = new Padding(2);
		((TextBoxBase)textBoxMonth4).MaxLength = 2;
		((Control)textBoxMonth4).Name = "textBoxMonth4";
		((Control)textBoxMonth4).Size = new Size(30, 21);
		((Control)textBoxMonth4).TabIndex = 68;
		((Control)textBoxMonth4).Text = "0";
		((Control)textBoxDay4).Location = new Point(94, 115);
		((Control)textBoxDay4).Margin = new Padding(2);
		((TextBoxBase)textBoxDay4).MaxLength = 2;
		((Control)textBoxDay4).Name = "textBoxDay4";
		((Control)textBoxDay4).Size = new Size(30, 21);
		((Control)textBoxDay4).TabIndex = 67;
		((Control)textBoxDay4).Text = "0";
		comboBoxschedu4.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxschedu4).FormattingEnabled = true;
		comboBoxschedu4.Items.AddRange(new object[3] { "0", "时段表1", "时段表2" });
		((Control)comboBoxschedu4).Location = new Point(22, 115);
		((Control)comboBoxschedu4).Margin = new Padding(2);
		((Control)comboBoxschedu4).Name = "comboBoxschedu4";
		((Control)comboBoxschedu4).Size = new Size(66, 20);
		((Control)comboBoxschedu4).TabIndex = 66;
		((Control)textBoxMonth3).Location = new Point(130, 90);
		((Control)textBoxMonth3).Margin = new Padding(2);
		((TextBoxBase)textBoxMonth3).MaxLength = 2;
		((Control)textBoxMonth3).Name = "textBoxMonth3";
		((Control)textBoxMonth3).Size = new Size(30, 21);
		((Control)textBoxMonth3).TabIndex = 65;
		((Control)textBoxMonth3).Text = "0";
		((Control)textBoxDay3).Location = new Point(94, 90);
		((Control)textBoxDay3).Margin = new Padding(2);
		((TextBoxBase)textBoxDay3).MaxLength = 2;
		((Control)textBoxDay3).Name = "textBoxDay3";
		((Control)textBoxDay3).Size = new Size(30, 21);
		((Control)textBoxDay3).TabIndex = 64;
		((Control)textBoxDay3).Text = "0";
		comboBoxschedu3.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxschedu3).FormattingEnabled = true;
		comboBoxschedu3.Items.AddRange(new object[3] { "0", "时段表1", "时段表2" });
		((Control)comboBoxschedu3).Location = new Point(22, 90);
		((Control)comboBoxschedu3).Margin = new Padding(2);
		((Control)comboBoxschedu3).Name = "comboBoxschedu3";
		((Control)comboBoxschedu3).Size = new Size(66, 20);
		((Control)comboBoxschedu3).TabIndex = 63;
		((Control)textBoxMonth2).Location = new Point(130, 65);
		((Control)textBoxMonth2).Margin = new Padding(2);
		((TextBoxBase)textBoxMonth2).MaxLength = 2;
		((Control)textBoxMonth2).Name = "textBoxMonth2";
		((Control)textBoxMonth2).Size = new Size(30, 21);
		((Control)textBoxMonth2).TabIndex = 62;
		((Control)textBoxMonth2).Text = "0";
		((Control)textBoxDay2).Location = new Point(94, 65);
		((Control)textBoxDay2).Margin = new Padding(2);
		((TextBoxBase)textBoxDay2).MaxLength = 2;
		((Control)textBoxDay2).Name = "textBoxDay2";
		((Control)textBoxDay2).Size = new Size(30, 21);
		((Control)textBoxDay2).TabIndex = 61;
		((Control)textBoxDay2).Text = "0";
		comboBoxschedu2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxschedu2).FormattingEnabled = true;
		comboBoxschedu2.Items.AddRange(new object[3] { "0", "时段表1", "时段表2" });
		((Control)comboBoxschedu2).Location = new Point(22, 65);
		((Control)comboBoxschedu2).Margin = new Padding(2);
		((Control)comboBoxschedu2).Name = "comboBoxschedu2";
		((Control)comboBoxschedu2).Size = new Size(66, 20);
		((Control)comboBoxschedu2).TabIndex = 60;
		((Control)textBoxMonth1).Location = new Point(130, 40);
		((Control)textBoxMonth1).Margin = new Padding(2);
		((TextBoxBase)textBoxMonth1).MaxLength = 2;
		((Control)textBoxMonth1).Name = "textBoxMonth1";
		((Control)textBoxMonth1).Size = new Size(30, 21);
		((Control)textBoxMonth1).TabIndex = 59;
		((Control)textBoxMonth1).Text = "0";
		((Control)textBoxDay1).Location = new Point(94, 40);
		((Control)textBoxDay1).Margin = new Padding(2);
		((TextBoxBase)textBoxDay1).MaxLength = 2;
		((Control)textBoxDay1).Name = "textBoxDay1";
		((Control)textBoxDay1).Size = new Size(30, 21);
		((Control)textBoxDay1).TabIndex = 58;
		((Control)textBoxDay1).Text = "0";
		comboBoxschedu1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxschedu1).FormattingEnabled = true;
		comboBoxschedu1.Items.AddRange(new object[3] { "0", "时段表1", "时段表2" });
		((Control)comboBoxschedu1).Location = new Point(22, 40);
		((Control)comboBoxschedu1).Margin = new Padding(2);
		((Control)comboBoxschedu1).Name = "comboBoxschedu1";
		((Control)comboBoxschedu1).Size = new Size(66, 20);
		((Control)comboBoxschedu1).TabIndex = 57;
		((Control)groupBox17).Controls.Add((Control)(object)buttonReadSched2);
		((Control)groupBox17).Controls.Add((Control)(object)buttonSetSched2);
		((Control)groupBox17).Controls.Add((Control)(object)label119);
		((Control)groupBox17).Controls.Add((Control)(object)label122);
		((Control)groupBox17).Controls.Add((Control)(object)label123);
		((Control)groupBox17).Controls.Add((Control)(object)label124);
		((Control)groupBox17).Controls.Add((Control)(object)label125);
		((Control)groupBox17).Controls.Add((Control)(object)label126);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge14_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge13_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge12_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge11_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge10_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge9_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute14_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute13_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute12_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute11_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute10_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute9_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour14_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour13_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour12_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour11_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour10_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour9_S2);
		((Control)groupBox17).Controls.Add((Control)(object)label127);
		((Control)groupBox17).Controls.Add((Control)(object)label128);
		((Control)groupBox17).Controls.Add((Control)(object)label129);
		((Control)groupBox17).Controls.Add((Control)(object)label130);
		((Control)groupBox17).Controls.Add((Control)(object)label131);
		((Control)groupBox17).Controls.Add((Control)(object)label132);
		((Control)groupBox17).Controls.Add((Control)(object)label133);
		((Control)groupBox17).Controls.Add((Control)(object)label134);
		((Control)groupBox17).Controls.Add((Control)(object)label135);
		((Control)groupBox17).Controls.Add((Control)(object)label136);
		((Control)groupBox17).Controls.Add((Control)(object)label137);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour8_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute8_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge8_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour7_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute7_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge7_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour6_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute6_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge6_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour5_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute5_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge5_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour4_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute4_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge4_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour3_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute3_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge3_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour2_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute2_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge2_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxHour1_S2);
		((Control)groupBox17).Controls.Add((Control)(object)textBoxMinute1_S2);
		((Control)groupBox17).Controls.Add((Control)(object)comboBoxCharge1_S2);
		((Control)groupBox17).Location = new Point(175, 72);
		((Control)groupBox17).Margin = new Padding(2);
		((Control)groupBox17).Name = "groupBox17";
		((Control)groupBox17).Padding = new Padding(2);
		((Control)groupBox17).Size = new Size(148, 422);
		((Control)groupBox17).TabIndex = 62;
		groupBox17.TabStop = false;
		((Control)groupBox17).Text = "Time table 2";
		((Control)buttonReadSched2).Location = new Point(6, 392);
		((Control)buttonReadSched2).Margin = new Padding(2);
		((Control)buttonReadSched2).Name = "buttonReadSched2";
		((Control)buttonReadSched2).Size = new Size(52, 22);
		((Control)buttonReadSched2).TabIndex = 117;
		((Control)buttonReadSched2).Text = "read";
		((ButtonBase)buttonReadSched2).UseVisualStyleBackColor = true;
		((Control)buttonReadSched2).Click += buttonReadSched2_Click;
		((Control)buttonSetSched2).Location = new Point(70, 392);
		((Control)buttonSetSched2).Margin = new Padding(2);
		((Control)buttonSetSched2).Name = "buttonSetSched2";
		((Control)buttonSetSched2).Size = new Size(52, 22);
		((Control)buttonSetSched2).TabIndex = 116;
		((Control)buttonSetSched2).Text = "set";
		((ButtonBase)buttonSetSched2).UseVisualStyleBackColor = true;
		((Control)buttonSetSched2).Click += buttonSetSched2_Click;
		((Control)label119).AutoSize = true;
		((Control)label119).Location = new Point(8, 370);
		((Control)label119).Margin = new Padding(2, 0, 2, 0);
		((Control)label119).Name = "label119";
		((Control)label119).Size = new Size(17, 12);
		((Control)label119).TabIndex = 115;
		((Control)label119).Text = "14";
		((Control)label122).AutoSize = true;
		((Control)label122).Location = new Point(8, 344);
		((Control)label122).Margin = new Padding(2, 0, 2, 0);
		((Control)label122).Name = "label122";
		((Control)label122).Size = new Size(17, 12);
		((Control)label122).TabIndex = 114;
		((Control)label122).Text = "13";
		((Control)label123).AutoSize = true;
		((Control)label123).Location = new Point(8, 319);
		((Control)label123).Margin = new Padding(2, 0, 2, 0);
		((Control)label123).Name = "label123";
		((Control)label123).Size = new Size(17, 12);
		((Control)label123).TabIndex = 113;
		((Control)label123).Text = "12";
		((Control)label124).AutoSize = true;
		((Control)label124).Location = new Point(8, 294);
		((Control)label124).Margin = new Padding(2, 0, 2, 0);
		((Control)label124).Name = "label124";
		((Control)label124).Size = new Size(17, 12);
		((Control)label124).TabIndex = 112;
		((Control)label124).Text = "11";
		((Control)label125).AutoSize = true;
		((Control)label125).Location = new Point(8, 269);
		((Control)label125).Margin = new Padding(2, 0, 2, 0);
		((Control)label125).Name = "label125";
		((Control)label125).Size = new Size(17, 12);
		((Control)label125).TabIndex = 111;
		((Control)label125).Text = "10";
		((Control)label126).AutoSize = true;
		((Control)label126).Location = new Point(8, 244);
		((Control)label126).Margin = new Padding(2, 0, 2, 0);
		((Control)label126).Name = "label126";
		((Control)label126).Size = new Size(11, 12);
		((Control)label126).TabIndex = 110;
		((Control)label126).Text = "9";
		((ListControl)comboBoxCharge14_S2).DisplayMember = "0";
		comboBoxCharge14_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge14_S2).FormattingEnabled = true;
		comboBoxCharge14_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge14_S2).Location = new Point(26, 365);
		((Control)comboBoxCharge14_S2).Margin = new Padding(2);
		((Control)comboBoxCharge14_S2).Name = "comboBoxCharge14_S2";
		((Control)comboBoxCharge14_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge14_S2).TabIndex = 109;
		((ListControl)comboBoxCharge14_S2).ValueMember = "0";
		comboBoxCharge13_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge13_S2).FormattingEnabled = true;
		comboBoxCharge13_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge13_S2).Location = new Point(26, 340);
		((Control)comboBoxCharge13_S2).Margin = new Padding(2);
		((Control)comboBoxCharge13_S2).Name = "comboBoxCharge13_S2";
		((Control)comboBoxCharge13_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge13_S2).TabIndex = 108;
		comboBoxCharge12_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge12_S2).FormattingEnabled = true;
		comboBoxCharge12_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge12_S2).Location = new Point(26, 314);
		((Control)comboBoxCharge12_S2).Margin = new Padding(2);
		((Control)comboBoxCharge12_S2).Name = "comboBoxCharge12_S2";
		((Control)comboBoxCharge12_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge12_S2).TabIndex = 107;
		comboBoxCharge11_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge11_S2).FormattingEnabled = true;
		comboBoxCharge11_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge11_S2).Location = new Point(26, 290);
		((Control)comboBoxCharge11_S2).Margin = new Padding(2);
		((Control)comboBoxCharge11_S2).Name = "comboBoxCharge11_S2";
		((Control)comboBoxCharge11_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge11_S2).TabIndex = 106;
		comboBoxCharge10_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge10_S2).FormattingEnabled = true;
		comboBoxCharge10_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge10_S2).Location = new Point(26, 266);
		((Control)comboBoxCharge10_S2).Margin = new Padding(2);
		((Control)comboBoxCharge10_S2).Name = "comboBoxCharge10_S2";
		((Control)comboBoxCharge10_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge10_S2).TabIndex = 105;
		comboBoxCharge9_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge9_S2).FormattingEnabled = true;
		comboBoxCharge9_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge9_S2).Location = new Point(26, 240);
		((Control)comboBoxCharge9_S2).Margin = new Padding(2);
		((Control)comboBoxCharge9_S2).Name = "comboBoxCharge9_S2";
		((Control)comboBoxCharge9_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge9_S2).TabIndex = 104;
		((Control)textBoxMinute14_S2).Location = new Point(66, 365);
		((Control)textBoxMinute14_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute14_S2).MaxLength = 2;
		((Control)textBoxMinute14_S2).Name = "textBoxMinute14_S2";
		((Control)textBoxMinute14_S2).Size = new Size(30, 21);
		((Control)textBoxMinute14_S2).TabIndex = 103;
		((Control)textBoxMinute14_S2).Text = "0";
		((Control)textBoxMinute13_S2).Location = new Point(66, 340);
		((Control)textBoxMinute13_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute13_S2).MaxLength = 2;
		((Control)textBoxMinute13_S2).Name = "textBoxMinute13_S2";
		((Control)textBoxMinute13_S2).Size = new Size(30, 21);
		((Control)textBoxMinute13_S2).TabIndex = 102;
		((Control)textBoxMinute13_S2).Text = "0";
		((Control)textBoxMinute12_S2).Location = new Point(66, 314);
		((Control)textBoxMinute12_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute12_S2).MaxLength = 2;
		((Control)textBoxMinute12_S2).Name = "textBoxMinute12_S2";
		((Control)textBoxMinute12_S2).Size = new Size(30, 21);
		((Control)textBoxMinute12_S2).TabIndex = 101;
		((Control)textBoxMinute12_S2).Text = "0";
		((Control)textBoxMinute11_S2).Location = new Point(66, 290);
		((Control)textBoxMinute11_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute11_S2).MaxLength = 2;
		((Control)textBoxMinute11_S2).Name = "textBoxMinute11_S2";
		((Control)textBoxMinute11_S2).Size = new Size(30, 21);
		((Control)textBoxMinute11_S2).TabIndex = 100;
		((Control)textBoxMinute11_S2).Text = "0";
		((Control)textBoxMinute10_S2).Location = new Point(66, 266);
		((Control)textBoxMinute10_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute10_S2).MaxLength = 2;
		((Control)textBoxMinute10_S2).Name = "textBoxMinute10_S2";
		((Control)textBoxMinute10_S2).Size = new Size(30, 21);
		((Control)textBoxMinute10_S2).TabIndex = 99;
		((Control)textBoxMinute10_S2).Text = "0";
		((Control)textBoxMinute9_S2).Location = new Point(66, 240);
		((Control)textBoxMinute9_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute9_S2).MaxLength = 2;
		((Control)textBoxMinute9_S2).Name = "textBoxMinute9_S2";
		((Control)textBoxMinute9_S2).Size = new Size(30, 21);
		((Control)textBoxMinute9_S2).TabIndex = 98;
		((Control)textBoxMinute9_S2).Text = "0";
		((Control)textBoxHour14_S2).Location = new Point(101, 365);
		((Control)textBoxHour14_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour14_S2).MaxLength = 2;
		((Control)textBoxHour14_S2).Name = "textBoxHour14_S2";
		((Control)textBoxHour14_S2).Size = new Size(30, 21);
		((Control)textBoxHour14_S2).TabIndex = 97;
		((Control)textBoxHour14_S2).Text = "0";
		((Control)textBoxHour13_S2).Location = new Point(101, 340);
		((Control)textBoxHour13_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour13_S2).MaxLength = 2;
		((Control)textBoxHour13_S2).Name = "textBoxHour13_S2";
		((Control)textBoxHour13_S2).Size = new Size(30, 21);
		((Control)textBoxHour13_S2).TabIndex = 96;
		((Control)textBoxHour13_S2).Text = "0";
		((Control)textBoxHour12_S2).Location = new Point(101, 314);
		((Control)textBoxHour12_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour12_S2).MaxLength = 2;
		((Control)textBoxHour12_S2).Name = "textBoxHour12_S2";
		((Control)textBoxHour12_S2).Size = new Size(30, 21);
		((Control)textBoxHour12_S2).TabIndex = 95;
		((Control)textBoxHour12_S2).Text = "0";
		((Control)textBoxHour11_S2).Location = new Point(101, 290);
		((Control)textBoxHour11_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour11_S2).MaxLength = 2;
		((Control)textBoxHour11_S2).Name = "textBoxHour11_S2";
		((Control)textBoxHour11_S2).Size = new Size(30, 21);
		((Control)textBoxHour11_S2).TabIndex = 94;
		((Control)textBoxHour11_S2).Text = "0";
		((Control)textBoxHour10_S2).Location = new Point(101, 266);
		((Control)textBoxHour10_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour10_S2).MaxLength = 2;
		((Control)textBoxHour10_S2).Name = "textBoxHour10_S2";
		((Control)textBoxHour10_S2).Size = new Size(30, 21);
		((Control)textBoxHour10_S2).TabIndex = 93;
		((Control)textBoxHour10_S2).Text = "0";
		((Control)textBoxHour9_S2).Location = new Point(101, 240);
		((Control)textBoxHour9_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour9_S2).MaxLength = 2;
		((Control)textBoxHour9_S2).Name = "textBoxHour9_S2";
		((Control)textBoxHour9_S2).Size = new Size(30, 21);
		((Control)textBoxHour9_S2).TabIndex = 92;
		((Control)textBoxHour9_S2).Text = "0";
		((Control)label127).AutoSize = true;
		((Control)label127).Location = new Point(28, 22);
		((Control)label127).Margin = new Padding(2, 0, 2, 0);
		((Control)label127).Name = "label127";
		((Control)label127).Size = new Size(29, 12);
		((Control)label127).TabIndex = 91;
		((Control)label127).Text = "rate";
		((Control)label128).AutoSize = true;
		((Control)label128).Location = new Point(104, 22);
		((Control)label128).Margin = new Padding(2, 0, 2, 0);
		((Control)label128).Name = "label128";
		((Control)label128).Size = new Size(35, 12);
		((Control)label128).TabIndex = 90;
		((Control)label128).Text = "hours";
		((Control)label129).AutoSize = true;
		((Control)label129).Location = new Point(59, 22);
		((Control)label129).Margin = new Padding(2, 0, 2, 0);
		((Control)label129).Name = "label129";
		((Control)label129).Size = new Size(41, 12);
		((Control)label129).TabIndex = 89;
		((Control)label129).Text = "minute";
		((Control)label130).AutoSize = true;
		((Control)label130).Location = new Point(8, 218);
		((Control)label130).Margin = new Padding(2, 0, 2, 0);
		((Control)label130).Name = "label130";
		((Control)label130).Size = new Size(11, 12);
		((Control)label130).TabIndex = 88;
		((Control)label130).Text = "8";
		((Control)label131).AutoSize = true;
		((Control)label131).Location = new Point(8, 194);
		((Control)label131).Margin = new Padding(2, 0, 2, 0);
		((Control)label131).Name = "label131";
		((Control)label131).Size = new Size(11, 12);
		((Control)label131).TabIndex = 87;
		((Control)label131).Text = "7";
		((Control)label132).AutoSize = true;
		((Control)label132).Location = new Point(8, 170);
		((Control)label132).Margin = new Padding(2, 0, 2, 0);
		((Control)label132).Name = "label132";
		((Control)label132).Size = new Size(11, 12);
		((Control)label132).TabIndex = 86;
		((Control)label132).Text = "6";
		((Control)label133).AutoSize = true;
		((Control)label133).Location = new Point(8, 144);
		((Control)label133).Margin = new Padding(2, 0, 2, 0);
		((Control)label133).Name = "label133";
		((Control)label133).Size = new Size(11, 12);
		((Control)label133).TabIndex = 85;
		((Control)label133).Text = "5";
		((Control)label134).AutoSize = true;
		((Control)label134).Location = new Point(8, 118);
		((Control)label134).Margin = new Padding(2, 0, 2, 0);
		((Control)label134).Name = "label134";
		((Control)label134).Size = new Size(11, 12);
		((Control)label134).TabIndex = 84;
		((Control)label134).Text = "4";
		((Control)label135).AutoSize = true;
		((Control)label135).Location = new Point(8, 94);
		((Control)label135).Margin = new Padding(2, 0, 2, 0);
		((Control)label135).Name = "label135";
		((Control)label135).Size = new Size(11, 12);
		((Control)label135).TabIndex = 83;
		((Control)label135).Text = "3";
		((Control)label136).AutoSize = true;
		((Control)label136).Location = new Point(8, 70);
		((Control)label136).Margin = new Padding(2, 0, 2, 0);
		((Control)label136).Name = "label136";
		((Control)label136).Size = new Size(11, 12);
		((Control)label136).TabIndex = 82;
		((Control)label136).Text = "2";
		((Control)label137).AutoSize = true;
		((Control)label137).Location = new Point(8, 44);
		((Control)label137).Margin = new Padding(2, 0, 2, 0);
		((Control)label137).Name = "label137";
		((Control)label137).Size = new Size(11, 12);
		((Control)label137).TabIndex = 81;
		((Control)label137).Text = "1";
		((Control)textBoxHour8_S2).Location = new Point(101, 214);
		((Control)textBoxHour8_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour8_S2).MaxLength = 2;
		((Control)textBoxHour8_S2).Name = "textBoxHour8_S2";
		((Control)textBoxHour8_S2).Size = new Size(30, 21);
		((Control)textBoxHour8_S2).TabIndex = 80;
		((Control)textBoxHour8_S2).Text = "0";
		((Control)textBoxMinute8_S2).Location = new Point(66, 214);
		((Control)textBoxMinute8_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute8_S2).MaxLength = 2;
		((Control)textBoxMinute8_S2).Name = "textBoxMinute8_S2";
		((Control)textBoxMinute8_S2).Size = new Size(30, 21);
		((Control)textBoxMinute8_S2).TabIndex = 79;
		((Control)textBoxMinute8_S2).Text = "0";
		comboBoxCharge8_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge8_S2).FormattingEnabled = true;
		comboBoxCharge8_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge8_S2).Location = new Point(26, 214);
		((Control)comboBoxCharge8_S2).Margin = new Padding(2);
		((Control)comboBoxCharge8_S2).Name = "comboBoxCharge8_S2";
		((Control)comboBoxCharge8_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge8_S2).TabIndex = 78;
		((Control)textBoxHour7_S2).Location = new Point(101, 190);
		((Control)textBoxHour7_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour7_S2).MaxLength = 2;
		((Control)textBoxHour7_S2).Name = "textBoxHour7_S2";
		((Control)textBoxHour7_S2).Size = new Size(30, 21);
		((Control)textBoxHour7_S2).TabIndex = 77;
		((Control)textBoxHour7_S2).Text = "0";
		((Control)textBoxMinute7_S2).Location = new Point(66, 190);
		((Control)textBoxMinute7_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute7_S2).MaxLength = 2;
		((Control)textBoxMinute7_S2).Name = "textBoxMinute7_S2";
		((Control)textBoxMinute7_S2).Size = new Size(30, 21);
		((Control)textBoxMinute7_S2).TabIndex = 76;
		((Control)textBoxMinute7_S2).Text = "0";
		comboBoxCharge7_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge7_S2).FormattingEnabled = true;
		comboBoxCharge7_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge7_S2).Location = new Point(26, 190);
		((Control)comboBoxCharge7_S2).Margin = new Padding(2);
		((Control)comboBoxCharge7_S2).Name = "comboBoxCharge7_S2";
		((Control)comboBoxCharge7_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge7_S2).TabIndex = 75;
		((Control)textBoxHour6_S2).Location = new Point(101, 166);
		((Control)textBoxHour6_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour6_S2).MaxLength = 2;
		((Control)textBoxHour6_S2).Name = "textBoxHour6_S2";
		((Control)textBoxHour6_S2).Size = new Size(30, 21);
		((Control)textBoxHour6_S2).TabIndex = 74;
		((Control)textBoxHour6_S2).Text = "0";
		((Control)textBoxMinute6_S2).Location = new Point(66, 166);
		((Control)textBoxMinute6_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute6_S2).MaxLength = 2;
		((Control)textBoxMinute6_S2).Name = "textBoxMinute6_S2";
		((Control)textBoxMinute6_S2).Size = new Size(30, 21);
		((Control)textBoxMinute6_S2).TabIndex = 73;
		((Control)textBoxMinute6_S2).Text = "0";
		comboBoxCharge6_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge6_S2).FormattingEnabled = true;
		comboBoxCharge6_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge6_S2).Location = new Point(26, 166);
		((Control)comboBoxCharge6_S2).Margin = new Padding(2);
		((Control)comboBoxCharge6_S2).Name = "comboBoxCharge6_S2";
		((Control)comboBoxCharge6_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge6_S2).TabIndex = 72;
		((Control)textBoxHour5_S2).Location = new Point(101, 140);
		((Control)textBoxHour5_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour5_S2).MaxLength = 2;
		((Control)textBoxHour5_S2).Name = "textBoxHour5_S2";
		((Control)textBoxHour5_S2).Size = new Size(30, 21);
		((Control)textBoxHour5_S2).TabIndex = 71;
		((Control)textBoxHour5_S2).Text = "0";
		((Control)textBoxMinute5_S2).Location = new Point(66, 140);
		((Control)textBoxMinute5_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute5_S2).MaxLength = 2;
		((Control)textBoxMinute5_S2).Name = "textBoxMinute5_S2";
		((Control)textBoxMinute5_S2).Size = new Size(30, 21);
		((Control)textBoxMinute5_S2).TabIndex = 70;
		((Control)textBoxMinute5_S2).Text = "0";
		comboBoxCharge5_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge5_S2).FormattingEnabled = true;
		comboBoxCharge5_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge5_S2).Location = new Point(26, 140);
		((Control)comboBoxCharge5_S2).Margin = new Padding(2);
		((Control)comboBoxCharge5_S2).Name = "comboBoxCharge5_S2";
		((Control)comboBoxCharge5_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge5_S2).TabIndex = 69;
		((Control)textBoxHour4_S2).Location = new Point(101, 115);
		((Control)textBoxHour4_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour4_S2).MaxLength = 2;
		((Control)textBoxHour4_S2).Name = "textBoxHour4_S2";
		((Control)textBoxHour4_S2).Size = new Size(30, 21);
		((Control)textBoxHour4_S2).TabIndex = 68;
		((Control)textBoxHour4_S2).Text = "0";
		((Control)textBoxMinute4_S2).Location = new Point(66, 115);
		((Control)textBoxMinute4_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute4_S2).MaxLength = 2;
		((Control)textBoxMinute4_S2).Name = "textBoxMinute4_S2";
		((Control)textBoxMinute4_S2).Size = new Size(30, 21);
		((Control)textBoxMinute4_S2).TabIndex = 67;
		((Control)textBoxMinute4_S2).Text = "0";
		comboBoxCharge4_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge4_S2).FormattingEnabled = true;
		comboBoxCharge4_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge4_S2).Location = new Point(26, 115);
		((Control)comboBoxCharge4_S2).Margin = new Padding(2);
		((Control)comboBoxCharge4_S2).Name = "comboBoxCharge4_S2";
		((Control)comboBoxCharge4_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge4_S2).TabIndex = 66;
		((Control)textBoxHour3_S2).Location = new Point(101, 90);
		((Control)textBoxHour3_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour3_S2).MaxLength = 2;
		((Control)textBoxHour3_S2).Name = "textBoxHour3_S2";
		((Control)textBoxHour3_S2).Size = new Size(30, 21);
		((Control)textBoxHour3_S2).TabIndex = 65;
		((Control)textBoxHour3_S2).Text = "0";
		((Control)textBoxMinute3_S2).Location = new Point(66, 90);
		((Control)textBoxMinute3_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute3_S2).MaxLength = 2;
		((Control)textBoxMinute3_S2).Name = "textBoxMinute3_S2";
		((Control)textBoxMinute3_S2).Size = new Size(30, 21);
		((Control)textBoxMinute3_S2).TabIndex = 64;
		((Control)textBoxMinute3_S2).Text = "0";
		comboBoxCharge3_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge3_S2).FormattingEnabled = true;
		comboBoxCharge3_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge3_S2).Location = new Point(26, 90);
		((Control)comboBoxCharge3_S2).Margin = new Padding(2);
		((Control)comboBoxCharge3_S2).Name = "comboBoxCharge3_S2";
		((Control)comboBoxCharge3_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge3_S2).TabIndex = 63;
		((Control)textBoxHour2_S2).Location = new Point(101, 65);
		((Control)textBoxHour2_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour2_S2).MaxLength = 2;
		((Control)textBoxHour2_S2).Name = "textBoxHour2_S2";
		((Control)textBoxHour2_S2).Size = new Size(30, 21);
		((Control)textBoxHour2_S2).TabIndex = 62;
		((Control)textBoxHour2_S2).Text = "0";
		((Control)textBoxMinute2_S2).Location = new Point(66, 65);
		((Control)textBoxMinute2_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute2_S2).MaxLength = 2;
		((Control)textBoxMinute2_S2).Name = "textBoxMinute2_S2";
		((Control)textBoxMinute2_S2).Size = new Size(30, 21);
		((Control)textBoxMinute2_S2).TabIndex = 61;
		((Control)textBoxMinute2_S2).Text = "0";
		comboBoxCharge2_S2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge2_S2).FormattingEnabled = true;
		comboBoxCharge2_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge2_S2).Location = new Point(26, 65);
		((Control)comboBoxCharge2_S2).Margin = new Padding(2);
		((Control)comboBoxCharge2_S2).Name = "comboBoxCharge2_S2";
		((Control)comboBoxCharge2_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge2_S2).TabIndex = 60;
		((Control)textBoxHour1_S2).Location = new Point(101, 40);
		((Control)textBoxHour1_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxHour1_S2).MaxLength = 2;
		((Control)textBoxHour1_S2).Name = "textBoxHour1_S2";
		((Control)textBoxHour1_S2).Size = new Size(30, 21);
		((Control)textBoxHour1_S2).TabIndex = 59;
		((Control)textBoxHour1_S2).Text = "0";
		((Control)textBoxMinute1_S2).Location = new Point(66, 40);
		((Control)textBoxMinute1_S2).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute1_S2).MaxLength = 2;
		((Control)textBoxMinute1_S2).Name = "textBoxMinute1_S2";
		((Control)textBoxMinute1_S2).Size = new Size(30, 21);
		((Control)textBoxMinute1_S2).TabIndex = 58;
		((Control)textBoxMinute1_S2).Text = "0";
		comboBoxCharge1_S2.DropDownStyle = (ComboBoxStyle)2;
		comboBoxCharge1_S2.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge1_S2).Location = new Point(26, 40);
		((Control)comboBoxCharge1_S2).Margin = new Padding(2);
		((Control)comboBoxCharge1_S2).Name = "comboBoxCharge1_S2";
		((Control)comboBoxCharge1_S2).Size = new Size(36, 20);
		((Control)comboBoxCharge1_S2).TabIndex = 57;
		((Control)groupBox19).Controls.Add((Control)(object)buttonReadSched1);
		((Control)groupBox19).Controls.Add((Control)(object)buttonSetSched1);
		((Control)groupBox19).Controls.Add((Control)(object)label138);
		((Control)groupBox19).Controls.Add((Control)(object)label139);
		((Control)groupBox19).Controls.Add((Control)(object)label140);
		((Control)groupBox19).Controls.Add((Control)(object)label141);
		((Control)groupBox19).Controls.Add((Control)(object)label143);
		((Control)groupBox19).Controls.Add((Control)(object)label151);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge14_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge13_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge12_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge11_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge10_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge9_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute14_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute13_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute12_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute11_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute10_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute9_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour14_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour13_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour12_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour11_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour10_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour9_S1);
		((Control)groupBox19).Controls.Add((Control)(object)label152);
		((Control)groupBox19).Controls.Add((Control)(object)label153);
		((Control)groupBox19).Controls.Add((Control)(object)label154);
		((Control)groupBox19).Controls.Add((Control)(object)label155);
		((Control)groupBox19).Controls.Add((Control)(object)label156);
		((Control)groupBox19).Controls.Add((Control)(object)label157);
		((Control)groupBox19).Controls.Add((Control)(object)label158);
		((Control)groupBox19).Controls.Add((Control)(object)label159);
		((Control)groupBox19).Controls.Add((Control)(object)label160);
		((Control)groupBox19).Controls.Add((Control)(object)label161);
		((Control)groupBox19).Controls.Add((Control)(object)label162);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour8_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute8_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge8_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour7_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute7_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge7_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour6_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute6_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge6_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour5_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute5_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge5_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour4_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute4_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge4_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour3_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute3_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge3_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour2_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute2_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge2_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxHour1_S1);
		((Control)groupBox19).Controls.Add((Control)(object)textBoxMinute1_S1);
		((Control)groupBox19).Controls.Add((Control)(object)comboBoxCharge1_S1);
		((Control)groupBox19).Location = new Point(29, 72);
		((Control)groupBox19).Margin = new Padding(2);
		((Control)groupBox19).Name = "groupBox19";
		((Control)groupBox19).Padding = new Padding(2);
		((Control)groupBox19).Size = new Size(140, 422);
		((Control)groupBox19).TabIndex = 61;
		groupBox19.TabStop = false;
		((Control)groupBox19).Text = "Time table 1";
		((Control)buttonReadSched1).Location = new Point(6, 392);
		((Control)buttonReadSched1).Margin = new Padding(2);
		((Control)buttonReadSched1).Name = "buttonReadSched1";
		((Control)buttonReadSched1).Size = new Size(52, 22);
		((Control)buttonReadSched1).TabIndex = 117;
		((Control)buttonReadSched1).Text = "read";
		((ButtonBase)buttonReadSched1).UseVisualStyleBackColor = true;
		((Control)buttonReadSched1).Click += buttonReadSched1_Click;
		((Control)buttonSetSched1).Location = new Point(70, 392);
		((Control)buttonSetSched1).Margin = new Padding(2);
		((Control)buttonSetSched1).Name = "buttonSetSched1";
		((Control)buttonSetSched1).Size = new Size(52, 22);
		((Control)buttonSetSched1).TabIndex = 116;
		((Control)buttonSetSched1).Text = "set";
		((ButtonBase)buttonSetSched1).UseVisualStyleBackColor = true;
		((Control)buttonSetSched1).Click += buttonSetSched1_Click;
		((Control)label138).AutoSize = true;
		((Control)label138).Location = new Point(8, 370);
		((Control)label138).Margin = new Padding(2, 0, 2, 0);
		((Control)label138).Name = "label138";
		((Control)label138).Size = new Size(17, 12);
		((Control)label138).TabIndex = 115;
		((Control)label138).Text = "14";
		((Control)label139).AutoSize = true;
		((Control)label139).Location = new Point(8, 344);
		((Control)label139).Margin = new Padding(2, 0, 2, 0);
		((Control)label139).Name = "label139";
		((Control)label139).Size = new Size(17, 12);
		((Control)label139).TabIndex = 114;
		((Control)label139).Text = "13";
		((Control)label140).AutoSize = true;
		((Control)label140).Location = new Point(8, 319);
		((Control)label140).Margin = new Padding(2, 0, 2, 0);
		((Control)label140).Name = "label140";
		((Control)label140).Size = new Size(17, 12);
		((Control)label140).TabIndex = 113;
		((Control)label140).Text = "12";
		((Control)label141).AutoSize = true;
		((Control)label141).Location = new Point(8, 294);
		((Control)label141).Margin = new Padding(2, 0, 2, 0);
		((Control)label141).Name = "label141";
		((Control)label141).Size = new Size(17, 12);
		((Control)label141).TabIndex = 112;
		((Control)label141).Text = "11";
		((Control)label143).AutoSize = true;
		((Control)label143).Location = new Point(8, 269);
		((Control)label143).Margin = new Padding(2, 0, 2, 0);
		((Control)label143).Name = "label143";
		((Control)label143).Size = new Size(17, 12);
		((Control)label143).TabIndex = 111;
		((Control)label143).Text = "10";
		((Control)label151).AutoSize = true;
		((Control)label151).Location = new Point(8, 244);
		((Control)label151).Margin = new Padding(2, 0, 2, 0);
		((Control)label151).Name = "label151";
		((Control)label151).Size = new Size(11, 12);
		((Control)label151).TabIndex = 110;
		((Control)label151).Text = "9";
		comboBoxCharge14_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge14_S1).FormattingEnabled = true;
		comboBoxCharge14_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge14_S1).Location = new Point(26, 365);
		((Control)comboBoxCharge14_S1).Margin = new Padding(2);
		((Control)comboBoxCharge14_S1).Name = "comboBoxCharge14_S1";
		((Control)comboBoxCharge14_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge14_S1).TabIndex = 109;
		comboBoxCharge13_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge13_S1).FormattingEnabled = true;
		comboBoxCharge13_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge13_S1).Location = new Point(26, 340);
		((Control)comboBoxCharge13_S1).Margin = new Padding(2);
		((Control)comboBoxCharge13_S1).Name = "comboBoxCharge13_S1";
		((Control)comboBoxCharge13_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge13_S1).TabIndex = 108;
		comboBoxCharge12_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge12_S1).FormattingEnabled = true;
		comboBoxCharge12_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge12_S1).Location = new Point(26, 314);
		((Control)comboBoxCharge12_S1).Margin = new Padding(2);
		((Control)comboBoxCharge12_S1).Name = "comboBoxCharge12_S1";
		((Control)comboBoxCharge12_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge12_S1).TabIndex = 107;
		comboBoxCharge11_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge11_S1).FormattingEnabled = true;
		comboBoxCharge11_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge11_S1).Location = new Point(26, 290);
		((Control)comboBoxCharge11_S1).Margin = new Padding(2);
		((Control)comboBoxCharge11_S1).Name = "comboBoxCharge11_S1";
		((Control)comboBoxCharge11_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge11_S1).TabIndex = 106;
		comboBoxCharge10_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge10_S1).FormattingEnabled = true;
		comboBoxCharge10_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge10_S1).Location = new Point(26, 266);
		((Control)comboBoxCharge10_S1).Margin = new Padding(2);
		((Control)comboBoxCharge10_S1).Name = "comboBoxCharge10_S1";
		((Control)comboBoxCharge10_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge10_S1).TabIndex = 105;
		comboBoxCharge9_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge9_S1).FormattingEnabled = true;
		comboBoxCharge9_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge9_S1).Location = new Point(26, 240);
		((Control)comboBoxCharge9_S1).Margin = new Padding(2);
		((Control)comboBoxCharge9_S1).Name = "comboBoxCharge9_S1";
		((Control)comboBoxCharge9_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge9_S1).TabIndex = 104;
		((Control)textBoxMinute14_S1).Location = new Point(66, 365);
		((Control)textBoxMinute14_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute14_S1).MaxLength = 2;
		((Control)textBoxMinute14_S1).Name = "textBoxMinute14_S1";
		((Control)textBoxMinute14_S1).Size = new Size(30, 21);
		((Control)textBoxMinute14_S1).TabIndex = 103;
		((Control)textBoxMinute14_S1).Text = "0";
		((Control)textBoxMinute13_S1).Location = new Point(66, 340);
		((Control)textBoxMinute13_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute13_S1).MaxLength = 2;
		((Control)textBoxMinute13_S1).Name = "textBoxMinute13_S1";
		((Control)textBoxMinute13_S1).Size = new Size(30, 21);
		((Control)textBoxMinute13_S1).TabIndex = 102;
		((Control)textBoxMinute13_S1).Text = "0";
		((Control)textBoxMinute12_S1).Location = new Point(66, 314);
		((Control)textBoxMinute12_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute12_S1).MaxLength = 2;
		((Control)textBoxMinute12_S1).Name = "textBoxMinute12_S1";
		((Control)textBoxMinute12_S1).Size = new Size(30, 21);
		((Control)textBoxMinute12_S1).TabIndex = 101;
		((Control)textBoxMinute12_S1).Text = "0";
		((Control)textBoxMinute11_S1).Location = new Point(66, 290);
		((Control)textBoxMinute11_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute11_S1).MaxLength = 2;
		((Control)textBoxMinute11_S1).Name = "textBoxMinute11_S1";
		((Control)textBoxMinute11_S1).Size = new Size(30, 21);
		((Control)textBoxMinute11_S1).TabIndex = 100;
		((Control)textBoxMinute11_S1).Text = "0";
		((Control)textBoxMinute10_S1).Location = new Point(66, 266);
		((Control)textBoxMinute10_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute10_S1).MaxLength = 2;
		((Control)textBoxMinute10_S1).Name = "textBoxMinute10_S1";
		((Control)textBoxMinute10_S1).Size = new Size(30, 21);
		((Control)textBoxMinute10_S1).TabIndex = 99;
		((Control)textBoxMinute10_S1).Text = "0";
		((Control)textBoxMinute9_S1).Location = new Point(66, 240);
		((Control)textBoxMinute9_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute9_S1).MaxLength = 2;
		((Control)textBoxMinute9_S1).Name = "textBoxMinute9_S1";
		((Control)textBoxMinute9_S1).Size = new Size(30, 21);
		((Control)textBoxMinute9_S1).TabIndex = 98;
		((Control)textBoxMinute9_S1).Text = "0";
		((Control)textBoxHour14_S1).Location = new Point(101, 365);
		((Control)textBoxHour14_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour14_S1).MaxLength = 2;
		((Control)textBoxHour14_S1).Name = "textBoxHour14_S1";
		((Control)textBoxHour14_S1).Size = new Size(30, 21);
		((Control)textBoxHour14_S1).TabIndex = 97;
		((Control)textBoxHour14_S1).Text = "0";
		((Control)textBoxHour13_S1).Location = new Point(101, 340);
		((Control)textBoxHour13_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour13_S1).MaxLength = 2;
		((Control)textBoxHour13_S1).Name = "textBoxHour13_S1";
		((Control)textBoxHour13_S1).Size = new Size(30, 21);
		((Control)textBoxHour13_S1).TabIndex = 96;
		((Control)textBoxHour13_S1).Text = "0";
		((Control)textBoxHour12_S1).Location = new Point(101, 314);
		((Control)textBoxHour12_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour12_S1).MaxLength = 2;
		((Control)textBoxHour12_S1).Name = "textBoxHour12_S1";
		((Control)textBoxHour12_S1).Size = new Size(30, 21);
		((Control)textBoxHour12_S1).TabIndex = 95;
		((Control)textBoxHour12_S1).Text = "0";
		((Control)textBoxHour11_S1).Location = new Point(101, 290);
		((Control)textBoxHour11_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour11_S1).MaxLength = 2;
		((Control)textBoxHour11_S1).Name = "textBoxHour11_S1";
		((Control)textBoxHour11_S1).Size = new Size(30, 21);
		((Control)textBoxHour11_S1).TabIndex = 94;
		((Control)textBoxHour11_S1).Text = "0";
		((Control)textBoxHour10_S1).Location = new Point(101, 266);
		((Control)textBoxHour10_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour10_S1).MaxLength = 2;
		((Control)textBoxHour10_S1).Name = "textBoxHour10_S1";
		((Control)textBoxHour10_S1).Size = new Size(30, 21);
		((Control)textBoxHour10_S1).TabIndex = 93;
		((Control)textBoxHour10_S1).Text = "0";
		((Control)textBoxHour9_S1).Location = new Point(101, 240);
		((Control)textBoxHour9_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour9_S1).MaxLength = 2;
		((Control)textBoxHour9_S1).Name = "textBoxHour9_S1";
		((Control)textBoxHour9_S1).Size = new Size(30, 21);
		((Control)textBoxHour9_S1).TabIndex = 92;
		((Control)textBoxHour9_S1).Text = "0";
		((Control)label152).AutoSize = true;
		((Control)label152).Location = new Point(28, 22);
		((Control)label152).Margin = new Padding(2, 0, 2, 0);
		((Control)label152).Name = "label152";
		((Control)label152).Size = new Size(29, 12);
		((Control)label152).TabIndex = 91;
		((Control)label152).Text = "rate";
		((Control)label153).AutoSize = true;
		((Control)label153).Location = new Point(104, 22);
		((Control)label153).Margin = new Padding(2, 0, 2, 0);
		((Control)label153).Name = "label153";
		((Control)label153).Size = new Size(35, 12);
		((Control)label153).TabIndex = 90;
		((Control)label153).Text = "hours";
		((Control)label154).AutoSize = true;
		((Control)label154).Location = new Point(59, 22);
		((Control)label154).Margin = new Padding(2, 0, 2, 0);
		((Control)label154).Name = "label154";
		((Control)label154).Size = new Size(41, 12);
		((Control)label154).TabIndex = 89;
		((Control)label154).Text = "minute";
		((Control)label155).AutoSize = true;
		((Control)label155).Location = new Point(8, 218);
		((Control)label155).Margin = new Padding(2, 0, 2, 0);
		((Control)label155).Name = "label155";
		((Control)label155).Size = new Size(11, 12);
		((Control)label155).TabIndex = 88;
		((Control)label155).Text = "8";
		((Control)label156).AutoSize = true;
		((Control)label156).Location = new Point(8, 194);
		((Control)label156).Margin = new Padding(2, 0, 2, 0);
		((Control)label156).Name = "label156";
		((Control)label156).Size = new Size(11, 12);
		((Control)label156).TabIndex = 87;
		((Control)label156).Text = "7";
		((Control)label157).AutoSize = true;
		((Control)label157).Location = new Point(8, 170);
		((Control)label157).Margin = new Padding(2, 0, 2, 0);
		((Control)label157).Name = "label157";
		((Control)label157).Size = new Size(11, 12);
		((Control)label157).TabIndex = 86;
		((Control)label157).Text = "6";
		((Control)label158).AutoSize = true;
		((Control)label158).Location = new Point(8, 144);
		((Control)label158).Margin = new Padding(2, 0, 2, 0);
		((Control)label158).Name = "label158";
		((Control)label158).Size = new Size(11, 12);
		((Control)label158).TabIndex = 85;
		((Control)label158).Text = "5";
		((Control)label159).AutoSize = true;
		((Control)label159).Location = new Point(8, 118);
		((Control)label159).Margin = new Padding(2, 0, 2, 0);
		((Control)label159).Name = "label159";
		((Control)label159).Size = new Size(11, 12);
		((Control)label159).TabIndex = 84;
		((Control)label159).Text = "4";
		((Control)label160).AutoSize = true;
		((Control)label160).Location = new Point(8, 94);
		((Control)label160).Margin = new Padding(2, 0, 2, 0);
		((Control)label160).Name = "label160";
		((Control)label160).Size = new Size(11, 12);
		((Control)label160).TabIndex = 83;
		((Control)label160).Text = "3";
		((Control)label161).AutoSize = true;
		((Control)label161).Location = new Point(8, 70);
		((Control)label161).Margin = new Padding(2, 0, 2, 0);
		((Control)label161).Name = "label161";
		((Control)label161).Size = new Size(11, 12);
		((Control)label161).TabIndex = 82;
		((Control)label161).Text = "2";
		((Control)label162).AutoSize = true;
		((Control)label162).Location = new Point(8, 44);
		((Control)label162).Margin = new Padding(2, 0, 2, 0);
		((Control)label162).Name = "label162";
		((Control)label162).Size = new Size(11, 12);
		((Control)label162).TabIndex = 81;
		((Control)label162).Text = "1";
		((Control)textBoxHour8_S1).Location = new Point(101, 214);
		((Control)textBoxHour8_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour8_S1).MaxLength = 2;
		((Control)textBoxHour8_S1).Name = "textBoxHour8_S1";
		((Control)textBoxHour8_S1).Size = new Size(30, 21);
		((Control)textBoxHour8_S1).TabIndex = 80;
		((Control)textBoxHour8_S1).Text = "0";
		((Control)textBoxMinute8_S1).Location = new Point(66, 214);
		((Control)textBoxMinute8_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute8_S1).MaxLength = 2;
		((Control)textBoxMinute8_S1).Name = "textBoxMinute8_S1";
		((Control)textBoxMinute8_S1).Size = new Size(30, 21);
		((Control)textBoxMinute8_S1).TabIndex = 79;
		((Control)textBoxMinute8_S1).Text = "0";
		comboBoxCharge8_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge8_S1).FormattingEnabled = true;
		comboBoxCharge8_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge8_S1).Location = new Point(26, 214);
		((Control)comboBoxCharge8_S1).Margin = new Padding(2);
		((Control)comboBoxCharge8_S1).Name = "comboBoxCharge8_S1";
		((Control)comboBoxCharge8_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge8_S1).TabIndex = 78;
		((Control)textBoxHour7_S1).Location = new Point(101, 190);
		((Control)textBoxHour7_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour7_S1).MaxLength = 2;
		((Control)textBoxHour7_S1).Name = "textBoxHour7_S1";
		((Control)textBoxHour7_S1).Size = new Size(30, 21);
		((Control)textBoxHour7_S1).TabIndex = 77;
		((Control)textBoxHour7_S1).Text = "0";
		((Control)textBoxMinute7_S1).Location = new Point(66, 190);
		((Control)textBoxMinute7_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute7_S1).MaxLength = 2;
		((Control)textBoxMinute7_S1).Name = "textBoxMinute7_S1";
		((Control)textBoxMinute7_S1).Size = new Size(30, 21);
		((Control)textBoxMinute7_S1).TabIndex = 76;
		((Control)textBoxMinute7_S1).Text = "0";
		comboBoxCharge7_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge7_S1).FormattingEnabled = true;
		comboBoxCharge7_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge7_S1).Location = new Point(26, 190);
		((Control)comboBoxCharge7_S1).Margin = new Padding(2);
		((Control)comboBoxCharge7_S1).Name = "comboBoxCharge7_S1";
		((Control)comboBoxCharge7_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge7_S1).TabIndex = 75;
		((Control)textBoxHour6_S1).Location = new Point(101, 166);
		((Control)textBoxHour6_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour6_S1).MaxLength = 2;
		((Control)textBoxHour6_S1).Name = "textBoxHour6_S1";
		((Control)textBoxHour6_S1).Size = new Size(30, 21);
		((Control)textBoxHour6_S1).TabIndex = 74;
		((Control)textBoxHour6_S1).Text = "0";
		((Control)textBoxMinute6_S1).Location = new Point(66, 166);
		((Control)textBoxMinute6_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute6_S1).MaxLength = 2;
		((Control)textBoxMinute6_S1).Name = "textBoxMinute6_S1";
		((Control)textBoxMinute6_S1).Size = new Size(30, 21);
		((Control)textBoxMinute6_S1).TabIndex = 73;
		((Control)textBoxMinute6_S1).Text = "0";
		comboBoxCharge6_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge6_S1).FormattingEnabled = true;
		comboBoxCharge6_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge6_S1).Location = new Point(26, 166);
		((Control)comboBoxCharge6_S1).Margin = new Padding(2);
		((Control)comboBoxCharge6_S1).Name = "comboBoxCharge6_S1";
		((Control)comboBoxCharge6_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge6_S1).TabIndex = 72;
		((Control)textBoxHour5_S1).Location = new Point(101, 140);
		((Control)textBoxHour5_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour5_S1).MaxLength = 2;
		((Control)textBoxHour5_S1).Name = "textBoxHour5_S1";
		((Control)textBoxHour5_S1).Size = new Size(30, 21);
		((Control)textBoxHour5_S1).TabIndex = 71;
		((Control)textBoxHour5_S1).Text = "0";
		((Control)textBoxMinute5_S1).Location = new Point(66, 140);
		((Control)textBoxMinute5_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute5_S1).MaxLength = 2;
		((Control)textBoxMinute5_S1).Name = "textBoxMinute5_S1";
		((Control)textBoxMinute5_S1).Size = new Size(30, 21);
		((Control)textBoxMinute5_S1).TabIndex = 70;
		((Control)textBoxMinute5_S1).Text = "0";
		comboBoxCharge5_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge5_S1).FormattingEnabled = true;
		comboBoxCharge5_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge5_S1).Location = new Point(26, 140);
		((Control)comboBoxCharge5_S1).Margin = new Padding(2);
		((Control)comboBoxCharge5_S1).Name = "comboBoxCharge5_S1";
		((Control)comboBoxCharge5_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge5_S1).TabIndex = 69;
		((Control)textBoxHour4_S1).Location = new Point(101, 115);
		((Control)textBoxHour4_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour4_S1).MaxLength = 2;
		((Control)textBoxHour4_S1).Name = "textBoxHour4_S1";
		((Control)textBoxHour4_S1).Size = new Size(30, 21);
		((Control)textBoxHour4_S1).TabIndex = 68;
		((Control)textBoxHour4_S1).Text = "0";
		((Control)textBoxMinute4_S1).Location = new Point(66, 115);
		((Control)textBoxMinute4_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute4_S1).MaxLength = 2;
		((Control)textBoxMinute4_S1).Name = "textBoxMinute4_S1";
		((Control)textBoxMinute4_S1).Size = new Size(30, 21);
		((Control)textBoxMinute4_S1).TabIndex = 67;
		((Control)textBoxMinute4_S1).Text = "0";
		comboBoxCharge4_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge4_S1).FormattingEnabled = true;
		comboBoxCharge4_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge4_S1).Location = new Point(26, 115);
		((Control)comboBoxCharge4_S1).Margin = new Padding(2);
		((Control)comboBoxCharge4_S1).Name = "comboBoxCharge4_S1";
		((Control)comboBoxCharge4_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge4_S1).TabIndex = 66;
		((Control)textBoxHour3_S1).Location = new Point(101, 90);
		((Control)textBoxHour3_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour3_S1).MaxLength = 2;
		((Control)textBoxHour3_S1).Name = "textBoxHour3_S1";
		((Control)textBoxHour3_S1).Size = new Size(30, 21);
		((Control)textBoxHour3_S1).TabIndex = 65;
		((Control)textBoxHour3_S1).Text = "0";
		((Control)textBoxMinute3_S1).Location = new Point(66, 90);
		((Control)textBoxMinute3_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute3_S1).MaxLength = 2;
		((Control)textBoxMinute3_S1).Name = "textBoxMinute3_S1";
		((Control)textBoxMinute3_S1).Size = new Size(30, 21);
		((Control)textBoxMinute3_S1).TabIndex = 64;
		((Control)textBoxMinute3_S1).Text = "0";
		comboBoxCharge3_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge3_S1).FormattingEnabled = true;
		comboBoxCharge3_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge3_S1).Location = new Point(26, 90);
		((Control)comboBoxCharge3_S1).Margin = new Padding(2);
		((Control)comboBoxCharge3_S1).Name = "comboBoxCharge3_S1";
		((Control)comboBoxCharge3_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge3_S1).TabIndex = 63;
		((Control)textBoxHour2_S1).Location = new Point(101, 65);
		((Control)textBoxHour2_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour2_S1).MaxLength = 2;
		((Control)textBoxHour2_S1).Name = "textBoxHour2_S1";
		((Control)textBoxHour2_S1).Size = new Size(30, 21);
		((Control)textBoxHour2_S1).TabIndex = 62;
		((Control)textBoxHour2_S1).Text = "0";
		((Control)textBoxMinute2_S1).Location = new Point(66, 65);
		((Control)textBoxMinute2_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute2_S1).MaxLength = 2;
		((Control)textBoxMinute2_S1).Name = "textBoxMinute2_S1";
		((Control)textBoxMinute2_S1).Size = new Size(30, 21);
		((Control)textBoxMinute2_S1).TabIndex = 61;
		((Control)textBoxMinute2_S1).Text = "0";
		comboBoxCharge2_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge2_S1).FormattingEnabled = true;
		comboBoxCharge2_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge2_S1).Location = new Point(26, 65);
		((Control)comboBoxCharge2_S1).Margin = new Padding(2);
		((Control)comboBoxCharge2_S1).Name = "comboBoxCharge2_S1";
		((Control)comboBoxCharge2_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge2_S1).TabIndex = 60;
		((Control)textBoxHour1_S1).Location = new Point(101, 40);
		((Control)textBoxHour1_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxHour1_S1).MaxLength = 2;
		((Control)textBoxHour1_S1).Name = "textBoxHour1_S1";
		((Control)textBoxHour1_S1).Size = new Size(30, 21);
		((Control)textBoxHour1_S1).TabIndex = 59;
		((Control)textBoxHour1_S1).Text = "0";
		((Control)textBoxMinute1_S1).Location = new Point(66, 40);
		((Control)textBoxMinute1_S1).Margin = new Padding(2);
		((TextBoxBase)textBoxMinute1_S1).MaxLength = 2;
		((Control)textBoxMinute1_S1).Name = "textBoxMinute1_S1";
		((Control)textBoxMinute1_S1).Size = new Size(30, 21);
		((Control)textBoxMinute1_S1).TabIndex = 58;
		((Control)textBoxMinute1_S1).Text = "0";
		comboBoxCharge1_S1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxCharge1_S1).FormattingEnabled = true;
		comboBoxCharge1_S1.Items.AddRange(new object[5] { "0", "尖", "峰", "平", "谷" });
		((Control)comboBoxCharge1_S1).Location = new Point(26, 40);
		((Control)comboBoxCharge1_S1).Margin = new Padding(2);
		((Control)comboBoxCharge1_S1).Name = "comboBoxCharge1_S1";
		((Control)comboBoxCharge1_S1).Size = new Size(36, 20);
		((Control)comboBoxCharge1_S1).TabIndex = 57;
		((Control)tabPage4).BackColor = Color.Gainsboro;
		((Control)tabPage4).Controls.Add((Control)(object)groupBox14);
		tabPage4.Location = new Point(4, 22);
		((Control)tabPage4).Margin = new Padding(2);
		((Control)tabPage4).Name = "tabPage4";
		((Control)tabPage4).Size = new Size(608, 632);
		tabPage4.TabIndex = 3;
		((Control)tabPage4).Text = "Forced control";
		((Control)groupBox14).Controls.Add((Control)(object)groupBox38);
		((Control)groupBox14).Controls.Add((Control)(object)groupBox37);
		((Control)groupBox14).Controls.Add((Control)(object)groupBox36);
		((Control)groupBox14).Controls.Add((Control)(object)button7);
		((Control)groupBox14).Controls.Add((Control)(object)checkBoxForceEN3);
		((Control)groupBox14).Controls.Add((Control)(object)checkBoxForceEN2);
		((Control)groupBox14).Controls.Add((Control)(object)checkBoxForceEN1);
		((Control)groupBox14).Controls.Add((Control)(object)groupBoxFL3);
		((Control)groupBox14).Controls.Add((Control)(object)groupBoxFL2);
		((Control)groupBox14).Controls.Add((Control)(object)groupBoxFL1);
		((Control)groupBox14).Controls.Add((Control)(object)ForceControl);
		((Control)groupBox14).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox14).Location = new Point(22, 26);
		((Control)groupBox14).Margin = new Padding(2);
		((Control)groupBox14).Name = "groupBox14";
		((Control)groupBox14).Padding = new Padding(2);
		((Control)groupBox14).Size = new Size(274, 484);
		((Control)groupBox14).TabIndex = 21;
		groupBox14.TabStop = false;
		((Control)groupBox14).Text = "Forced distribution";
		((Control)groupBox38).Controls.Add((Control)(object)L3OFF);
		((Control)groupBox38).Controls.Add((Control)(object)L3ON);
		((Control)groupBox38).Location = new Point(62, 391);
		((Control)groupBox38).Margin = new Padding(2);
		((Control)groupBox38).Name = "groupBox38";
		((Control)groupBox38).Padding = new Padding(2);
		((Control)groupBox38).Size = new Size(102, 89);
		((Control)groupBox38).TabIndex = 36;
		groupBox38.TabStop = false;
		((Control)groupBox38).Text = "L3 switch";
		((Control)L3OFF).AutoSize = true;
		((Control)L3OFF).Location = new Point(14, 50);
		((Control)L3OFF).Margin = new Padding(2);
		((Control)L3OFF).Name = "L3OFF";
		((Control)L3OFF).Size = new Size(65, 20);
		((Control)L3OFF).TabIndex = 28;
		((Control)L3OFF).Text = "close";
		((ButtonBase)L3OFF).UseVisualStyleBackColor = true;
		((Control)L3ON).AutoSize = true;
		((Control)L3ON).Location = new Point(14, 24);
		((Control)L3ON).Margin = new Padding(2);
		((Control)L3ON).Name = "L3ON";
		((Control)L3ON).Size = new Size(57, 20);
		((Control)L3ON).TabIndex = 27;
		((Control)L3ON).Text = "open";
		((ButtonBase)L3ON).UseVisualStyleBackColor = true;
		((Control)groupBox37).Controls.Add((Control)(object)L2OFF);
		((Control)groupBox37).Controls.Add((Control)(object)L2ON);
		((Control)groupBox37).Location = new Point(62, 246);
		((Control)groupBox37).Margin = new Padding(2);
		((Control)groupBox37).Name = "groupBox37";
		((Control)groupBox37).Padding = new Padding(2);
		((Control)groupBox37).Size = new Size(104, 108);
		((Control)groupBox37).TabIndex = 36;
		groupBox37.TabStop = false;
		((Control)groupBox37).Text = "L2 switch";
		((Control)L2OFF).AutoSize = true;
		((Control)L2OFF).Location = new Point(14, 50);
		((Control)L2OFF).Margin = new Padding(2);
		((Control)L2OFF).Name = "L2OFF";
		((Control)L2OFF).Size = new Size(65, 20);
		((Control)L2OFF).TabIndex = 28;
		((Control)L2OFF).Text = "close";
		((ButtonBase)L2OFF).UseVisualStyleBackColor = true;
		((Control)L2ON).AutoSize = true;
		((Control)L2ON).Location = new Point(14, 24);
		((Control)L2ON).Margin = new Padding(2);
		((Control)L2ON).Name = "L2ON";
		((Control)L2ON).Size = new Size(57, 20);
		((Control)L2ON).TabIndex = 27;
		((Control)L2ON).Text = "open";
		((ButtonBase)L2ON).UseVisualStyleBackColor = true;
		((Control)groupBox36).Controls.Add((Control)(object)L1OFF);
		((Control)groupBox36).Controls.Add((Control)(object)L1ON);
		((Control)groupBox36).Location = new Point(62, 120);
		((Control)groupBox36).Margin = new Padding(2);
		((Control)groupBox36).Name = "groupBox36";
		((Control)groupBox36).Padding = new Padding(2);
		((Control)groupBox36).Size = new Size(104, 78);
		((Control)groupBox36).TabIndex = 35;
		groupBox36.TabStop = false;
		((Control)groupBox36).Text = "L1 switch";
		((Control)L1OFF).AutoSize = true;
		((Control)L1OFF).Location = new Point(12, 50);
		((Control)L1OFF).Margin = new Padding(2);
		((Control)L1OFF).Name = "L1OFF";
		((Control)L1OFF).Size = new Size(65, 20);
		((Control)L1OFF).TabIndex = 28;
		((Control)L1OFF).Text = "close";
		((ButtonBase)L1OFF).UseVisualStyleBackColor = true;
		((Control)L1ON).AutoSize = true;
		((Control)L1ON).Location = new Point(12, 24);
		((Control)L1ON).Margin = new Padding(2);
		((Control)L1ON).Name = "L1ON";
		((Control)L1ON).Size = new Size(57, 20);
		((Control)L1ON).TabIndex = 27;
		((Control)L1ON).Text = "open";
		((ButtonBase)L1ON).UseVisualStyleBackColor = true;
		((Control)button7).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button7).Location = new Point(14, 67);
		((Control)button7).Margin = new Padding(2);
		((Control)button7).Name = "button7";
		((Control)button7).Size = new Size(153, 26);
		((Control)button7).TabIndex = 41;
		((Control)button7).Text = "Broadcast distribution";
		((ButtonBase)button7).UseVisualStyleBackColor = true;
		((Control)button7).Click += button7_Click;
		((Control)checkBoxForceEN3).AutoSize = true;
		((Control)checkBoxForceEN3).Location = new Point(30, 422);
		((Control)checkBoxForceEN3).Margin = new Padding(2);
		((Control)checkBoxForceEN3).Name = "checkBoxForceEN3";
		((Control)checkBoxForceEN3).Size = new Size(15, 14);
		((Control)checkBoxForceEN3).TabIndex = 40;
		((ButtonBase)checkBoxForceEN3).UseVisualStyleBackColor = true;
		((Control)checkBoxForceEN2).AutoSize = true;
		((Control)checkBoxForceEN2).Location = new Point(30, 284);
		((Control)checkBoxForceEN2).Margin = new Padding(2);
		((Control)checkBoxForceEN2).Name = "checkBoxForceEN2";
		((Control)checkBoxForceEN2).Size = new Size(15, 14);
		((Control)checkBoxForceEN2).TabIndex = 39;
		((ButtonBase)checkBoxForceEN2).UseVisualStyleBackColor = true;
		((Control)checkBoxForceEN1).AutoSize = true;
		((Control)checkBoxForceEN1).Location = new Point(30, 146);
		((Control)checkBoxForceEN1).Margin = new Padding(2);
		((Control)checkBoxForceEN1).Name = "checkBoxForceEN1";
		((Control)checkBoxForceEN1).Size = new Size(15, 14);
		((Control)checkBoxForceEN1).TabIndex = 38;
		((ButtonBase)checkBoxForceEN1).UseVisualStyleBackColor = true;
		((Control)groupBoxFL3).Controls.Add((Control)(object)L3Close);
		((Control)groupBoxFL3).Controls.Add((Control)(object)L3Open);
		((Control)groupBoxFL3).Location = new Point(158, 390);
		((Control)groupBoxFL3).Margin = new Padding(2);
		((Control)groupBoxFL3).Name = "groupBoxFL3";
		((Control)groupBoxFL3).Padding = new Padding(2);
		((Control)groupBoxFL3).Size = new Size(99, 94);
		((Control)groupBoxFL3).TabIndex = 36;
		groupBoxFL3.TabStop = false;
		((Control)groupBoxFL3).Text = "L3 state";
		((Control)L3Close).AutoSize = true;
		((Control)L3Close).Location = new Point(10, 50);
		((Control)L3Close).Margin = new Padding(2);
		((Control)L3Close).Name = "L3Close";
		((Control)L3Close).Size = new Size(49, 20);
		((Control)L3Close).TabIndex = 28;
		((Control)L3Close).Text = "OFF";
		((ButtonBase)L3Close).UseVisualStyleBackColor = true;
		((Control)L3Open).AutoSize = true;
		((Control)L3Open).Location = new Point(10, 26);
		((Control)L3Open).Margin = new Padding(2);
		((Control)L3Open).Name = "L3Open";
		((Control)L3Open).Size = new Size(41, 20);
		((Control)L3Open).TabIndex = 27;
		((Control)L3Open).Text = "ON";
		((ButtonBase)L3Open).UseVisualStyleBackColor = true;
		((Control)groupBoxFL2).Controls.Add((Control)(object)L2Close);
		((Control)groupBoxFL2).Controls.Add((Control)(object)L2Open);
		((Control)groupBoxFL2).Location = new Point(158, 246);
		((Control)groupBoxFL2).Margin = new Padding(2);
		((Control)groupBoxFL2).Name = "groupBoxFL2";
		((Control)groupBoxFL2).Padding = new Padding(2);
		((Control)groupBoxFL2).Size = new Size(99, 108);
		((Control)groupBoxFL2).TabIndex = 35;
		groupBoxFL2.TabStop = false;
		((Control)groupBoxFL2).Text = "L2 state";
		((Control)L2Close).AutoSize = true;
		((Control)L2Close).Location = new Point(14, 50);
		((Control)L2Close).Margin = new Padding(2);
		((Control)L2Close).Name = "L2Close";
		((Control)L2Close).Size = new Size(49, 20);
		((Control)L2Close).TabIndex = 28;
		((Control)L2Close).Text = "OFF";
		((ButtonBase)L2Close).UseVisualStyleBackColor = true;
		((Control)L2Open).AutoSize = true;
		((Control)L2Open).Location = new Point(14, 24);
		((Control)L2Open).Margin = new Padding(2);
		((Control)L2Open).Name = "L2Open";
		((Control)L2Open).Size = new Size(41, 20);
		((Control)L2Open).TabIndex = 27;
		((Control)L2Open).Text = "ON";
		((ButtonBase)L2Open).UseVisualStyleBackColor = true;
		((Control)groupBoxFL1).Controls.Add((Control)(object)L1Close);
		((Control)groupBoxFL1).Controls.Add((Control)(object)L1Open);
		((Control)groupBoxFL1).Location = new Point(158, 120);
		((Control)groupBoxFL1).Margin = new Padding(2);
		((Control)groupBoxFL1).Name = "groupBoxFL1";
		((Control)groupBoxFL1).Padding = new Padding(2);
		((Control)groupBoxFL1).Size = new Size(99, 78);
		((Control)groupBoxFL1).TabIndex = 34;
		groupBoxFL1.TabStop = false;
		((Control)groupBoxFL1).Text = "L1 state";
		((Control)L1Close).AutoSize = true;
		((Control)L1Close).Location = new Point(12, 50);
		((Control)L1Close).Margin = new Padding(2);
		((Control)L1Close).Name = "L1Close";
		((Control)L1Close).Size = new Size(49, 20);
		((Control)L1Close).TabIndex = 28;
		((Control)L1Close).Text = "OFF";
		((ButtonBase)L1Close).UseVisualStyleBackColor = true;
		((Control)L1Open).AutoSize = true;
		((Control)L1Open).Location = new Point(12, 24);
		((Control)L1Open).Margin = new Padding(2);
		((Control)L1Open).Name = "L1Open";
		((Control)L1Open).Size = new Size(41, 20);
		((Control)L1Open).TabIndex = 27;
		((Control)L1Open).Text = "ON";
		((ButtonBase)L1Open).UseVisualStyleBackColor = true;
		((Control)ForceControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ForceControl).Location = new Point(184, 68);
		((Control)ForceControl).Margin = new Padding(2);
		((Control)ForceControl).Name = "ForceControl";
		((Control)ForceControl).Size = new Size(52, 26);
		((Control)ForceControl).TabIndex = 24;
		((Control)ForceControl).Text = "set";
		((ButtonBase)ForceControl).UseVisualStyleBackColor = true;
		((Control)ForceControl).Click += ForceControl_Click;
		((Control)tabPage3).BackColor = Color.Gainsboro;
		((Control)tabPage3).Controls.Add((Control)(object)groupBox13);
		tabPage3.Location = new Point(4, 22);
		((Control)tabPage3).Margin = new Padding(2);
		((Control)tabPage3).Name = "tabPage3";
		((Control)tabPage3).Size = new Size(608, 632);
		tabPage3.TabIndex = 2;
		((Control)tabPage3).Text = "Time control";
		((Control)groupBox13).Controls.Add((Control)(object)checkBox2);
		((Control)groupBox13).Controls.Add((Control)(object)groupBox32);
		((Control)groupBox13).Controls.Add((Control)(object)ReadTimeControl);
		((Control)groupBox13).Controls.Add((Control)(object)AllTimeControl);
		((Control)groupBox13).Controls.Add((Control)(object)groupBoxL1);
		((Control)groupBox13).Controls.Add((Control)(object)groupBox15);
		((Control)groupBox13).Controls.Add((Control)(object)TimeControl);
		((Control)groupBox13).Controls.Add((Control)(object)CloseTime);
		((Control)groupBox13).Controls.Add((Control)(object)OpenTime);
		((Control)groupBox13).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox13).Location = new Point(26, 6);
		((Control)groupBox13).Margin = new Padding(2);
		((Control)groupBox13).Name = "groupBox13";
		((Control)groupBox13).Padding = new Padding(2);
		((Control)groupBox13).Size = new Size(575, 562);
		((Control)groupBox13).TabIndex = 20;
		groupBox13.TabStop = false;
		((Control)groupBox13).Text = "Time controlled distribution";
		((Control)checkBox2).AutoSize = true;
		((Control)checkBox2).Location = new Point(46, 89);
		((Control)checkBox2).Margin = new Padding(2);
		((Control)checkBox2).Name = "checkBox2";
		((Control)checkBox2).Size = new Size(15, 14);
		((Control)checkBox2).TabIndex = 64;
		((ButtonBase)checkBox2).UseVisualStyleBackColor = true;
		((Control)groupBox32).Controls.Add((Control)(object)SKALL);
		((Control)groupBox32).Controls.Add((Control)(object)SKL3);
		((Control)groupBox32).Controls.Add((Control)(object)SKL2);
		((Control)groupBox32).Controls.Add((Control)(object)SKL1);
		((Control)groupBox32).Location = new Point(58, 14);
		((Control)groupBox32).Margin = new Padding(2);
		((Control)groupBox32).Name = "groupBox32";
		((Control)groupBox32).Padding = new Padding(2);
		((Control)groupBox32).Size = new Size(343, 58);
		((Control)groupBox32).TabIndex = 63;
		groupBox32.TabStop = false;
		((Control)SKALL).AutoSize = true;
		((Control)SKALL).Location = new Point(22, 26);
		((Control)SKALL).Margin = new Padding(2);
		((Control)SKALL).Name = "SKALL";
		((Control)SKALL).Size = new Size(65, 20);
		((Control)SKALL).TabIndex = 59;
		((Control)SKALL).Text = "total";
		((ButtonBase)SKALL).UseVisualStyleBackColor = true;
		((Control)SKL3).AutoSize = true;
		((Control)SKL3).Location = new Point(230, 26);
		((Control)SKL3).Margin = new Padding(2);
		((Control)SKL3).Name = "SKL3";
		((Control)SKL3).Size = new Size(41, 20);
		((Control)SKL3).TabIndex = 58;
		((Control)SKL3).Text = "L3";
		((ButtonBase)SKL3).UseVisualStyleBackColor = true;
		((Control)SKL2).AutoSize = true;
		((Control)SKL2).Location = new Point(161, 26);
		((Control)SKL2).Margin = new Padding(2);
		((Control)SKL2).Name = "SKL2";
		((Control)SKL2).Size = new Size(49, 20);
		((Control)SKL2).TabIndex = 57;
		((Control)SKL2).Text = "L2 ";
		((ButtonBase)SKL2).UseVisualStyleBackColor = true;
		((Control)SKL1).AutoSize = true;
		((Control)SKL1).Location = new Point(91, 26);
		((Control)SKL1).Margin = new Padding(2);
		((Control)SKL1).Name = "SKL1";
		((Control)SKL1).Size = new Size(41, 20);
		((Control)SKL1).TabIndex = 56;
		((Control)SKL1).Text = "L1";
		((ButtonBase)SKL1).UseVisualStyleBackColor = true;
		((Control)ReadTimeControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ReadTimeControl).Location = new Point(198, 80);
		((Control)ReadTimeControl).Margin = new Padding(2);
		((Control)ReadTimeControl).Name = "ReadTimeControl";
		((Control)ReadTimeControl).Size = new Size(74, 26);
		((Control)ReadTimeControl).TabIndex = 31;
		((Control)ReadTimeControl).Text = "read set";
		((ButtonBase)ReadTimeControl).UseVisualStyleBackColor = true;
		((Control)ReadTimeControl).Click += ReadTimeControl_Click;
		((Control)AllTimeControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)AllTimeControl).Location = new Point(427, 80);
		((Control)AllTimeControl).Margin = new Padding(2);
		((Control)AllTimeControl).Name = "AllTimeControl";
		((Control)AllTimeControl).Size = new Size(148, 26);
		((Control)AllTimeControl).TabIndex = 21;
		((Control)AllTimeControl).Text = "Broadcast distribution";
		((ButtonBase)AllTimeControl).UseVisualStyleBackColor = true;
		((Control)AllTimeControl).Click += AllTimeControl_Click;
		((Control)groupBoxL1).Controls.Add((Control)(object)label82);
		((Control)groupBoxL1).Controls.Add((Control)(object)checkBox11);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH8);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM8);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work8);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH7);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM7);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work7);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH8);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM8);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free8);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH7);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM7);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free7);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH6);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM6);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work6);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH5);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM5);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work5);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH4);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM4);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work4);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH6);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM6);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free6);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH5);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM5);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free5);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH4);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM4);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free4);
		((Control)groupBoxL1).Controls.Add((Control)(object)label103);
		((Control)groupBoxL1).Controls.Add((Control)(object)label104);
		((Control)groupBoxL1).Controls.Add((Control)(object)label105);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH3);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM3);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work3);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH2);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM2);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work2);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkH1);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1WorkM1);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Work1);
		((Control)groupBoxL1).Controls.Add((Control)(object)label106);
		((Control)groupBoxL1).Controls.Add((Control)(object)label107);
		((Control)groupBoxL1).Controls.Add((Control)(object)label108);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH3);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM3);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free3);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH2);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM2);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free2);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeH1);
		((Control)groupBoxL1).Controls.Add((Control)(object)textBoxL1FreeM1);
		((Control)groupBoxL1).Controls.Add((Control)(object)comboBoxL1Free1);
		((Control)groupBoxL1).Location = new Point(6, 209);
		((Control)groupBoxL1).Margin = new Padding(2);
		((Control)groupBoxL1).Name = "groupBoxL1";
		((Control)groupBoxL1).Padding = new Padding(2);
		((Control)groupBoxL1).Size = new Size(419, 338);
		((Control)groupBoxL1).TabIndex = 18;
		groupBoxL1.TabStop = false;
		((Control)groupBoxL1).Text = "L1";
		((Control)label82).AutoSize = true;
		((Control)label82).Location = new Point(19, 19);
		((Control)label82).Margin = new Padding(2, 0, 2, 0);
		((Control)label82).Name = "label82";
		((Control)label82).Size = new Size(55, 16);
		((Control)label82).TabIndex = 32;
		((Control)label82).Text = "Enable";
		((Control)checkBox11).AutoSize = true;
		((Control)checkBox11).Location = new Point(80, 23);
		((Control)checkBox11).Margin = new Padding(2);
		((Control)checkBox11).Name = "checkBox11";
		((Control)checkBox11).Size = new Size(15, 14);
		((Control)checkBox11).TabIndex = 31;
		((ButtonBase)checkBox11).UseVisualStyleBackColor = true;
		((Control)textBoxL1WorkH8).Location = new Point(239, 290);
		((Control)textBoxL1WorkH8).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH8).MaxLength = 2;
		((Control)textBoxL1WorkH8).Name = "textBoxL1WorkH8";
		((Control)textBoxL1WorkH8).Size = new Size(30, 26);
		((Control)textBoxL1WorkH8).TabIndex = 65;
		((Control)textBoxL1WorkH8).Text = "0";
		((Control)textBoxL1WorkM8).Location = new Point(200, 290);
		((Control)textBoxL1WorkM8).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM8).MaxLength = 2;
		((Control)textBoxL1WorkM8).Name = "textBoxL1WorkM8";
		((Control)textBoxL1WorkM8).Size = new Size(30, 26);
		((Control)textBoxL1WorkM8).TabIndex = 64;
		((Control)textBoxL1WorkM8).Text = "0";
		comboBoxL1Work8.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work8).FormattingEnabled = true;
		comboBoxL1Work8.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work8).Location = new Point(146, 293);
		((Control)comboBoxL1Work8).Margin = new Padding(2);
		((Control)comboBoxL1Work8).Name = "comboBoxL1Work8";
		((Control)comboBoxL1Work8).Size = new Size(47, 24);
		((Control)comboBoxL1Work8).TabIndex = 63;
		((Control)textBoxL1WorkH7).Location = new Point(239, 262);
		((Control)textBoxL1WorkH7).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH7).MaxLength = 2;
		((Control)textBoxL1WorkH7).Name = "textBoxL1WorkH7";
		((Control)textBoxL1WorkH7).Size = new Size(30, 26);
		((Control)textBoxL1WorkH7).TabIndex = 62;
		((Control)textBoxL1WorkH7).Text = "0";
		((Control)textBoxL1WorkM7).Location = new Point(200, 262);
		((Control)textBoxL1WorkM7).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM7).MaxLength = 2;
		((Control)textBoxL1WorkM7).Name = "textBoxL1WorkM7";
		((Control)textBoxL1WorkM7).Size = new Size(30, 26);
		((Control)textBoxL1WorkM7).TabIndex = 61;
		((Control)textBoxL1WorkM7).Text = "0";
		comboBoxL1Work7.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work7).FormattingEnabled = true;
		comboBoxL1Work7.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work7).Location = new Point(146, 262);
		((Control)comboBoxL1Work7).Margin = new Padding(2);
		((Control)comboBoxL1Work7).Name = "comboBoxL1Work7";
		((Control)comboBoxL1Work7).Size = new Size(47, 24);
		((Control)comboBoxL1Work7).TabIndex = 60;
		((Control)textBoxL1FreeH8).Location = new Point(102, 290);
		((Control)textBoxL1FreeH8).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH8).MaxLength = 2;
		((Control)textBoxL1FreeH8).Name = "textBoxL1FreeH8";
		((Control)textBoxL1FreeH8).Size = new Size(30, 26);
		((Control)textBoxL1FreeH8).TabIndex = 59;
		((Control)textBoxL1FreeH8).Text = "0";
		((Control)textBoxL1FreeM8).Location = new Point(65, 290);
		((Control)textBoxL1FreeM8).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM8).MaxLength = 2;
		((Control)textBoxL1FreeM8).Name = "textBoxL1FreeM8";
		((Control)textBoxL1FreeM8).Size = new Size(30, 26);
		((Control)textBoxL1FreeM8).TabIndex = 58;
		((Control)textBoxL1FreeM8).Text = "0";
		((Control)comboBoxL1Free8).AccessibleRole = (AccessibleRole)0;
		comboBoxL1Free8.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free8).FormattingEnabled = true;
		comboBoxL1Free8.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free8).Location = new Point(12, 293);
		((Control)comboBoxL1Free8).Margin = new Padding(2);
		((Control)comboBoxL1Free8).Name = "comboBoxL1Free8";
		((Control)comboBoxL1Free8).Size = new Size(47, 24);
		((Control)comboBoxL1Free8).TabIndex = 57;
		((Control)textBoxL1FreeH7).Location = new Point(102, 262);
		((Control)textBoxL1FreeH7).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH7).MaxLength = 2;
		((Control)textBoxL1FreeH7).Name = "textBoxL1FreeH7";
		((Control)textBoxL1FreeH7).Size = new Size(30, 26);
		((Control)textBoxL1FreeH7).TabIndex = 56;
		((Control)textBoxL1FreeH7).Text = "0";
		((Control)textBoxL1FreeM7).Location = new Point(65, 262);
		((Control)textBoxL1FreeM7).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM7).MaxLength = 2;
		((Control)textBoxL1FreeM7).Name = "textBoxL1FreeM7";
		((Control)textBoxL1FreeM7).Size = new Size(30, 26);
		((Control)textBoxL1FreeM7).TabIndex = 55;
		((Control)textBoxL1FreeM7).Text = "0";
		comboBoxL1Free7.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free7).FormattingEnabled = true;
		comboBoxL1Free7.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free7).Location = new Point(12, 262);
		((Control)comboBoxL1Free7).Margin = new Padding(2);
		((Control)comboBoxL1Free7).Name = "comboBoxL1Free7";
		((Control)comboBoxL1Free7).Size = new Size(47, 24);
		((Control)comboBoxL1Free7).TabIndex = 54;
		((Control)textBoxL1WorkH6).Location = new Point(239, 228);
		((Control)textBoxL1WorkH6).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH6).MaxLength = 2;
		((Control)textBoxL1WorkH6).Name = "textBoxL1WorkH6";
		((Control)textBoxL1WorkH6).Size = new Size(30, 26);
		((Control)textBoxL1WorkH6).TabIndex = 53;
		((Control)textBoxL1WorkH6).Text = "0";
		((Control)textBoxL1WorkM6).Location = new Point(200, 228);
		((Control)textBoxL1WorkM6).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM6).MaxLength = 2;
		((Control)textBoxL1WorkM6).Name = "textBoxL1WorkM6";
		((Control)textBoxL1WorkM6).Size = new Size(30, 26);
		((Control)textBoxL1WorkM6).TabIndex = 52;
		((Control)textBoxL1WorkM6).Text = "0";
		comboBoxL1Work6.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work6).FormattingEnabled = true;
		comboBoxL1Work6.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work6).Location = new Point(146, 230);
		((Control)comboBoxL1Work6).Margin = new Padding(2);
		((Control)comboBoxL1Work6).Name = "comboBoxL1Work6";
		((Control)comboBoxL1Work6).Size = new Size(47, 24);
		((Control)comboBoxL1Work6).TabIndex = 51;
		((Control)textBoxL1WorkH5).Location = new Point(239, 198);
		((Control)textBoxL1WorkH5).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH5).MaxLength = 2;
		((Control)textBoxL1WorkH5).Name = "textBoxL1WorkH5";
		((Control)textBoxL1WorkH5).Size = new Size(30, 26);
		((Control)textBoxL1WorkH5).TabIndex = 50;
		((Control)textBoxL1WorkH5).Text = "0";
		((Control)textBoxL1WorkM5).Location = new Point(200, 198);
		((Control)textBoxL1WorkM5).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM5).MaxLength = 2;
		((Control)textBoxL1WorkM5).Name = "textBoxL1WorkM5";
		((Control)textBoxL1WorkM5).Size = new Size(30, 26);
		((Control)textBoxL1WorkM5).TabIndex = 49;
		((Control)textBoxL1WorkM5).Text = "0";
		comboBoxL1Work5.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work5).FormattingEnabled = true;
		comboBoxL1Work5.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work5).Location = new Point(146, 200);
		((Control)comboBoxL1Work5).Margin = new Padding(2);
		((Control)comboBoxL1Work5).Name = "comboBoxL1Work5";
		((Control)comboBoxL1Work5).Size = new Size(47, 24);
		((Control)comboBoxL1Work5).TabIndex = 48;
		((Control)textBoxL1WorkH4).Location = new Point(239, 168);
		((Control)textBoxL1WorkH4).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH4).MaxLength = 2;
		((Control)textBoxL1WorkH4).Name = "textBoxL1WorkH4";
		((Control)textBoxL1WorkH4).Size = new Size(30, 26);
		((Control)textBoxL1WorkH4).TabIndex = 47;
		((Control)textBoxL1WorkH4).Text = "0";
		((Control)textBoxL1WorkM4).Location = new Point(200, 168);
		((Control)textBoxL1WorkM4).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM4).MaxLength = 2;
		((Control)textBoxL1WorkM4).Name = "textBoxL1WorkM4";
		((Control)textBoxL1WorkM4).Size = new Size(30, 26);
		((Control)textBoxL1WorkM4).TabIndex = 46;
		((Control)textBoxL1WorkM4).Text = "0";
		comboBoxL1Work4.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work4).FormattingEnabled = true;
		comboBoxL1Work4.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work4).Location = new Point(146, 170);
		((Control)comboBoxL1Work4).Margin = new Padding(2);
		((Control)comboBoxL1Work4).Name = "comboBoxL1Work4";
		((Control)comboBoxL1Work4).Size = new Size(47, 24);
		((Control)comboBoxL1Work4).TabIndex = 45;
		((Control)textBoxL1FreeH6).Location = new Point(102, 228);
		((Control)textBoxL1FreeH6).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH6).MaxLength = 2;
		((Control)textBoxL1FreeH6).Name = "textBoxL1FreeH6";
		((Control)textBoxL1FreeH6).Size = new Size(30, 26);
		((Control)textBoxL1FreeH6).TabIndex = 44;
		((Control)textBoxL1FreeH6).Text = "0";
		((Control)textBoxL1FreeM6).Location = new Point(65, 228);
		((Control)textBoxL1FreeM6).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM6).MaxLength = 2;
		((Control)textBoxL1FreeM6).Name = "textBoxL1FreeM6";
		((Control)textBoxL1FreeM6).Size = new Size(30, 26);
		((Control)textBoxL1FreeM6).TabIndex = 43;
		((Control)textBoxL1FreeM6).Text = "0";
		((Control)comboBoxL1Free6).AccessibleRole = (AccessibleRole)0;
		comboBoxL1Free6.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free6).FormattingEnabled = true;
		comboBoxL1Free6.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free6).Location = new Point(12, 230);
		((Control)comboBoxL1Free6).Margin = new Padding(2);
		((Control)comboBoxL1Free6).Name = "comboBoxL1Free6";
		((Control)comboBoxL1Free6).Size = new Size(47, 24);
		((Control)comboBoxL1Free6).TabIndex = 42;
		((Control)textBoxL1FreeH5).Location = new Point(102, 198);
		((Control)textBoxL1FreeH5).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH5).MaxLength = 2;
		((Control)textBoxL1FreeH5).Name = "textBoxL1FreeH5";
		((Control)textBoxL1FreeH5).Size = new Size(30, 26);
		((Control)textBoxL1FreeH5).TabIndex = 41;
		((Control)textBoxL1FreeH5).Text = "0";
		((Control)textBoxL1FreeM5).Location = new Point(65, 198);
		((Control)textBoxL1FreeM5).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM5).MaxLength = 2;
		((Control)textBoxL1FreeM5).Name = "textBoxL1FreeM5";
		((Control)textBoxL1FreeM5).Size = new Size(30, 26);
		((Control)textBoxL1FreeM5).TabIndex = 40;
		((Control)textBoxL1FreeM5).Text = "0";
		comboBoxL1Free5.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free5).FormattingEnabled = true;
		comboBoxL1Free5.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free5).Location = new Point(12, 200);
		((Control)comboBoxL1Free5).Margin = new Padding(2);
		((Control)comboBoxL1Free5).Name = "comboBoxL1Free5";
		((Control)comboBoxL1Free5).Size = new Size(47, 24);
		((Control)comboBoxL1Free5).TabIndex = 39;
		((Control)textBoxL1FreeH4).Location = new Point(102, 168);
		((Control)textBoxL1FreeH4).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH4).MaxLength = 2;
		((Control)textBoxL1FreeH4).Name = "textBoxL1FreeH4";
		((Control)textBoxL1FreeH4).Size = new Size(30, 26);
		((Control)textBoxL1FreeH4).TabIndex = 38;
		((Control)textBoxL1FreeH4).Text = "0";
		((Control)textBoxL1FreeM4).Location = new Point(65, 168);
		((Control)textBoxL1FreeM4).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM4).MaxLength = 2;
		((Control)textBoxL1FreeM4).Name = "textBoxL1FreeM4";
		((Control)textBoxL1FreeM4).Size = new Size(30, 26);
		((Control)textBoxL1FreeM4).TabIndex = 37;
		((Control)textBoxL1FreeM4).Text = "0";
		comboBoxL1Free4.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free4).FormattingEnabled = true;
		comboBoxL1Free4.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free4).Location = new Point(12, 170);
		((Control)comboBoxL1Free4).Margin = new Padding(2);
		((Control)comboBoxL1Free4).Name = "comboBoxL1Free4";
		((Control)comboBoxL1Free4).Size = new Size(47, 24);
		((Control)comboBoxL1Free4).TabIndex = 36;
		((Control)label103).AutoSize = true;
		((Control)label103).Location = new Point(235, 54);
		((Control)label103).Margin = new Padding(2, 0, 2, 0);
		((Control)label103).Name = "label103";
		((Control)label103).Size = new Size(39, 16);
		((Control)label103).TabIndex = 35;
		((Control)label103).Text = "hour";
		((Control)label104).AutoSize = true;
		((Control)label104).Location = new Point(206, 55);
		((Control)label104).Margin = new Padding(2, 0, 2, 0);
		((Control)label104).Name = "label104";
		((Control)label104).Size = new Size(15, 16);
		((Control)label104).TabIndex = 34;
		((Control)label104).Text = "m";
		((Control)label105).AutoSize = true;
		((Control)label105).Location = new Point(146, 54);
		((Control)label105).Margin = new Padding(2, 0, 2, 0);
		((Control)label105).Name = "label105";
		((Control)label105).Size = new Size(63, 16);
		((Control)label105).TabIndex = 33;
		((Control)label105).Text = "weekend";
		((Control)textBoxL1WorkH3).Location = new Point(238, 137);
		((Control)textBoxL1WorkH3).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH3).MaxLength = 2;
		((Control)textBoxL1WorkH3).Name = "textBoxL1WorkH3";
		((Control)textBoxL1WorkH3).Size = new Size(30, 26);
		((Control)textBoxL1WorkH3).TabIndex = 32;
		((Control)textBoxL1WorkH3).Text = "0";
		((Control)textBoxL1WorkM3).Location = new Point(200, 137);
		((Control)textBoxL1WorkM3).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM3).MaxLength = 2;
		((Control)textBoxL1WorkM3).Name = "textBoxL1WorkM3";
		((Control)textBoxL1WorkM3).Size = new Size(30, 26);
		((Control)textBoxL1WorkM3).TabIndex = 31;
		((Control)textBoxL1WorkM3).Text = "0";
		comboBoxL1Work3.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work3).FormattingEnabled = true;
		comboBoxL1Work3.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work3).Location = new Point(146, 139);
		((Control)comboBoxL1Work3).Margin = new Padding(2);
		((Control)comboBoxL1Work3).Name = "comboBoxL1Work3";
		((Control)comboBoxL1Work3).Size = new Size(47, 24);
		((Control)comboBoxL1Work3).TabIndex = 30;
		((Control)textBoxL1WorkH2).Location = new Point(239, 106);
		((Control)textBoxL1WorkH2).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH2).MaxLength = 2;
		((Control)textBoxL1WorkH2).Name = "textBoxL1WorkH2";
		((Control)textBoxL1WorkH2).Size = new Size(30, 26);
		((Control)textBoxL1WorkH2).TabIndex = 29;
		((Control)textBoxL1WorkH2).Text = "0";
		((Control)textBoxL1WorkM2).Location = new Point(200, 106);
		((Control)textBoxL1WorkM2).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM2).MaxLength = 2;
		((Control)textBoxL1WorkM2).Name = "textBoxL1WorkM2";
		((Control)textBoxL1WorkM2).Size = new Size(30, 26);
		((Control)textBoxL1WorkM2).TabIndex = 28;
		((Control)textBoxL1WorkM2).Text = "0";
		comboBoxL1Work2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work2).FormattingEnabled = true;
		comboBoxL1Work2.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work2).Location = new Point(146, 110);
		((Control)comboBoxL1Work2).Margin = new Padding(2);
		((Control)comboBoxL1Work2).Name = "comboBoxL1Work2";
		((Control)comboBoxL1Work2).Size = new Size(47, 24);
		((Control)comboBoxL1Work2).TabIndex = 27;
		((Control)textBoxL1WorkH1).Location = new Point(239, 77);
		((Control)textBoxL1WorkH1).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkH1).MaxLength = 2;
		((Control)textBoxL1WorkH1).Name = "textBoxL1WorkH1";
		((Control)textBoxL1WorkH1).Size = new Size(30, 26);
		((Control)textBoxL1WorkH1).TabIndex = 26;
		((Control)textBoxL1WorkH1).Text = "0";
		((Control)textBoxL1WorkM1).Location = new Point(200, 77);
		((Control)textBoxL1WorkM1).Margin = new Padding(2);
		((TextBoxBase)textBoxL1WorkM1).MaxLength = 2;
		((Control)textBoxL1WorkM1).Name = "textBoxL1WorkM1";
		((Control)textBoxL1WorkM1).Size = new Size(30, 26);
		((Control)textBoxL1WorkM1).TabIndex = 25;
		((Control)textBoxL1WorkM1).Text = "0";
		comboBoxL1Work1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Work1).FormattingEnabled = true;
		comboBoxL1Work1.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Work1).Location = new Point(146, 79);
		((Control)comboBoxL1Work1).Margin = new Padding(2);
		((Control)comboBoxL1Work1).Name = "comboBoxL1Work1";
		((Control)comboBoxL1Work1).Size = new Size(47, 24);
		((Control)comboBoxL1Work1).TabIndex = 24;
		((Control)label106).AutoSize = true;
		((Control)label106).Location = new Point(106, 55);
		((Control)label106).Margin = new Padding(2, 0, 2, 0);
		((Control)label106).Name = "label106";
		((Control)label106).Size = new Size(39, 16);
		((Control)label106).TabIndex = 23;
		((Control)label106).Text = "hour";
		((Control)label107).AutoSize = true;
		((Control)label107).Location = new Point(54, 54);
		((Control)label107).Margin = new Padding(2, 0, 2, 0);
		((Control)label107).Name = "label107";
		((Control)label107).Size = new Size(55, 16);
		((Control)label107).TabIndex = 22;
		((Control)label107).Text = "minute";
		((Control)label108).AutoSize = true;
		((Control)label108).Location = new Point(14, 55);
		((Control)label108).Margin = new Padding(2, 0, 2, 0);
		((Control)label108).Name = "label108";
		((Control)label108).Size = new Size(39, 16);
		((Control)label108).TabIndex = 21;
		((Control)label108).Text = "work";
		((Control)textBoxL1FreeH3).Location = new Point(102, 137);
		((Control)textBoxL1FreeH3).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH3).MaxLength = 2;
		((Control)textBoxL1FreeH3).Name = "textBoxL1FreeH3";
		((Control)textBoxL1FreeH3).Size = new Size(30, 26);
		((Control)textBoxL1FreeH3).TabIndex = 20;
		((Control)textBoxL1FreeH3).Text = "0";
		((Control)textBoxL1FreeM3).Location = new Point(65, 137);
		((Control)textBoxL1FreeM3).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM3).MaxLength = 2;
		((Control)textBoxL1FreeM3).Name = "textBoxL1FreeM3";
		((Control)textBoxL1FreeM3).Size = new Size(30, 26);
		((Control)textBoxL1FreeM3).TabIndex = 19;
		((Control)textBoxL1FreeM3).Text = "0";
		((Control)comboBoxL1Free3).AccessibleRole = (AccessibleRole)0;
		comboBoxL1Free3.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free3).FormattingEnabled = true;
		comboBoxL1Free3.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free3).Location = new Point(12, 139);
		((Control)comboBoxL1Free3).Margin = new Padding(2);
		((Control)comboBoxL1Free3).Name = "comboBoxL1Free3";
		((Control)comboBoxL1Free3).Size = new Size(47, 24);
		((Control)comboBoxL1Free3).TabIndex = 18;
		((Control)textBoxL1FreeH2).Location = new Point(102, 106);
		((Control)textBoxL1FreeH2).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH2).MaxLength = 2;
		((Control)textBoxL1FreeH2).Name = "textBoxL1FreeH2";
		((Control)textBoxL1FreeH2).Size = new Size(30, 26);
		((Control)textBoxL1FreeH2).TabIndex = 17;
		((Control)textBoxL1FreeH2).Text = "0";
		((Control)textBoxL1FreeM2).Location = new Point(65, 106);
		((Control)textBoxL1FreeM2).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM2).MaxLength = 2;
		((Control)textBoxL1FreeM2).Name = "textBoxL1FreeM2";
		((Control)textBoxL1FreeM2).Size = new Size(30, 26);
		((Control)textBoxL1FreeM2).TabIndex = 16;
		((Control)textBoxL1FreeM2).Text = "0";
		comboBoxL1Free2.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free2).FormattingEnabled = true;
		comboBoxL1Free2.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free2).Location = new Point(12, 110);
		((Control)comboBoxL1Free2).Margin = new Padding(2);
		((Control)comboBoxL1Free2).Name = "comboBoxL1Free2";
		((Control)comboBoxL1Free2).Size = new Size(47, 24);
		((Control)comboBoxL1Free2).TabIndex = 15;
		((Control)textBoxL1FreeH1).Location = new Point(102, 77);
		((Control)textBoxL1FreeH1).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeH1).MaxLength = 2;
		((Control)textBoxL1FreeH1).Name = "textBoxL1FreeH1";
		((Control)textBoxL1FreeH1).Size = new Size(30, 26);
		((Control)textBoxL1FreeH1).TabIndex = 14;
		((Control)textBoxL1FreeH1).Text = "0";
		((Control)textBoxL1FreeM1).Location = new Point(65, 77);
		((Control)textBoxL1FreeM1).Margin = new Padding(2);
		((TextBoxBase)textBoxL1FreeM1).MaxLength = 2;
		((Control)textBoxL1FreeM1).Name = "textBoxL1FreeM1";
		((Control)textBoxL1FreeM1).Size = new Size(30, 26);
		((Control)textBoxL1FreeM1).TabIndex = 13;
		((Control)textBoxL1FreeM1).Text = "0";
		comboBoxL1Free1.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxL1Free1).FormattingEnabled = true;
		comboBoxL1Free1.Items.AddRange(new object[2] { "通", "断" });
		((Control)comboBoxL1Free1).Location = new Point(12, 79);
		((Control)comboBoxL1Free1).Margin = new Padding(2);
		((Control)comboBoxL1Free1).Name = "comboBoxL1Free1";
		((Control)comboBoxL1Free1).Size = new Size(47, 24);
		((Control)comboBoxL1Free1).TabIndex = 12;
		((Control)groupBox15).Controls.Add((Control)(object)label166);
		((Control)groupBox15).Controls.Add((Control)(object)label163);
		((Control)groupBox15).Controls.Add((Control)(object)textBox1);
		((Control)groupBox15).Controls.Add((Control)(object)label148);
		((Control)groupBox15).Controls.Add((Control)(object)textBox2);
		((Control)groupBox15).Controls.Add((Control)(object)label109);
		((Control)groupBox15).Controls.Add((Control)(object)label110);
		((Control)groupBox15).Controls.Add((Control)(object)label111);
		((Control)groupBox15).Controls.Add((Control)(object)label89);
		((Control)groupBox15).Controls.Add((Control)(object)label112);
		((Control)groupBox15).Controls.Add((Control)(object)label113);
		((Control)groupBox15).Controls.Add((Control)(object)label114);
		((Control)groupBox15).Controls.Add((Control)(object)label115);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxTimeEN1);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Mon);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Thu);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Wed);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Tue);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Fri);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Sat);
		((Control)groupBox15).Controls.Add((Control)(object)checkBoxL1Sun);
		((Control)groupBox15).Location = new Point(6, 115);
		((Control)groupBox15).Margin = new Padding(2);
		((Control)groupBox15).Name = "groupBox15";
		((Control)groupBox15).Padding = new Padding(2);
		((Control)groupBox15).Size = new Size(513, 84);
		((Control)groupBox15).TabIndex = 14;
		groupBox15.TabStop = false;
		((Control)groupBox15).Text = "holiday and vacations";
		((Control)label166).AutoSize = true;
		((Control)label166).Location = new Point(448, 59);
		((Control)label166).Margin = new Padding(2, 0, 2, 0);
		((Control)label166).Name = "label166";
		((Control)label166).Size = new Size(55, 16);
		((Control)label166).TabIndex = 66;
		((Control)label166).Text = "minute";
		((Control)label163).AutoSize = true;
		((Control)label163).Location = new Point(370, 58);
		((Control)label163).Margin = new Padding(2, 0, 2, 0);
		((Control)label163).Name = "label163";
		((Control)label163).Size = new Size(39, 16);
		((Control)label163).TabIndex = 36;
		((Control)label163).Text = "hour";
		((Control)textBox1).Location = new Point(336, 54);
		((Control)textBox1).Margin = new Padding(2);
		((TextBoxBase)textBox1).MaxLength = 2;
		((Control)textBox1).Name = "textBox1";
		((Control)textBox1).Size = new Size(30, 26);
		((Control)textBox1).TabIndex = 32;
		((Control)textBox1).Text = "0";
		((Control)label148).AutoSize = true;
		((Control)label148).Location = new Point(334, 31);
		((Control)label148).Margin = new Padding(2, 0, 2, 0);
		((Control)label148).Name = "label148";
		((Control)label148).Size = new Size(103, 16);
		((Control)label148).TabIndex = 31;
		((Control)label148).Text = "Start time：";
		((Control)textBox2).Location = new Point(414, 54);
		((Control)textBox2).Margin = new Padding(2);
		((TextBoxBase)textBox2).MaxLength = 2;
		((Control)textBox2).Name = "textBox2";
		((Control)textBox2).Size = new Size(30, 26);
		((Control)textBox2).TabIndex = 33;
		((Control)textBox2).Text = "0";
		((Control)label109).AutoSize = true;
		((Control)label109).Location = new Point(278, 34);
		((Control)label109).Margin = new Padding(2, 0, 2, 0);
		((Control)label109).Name = "label109";
		((Control)label109).Size = new Size(23, 16);
		((Control)label109).TabIndex = 30;
		((Control)label109).Text = "一";
		((Control)label110).AutoSize = true;
		((Control)label110).Location = new Point(247, 34);
		((Control)label110).Margin = new Padding(2, 0, 2, 0);
		((Control)label110).Name = "label110";
		((Control)label110).Size = new Size(23, 16);
		((Control)label110).TabIndex = 29;
		((Control)label110).Text = "二";
		((Control)label111).AutoSize = true;
		((Control)label111).Location = new Point(218, 34);
		((Control)label111).Margin = new Padding(2, 0, 2, 0);
		((Control)label111).Name = "label111";
		((Control)label111).Size = new Size(23, 16);
		((Control)label111).TabIndex = 28;
		((Control)label111).Text = "三";
		((Control)label89).AutoSize = true;
		((Control)label89).Location = new Point(20, 34);
		((Control)label89).Margin = new Padding(2, 0, 2, 0);
		((Control)label89).Name = "label89";
		((Control)label89).Size = new Size(55, 16);
		((Control)label89).TabIndex = 30;
		((Control)label89).Text = "Enable";
		((Control)label112).AutoSize = true;
		((Control)label112).Location = new Point(182, 34);
		((Control)label112).Margin = new Padding(2, 0, 2, 0);
		((Control)label112).Name = "label112";
		((Control)label112).Size = new Size(23, 16);
		((Control)label112).TabIndex = 27;
		((Control)label112).Text = "四";
		((Control)label113).AutoSize = true;
		((Control)label113).Location = new Point(148, 34);
		((Control)label113).Margin = new Padding(2, 0, 2, 0);
		((Control)label113).Name = "label113";
		((Control)label113).Size = new Size(23, 16);
		((Control)label113).TabIndex = 26;
		((Control)label113).Text = "五";
		((Control)label114).AutoSize = true;
		((Control)label114).Location = new Point(116, 34);
		((Control)label114).Margin = new Padding(2, 0, 2, 0);
		((Control)label114).Name = "label114";
		((Control)label114).Size = new Size(23, 16);
		((Control)label114).TabIndex = 25;
		((Control)label114).Text = "六";
		((Control)label115).AutoSize = true;
		((Control)label115).Location = new Point(86, 34);
		((Control)label115).Margin = new Padding(2, 0, 2, 0);
		((Control)label115).Name = "label115";
		((Control)label115).Size = new Size(23, 16);
		((Control)label115).TabIndex = 24;
		((Control)label115).Text = "日";
		((Control)checkBoxTimeEN1).AutoSize = true;
		((Control)checkBoxTimeEN1).Location = new Point(38, 58);
		((Control)checkBoxTimeEN1).Margin = new Padding(2);
		((Control)checkBoxTimeEN1).Name = "checkBoxTimeEN1";
		((Control)checkBoxTimeEN1).Size = new Size(15, 14);
		((Control)checkBoxTimeEN1).TabIndex = 22;
		((ButtonBase)checkBoxTimeEN1).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Mon).AutoSize = true;
		((Control)checkBoxL1Mon).Location = new Point(281, 58);
		((Control)checkBoxL1Mon).Margin = new Padding(2);
		((Control)checkBoxL1Mon).Name = "checkBoxL1Mon";
		((Control)checkBoxL1Mon).Size = new Size(15, 14);
		((Control)checkBoxL1Mon).TabIndex = 6;
		((ButtonBase)checkBoxL1Mon).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Thu).AutoSize = true;
		((Control)checkBoxL1Thu).Location = new Point(186, 58);
		((Control)checkBoxL1Thu).Margin = new Padding(2);
		((Control)checkBoxL1Thu).Name = "checkBoxL1Thu";
		((Control)checkBoxL1Thu).Size = new Size(15, 14);
		((Control)checkBoxL1Thu).TabIndex = 5;
		((ButtonBase)checkBoxL1Thu).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Wed).AutoSize = true;
		((Control)checkBoxL1Wed).Location = new Point(220, 58);
		((Control)checkBoxL1Wed).Margin = new Padding(2);
		((Control)checkBoxL1Wed).Name = "checkBoxL1Wed";
		((Control)checkBoxL1Wed).Size = new Size(15, 14);
		((Control)checkBoxL1Wed).TabIndex = 4;
		((ButtonBase)checkBoxL1Wed).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Tue).AutoSize = true;
		((Control)checkBoxL1Tue).Location = new Point(250, 58);
		((Control)checkBoxL1Tue).Margin = new Padding(2);
		((Control)checkBoxL1Tue).Name = "checkBoxL1Tue";
		((Control)checkBoxL1Tue).Size = new Size(15, 14);
		((Control)checkBoxL1Tue).TabIndex = 3;
		((ButtonBase)checkBoxL1Tue).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Fri).AutoSize = true;
		((Control)checkBoxL1Fri).Location = new Point(151, 58);
		((Control)checkBoxL1Fri).Margin = new Padding(2);
		((Control)checkBoxL1Fri).Name = "checkBoxL1Fri";
		((Control)checkBoxL1Fri).Size = new Size(15, 14);
		((Control)checkBoxL1Fri).TabIndex = 2;
		((ButtonBase)checkBoxL1Fri).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Sat).AutoSize = true;
		((Control)checkBoxL1Sat).Location = new Point(118, 58);
		((Control)checkBoxL1Sat).Margin = new Padding(2);
		((Control)checkBoxL1Sat).Name = "checkBoxL1Sat";
		((Control)checkBoxL1Sat).Size = new Size(15, 14);
		((Control)checkBoxL1Sat).TabIndex = 1;
		((ButtonBase)checkBoxL1Sat).UseVisualStyleBackColor = true;
		((Control)checkBoxL1Sun).AutoSize = true;
		((Control)checkBoxL1Sun).Location = new Point(89, 58);
		((Control)checkBoxL1Sun).Margin = new Padding(2);
		((Control)checkBoxL1Sun).Name = "checkBoxL1Sun";
		((Control)checkBoxL1Sun).Size = new Size(15, 14);
		((Control)checkBoxL1Sun).TabIndex = 0;
		((ButtonBase)checkBoxL1Sun).UseVisualStyleBackColor = true;
		((Control)TimeControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)TimeControl).Location = new Point(283, 80);
		((Control)TimeControl).Margin = new Padding(2);
		((Control)TimeControl).Name = "TimeControl";
		((Control)TimeControl).Size = new Size(132, 26);
		((Control)TimeControl).TabIndex = 13;
		((Control)TimeControl).Text = "Set up distribution";
		((ButtonBase)TimeControl).UseVisualStyleBackColor = true;
		((Control)TimeControl).Click += TimeControl_Click;
		((Control)CloseTime).AutoSize = true;
		((Control)CloseTime).Location = new Point(146, 86);
		((Control)CloseTime).Margin = new Padding(2);
		((Control)CloseTime).Name = "CloseTime";
		((Control)CloseTime).Size = new Size(49, 20);
		((Control)CloseTime).TabIndex = 12;
		((Control)CloseTime).Text = "OFF";
		((ButtonBase)CloseTime).UseVisualStyleBackColor = true;
		((Control)OpenTime).AutoSize = true;
		((Control)OpenTime).Location = new Point(98, 86);
		((Control)OpenTime).Margin = new Padding(2);
		((Control)OpenTime).Name = "OpenTime";
		((Control)OpenTime).Size = new Size(41, 20);
		((Control)OpenTime).TabIndex = 11;
		((Control)OpenTime).Text = "ON";
		((ButtonBase)OpenTime).UseVisualStyleBackColor = true;
		((Control)tabPage2).BackColor = Color.Gainsboro;
		((Control)tabPage2).Controls.Add((Control)(object)groupBox10);
		((Control)tabPage2).Controls.Add((Control)(object)groupBox25);
		tabPage2.Location = new Point(4, 22);
		((Control)tabPage2).Margin = new Padding(2);
		((Control)tabPage2).Name = "tabPage2";
		((Control)tabPage2).Padding = new Padding(2);
		((Control)tabPage2).Size = new Size(608, 632);
		tabPage2.TabIndex = 1;
		((Control)tabPage2).Text = "Load control";
		((Control)groupBox10).Controls.Add((Control)(object)groupBox31);
		((Control)groupBox10).Controls.Add((Control)(object)checkBox10);
		((Control)groupBox10).Controls.Add((Control)(object)textBox10);
		((Control)groupBox10).Controls.Add((Control)(object)label150);
		((Control)groupBox10).Controls.Add((Control)(object)checkBox9);
		((Control)groupBox10).Controls.Add((Control)(object)textBox9);
		((Control)groupBox10).Controls.Add((Control)(object)label149);
		((Control)groupBox10).Controls.Add((Control)(object)checkBoxPowerEN0);
		((Control)groupBox10).Controls.Add((Control)(object)textBoxMaxPF);
		((Control)groupBox10).Controls.Add((Control)(object)label88);
		((Control)groupBox10).Controls.Add((Control)(object)textBoxMaxPAdd);
		((Control)groupBox10).Controls.Add((Control)(object)label87);
		((Control)groupBox10).Controls.Add((Control)(object)ReadPowerControl);
		((Control)groupBox10).Controls.Add((Control)(object)checkBoxPowerEN4);
		((Control)groupBox10).Controls.Add((Control)(object)checkBoxPowerEN3);
		((Control)groupBox10).Controls.Add((Control)(object)checkBoxPowerEN1);
		((Control)groupBox10).Controls.Add((Control)(object)AllPowerControl);
		((Control)groupBox10).Controls.Add((Control)(object)MaxOverCount);
		((Control)groupBox10).Controls.Add((Control)(object)label74);
		((Control)groupBox10).Controls.Add((Control)(object)RecoverTime);
		((Control)groupBox10).Controls.Add((Control)(object)label75);
		((Control)groupBox10).Controls.Add((Control)(object)MaxPower);
		((Control)groupBox10).Controls.Add((Control)(object)label77);
		((Control)groupBox10).Controls.Add((Control)(object)PowerControl);
		((Control)groupBox10).Controls.Add((Control)(object)ClosePower);
		((Control)groupBox10).Controls.Add((Control)(object)OpenPower);
		((Control)groupBox10).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox10).Location = new Point(34, 26);
		((Control)groupBox10).Margin = new Padding(2);
		((Control)groupBox10).Name = "groupBox10";
		((Control)groupBox10).Padding = new Padding(2);
		((Control)groupBox10).Size = new Size(567, 326);
		((Control)groupBox10).TabIndex = 15;
		groupBox10.TabStop = false;
		((Control)groupBox10).Text = "Distribution of load control";
		((Control)groupBox31).Controls.Add((Control)(object)FKL3);
		((Control)groupBox31).Controls.Add((Control)(object)FKL2);
		((Control)groupBox31).Controls.Add((Control)(object)FKL1);
		((Control)groupBox31).Controls.Add((Control)(object)FKALL);
		((Control)groupBox31).Location = new Point(36, 34);
		((Control)groupBox31).Margin = new Padding(2);
		((Control)groupBox31).Name = "groupBox31";
		((Control)groupBox31).Padding = new Padding(2);
		((Control)groupBox31).Size = new Size(293, 64);
		((Control)groupBox31).TabIndex = 61;
		groupBox31.TabStop = false;
		((Control)groupBox31).Text = "Distribution loop";
		((Control)FKL3).AutoSize = true;
		((Control)FKL3).Location = new Point(226, 26);
		((Control)FKL3).Margin = new Padding(2);
		((Control)FKL3).Name = "FKL3";
		((Control)FKL3).Size = new Size(41, 20);
		((Control)FKL3).TabIndex = 58;
		((Control)FKL3).Text = "L3";
		((ButtonBase)FKL3).UseVisualStyleBackColor = true;
		((Control)FKL2).AutoSize = true;
		((Control)FKL2).Location = new Point(154, 26);
		((Control)FKL2).Margin = new Padding(2);
		((Control)FKL2).Name = "FKL2";
		((Control)FKL2).Size = new Size(49, 20);
		((Control)FKL2).TabIndex = 57;
		((Control)FKL2).Text = "L2 ";
		((ButtonBase)FKL2).UseVisualStyleBackColor = true;
		((Control)FKL1).AutoSize = true;
		((Control)FKL1).Location = new Point(86, 26);
		((Control)FKL1).Margin = new Padding(2);
		((Control)FKL1).Name = "FKL1";
		((Control)FKL1).Size = new Size(41, 20);
		((Control)FKL1).TabIndex = 56;
		((Control)FKL1).Text = "L1";
		((ButtonBase)FKL1).UseVisualStyleBackColor = true;
		((Control)FKALL).AutoSize = true;
		((Control)FKALL).Location = new Point(24, 26);
		((Control)FKALL).Margin = new Padding(2);
		((Control)FKALL).Name = "FKALL";
		((Control)FKALL).Size = new Size(65, 20);
		((Control)FKALL).TabIndex = 55;
		((Control)FKALL).Text = "total";
		((ButtonBase)FKALL).UseVisualStyleBackColor = true;
		FKALL.CheckedChanged += FKALL_CheckedChanged;
		((Control)checkBox10).AutoSize = true;
		((Control)checkBox10).Location = new Point(319, 269);
		((Control)checkBox10).Margin = new Padding(2);
		((Control)checkBox10).Name = "checkBox10";
		((Control)checkBox10).Size = new Size(15, 14);
		((Control)checkBox10).TabIndex = 59;
		((ButtonBase)checkBox10).UseVisualStyleBackColor = true;
		((Control)textBox10).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBox10).Location = new Point(477, 262);
		((Control)textBox10).Margin = new Padding(2);
		((TextBoxBase)textBox10).MaxLength = 2;
		((Control)textBox10).Name = "textBox10";
		((Control)textBox10).Size = new Size(38, 29);
		((Control)textBox10).TabIndex = 58;
		((Control)textBox10).Text = "0";
		((Control)label150).AutoSize = true;
		((Control)label150).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label150.ImageAlign = (ContentAlignment)1;
		((Control)label150).Location = new Point(331, 265);
		((Control)label150).Margin = new Padding(2, 0, 2, 0);
		((Control)label150).Name = "label150";
		((Control)label150).Size = new Size(142, 21);
		((Control)label150).TabIndex = 57;
		((Control)label150).Text = "waiting time";
		((Control)checkBox9).AutoSize = true;
		((Control)checkBox9).Location = new Point(17, 266);
		((Control)checkBox9).Margin = new Padding(2);
		((Control)checkBox9).Name = "checkBox9";
		((Control)checkBox9).Size = new Size(15, 14);
		((Control)checkBox9).TabIndex = 56;
		((ButtonBase)checkBox9).UseVisualStyleBackColor = true;
		((Control)textBox9).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBox9).Location = new Point(239, 261);
		((Control)textBox9).Margin = new Padding(2);
		((TextBoxBase)textBox9).MaxLength = 3;
		((Control)textBox9).Name = "textBox9";
		((Control)textBox9).Size = new Size(42, 29);
		((Control)textBox9).TabIndex = 55;
		((Control)textBox9).Text = "0";
		((Control)label149).AutoSize = true;
		((Control)label149).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label149.ImageAlign = (ContentAlignment)1;
		((Control)label149).Location = new Point(32, 262);
		((Control)label149).Margin = new Padding(2, 0, 2, 0);
		((Control)label149).Name = "label149";
		((Control)label149).Size = new Size(208, 21);
		((Control)label149).TabIndex = 54;
		((Control)label149).Text = "Load control times";
		((Control)checkBoxPowerEN0).AutoSize = true;
		((Control)checkBoxPowerEN0).Location = new Point(17, 122);
		((Control)checkBoxPowerEN0).Margin = new Padding(2);
		((Control)checkBoxPowerEN0).Name = "checkBoxPowerEN0";
		((Control)checkBoxPowerEN0).Size = new Size(15, 14);
		((Control)checkBoxPowerEN0).TabIndex = 45;
		((ButtonBase)checkBoxPowerEN0).UseVisualStyleBackColor = true;
		((Control)textBoxMaxPF).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxMaxPF).Location = new Point(239, 187);
		((Control)textBoxMaxPF).Margin = new Padding(2);
		((TextBoxBase)textBoxMaxPF).MaxLength = 5;
		((Control)textBoxMaxPF).Name = "textBoxMaxPF";
		((Control)textBoxMaxPF).Size = new Size(60, 29);
		((Control)textBoxMaxPF).TabIndex = 44;
		((Control)textBoxMaxPF).Text = "0";
		((Control)label88).AutoSize = true;
		((Control)label88).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label88.ImageAlign = (ContentAlignment)1;
		((Control)label88).Location = new Point(32, 190);
		((Control)label88).Margin = new Padding(2, 0, 2, 0);
		((Control)label88).Name = "label88";
		((Control)label88).Size = new Size(186, 21);
		((Control)label88).TabIndex = 43;
		((Control)label88).Text = "Factor threshold";
		((Control)textBoxMaxPAdd).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxMaxPAdd).Location = new Point(433, 177);
		((Control)textBoxMaxPAdd).Margin = new Padding(2);
		((TextBoxBase)textBoxMaxPAdd).MaxLength = 5;
		((Control)textBoxMaxPAdd).Name = "textBoxMaxPAdd";
		((Control)textBoxMaxPAdd).Size = new Size(60, 29);
		((Control)textBoxMaxPAdd).TabIndex = 42;
		((Control)textBoxMaxPAdd).Text = "0";
		((Control)label87).AutoSize = true;
		((Control)label87).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label87.ImageAlign = (ContentAlignment)1;
		((Control)label87).Location = new Point(304, 155);
		((Control)label87).Margin = new Padding(2, 0, 2, 0);
		((Control)label87).Name = "label87";
		((Control)label87).Size = new Size(241, 21);
		((Control)label87).TabIndex = 41;
		((Control)label87).Text = "Incremental threshold";
		((Control)ReadPowerControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ReadPowerControl).Location = new Point(154, 113);
		((Control)ReadPowerControl).Margin = new Padding(2);
		((Control)ReadPowerControl).Name = "ReadPowerControl";
		((Control)ReadPowerControl).Size = new Size(74, 26);
		((Control)ReadPowerControl).TabIndex = 40;
		((Control)ReadPowerControl).Text = "read set";
		((ButtonBase)ReadPowerControl).UseVisualStyleBackColor = true;
		((Control)ReadPowerControl).Click += ReadPowerControl_Click;
		((Control)checkBoxPowerEN4).AutoSize = true;
		((Control)checkBoxPowerEN4).Location = new Point(287, 228);
		((Control)checkBoxPowerEN4).Margin = new Padding(2);
		((Control)checkBoxPowerEN4).Name = "checkBoxPowerEN4";
		((Control)checkBoxPowerEN4).Size = new Size(15, 14);
		((Control)checkBoxPowerEN4).TabIndex = 39;
		((ButtonBase)checkBoxPowerEN4).UseVisualStyleBackColor = true;
		((Control)checkBoxPowerEN3).AutoSize = true;
		((Control)checkBoxPowerEN3).Location = new Point(17, 228);
		((Control)checkBoxPowerEN3).Margin = new Padding(2);
		((Control)checkBoxPowerEN3).Name = "checkBoxPowerEN3";
		((Control)checkBoxPowerEN3).Size = new Size(15, 14);
		((Control)checkBoxPowerEN3).TabIndex = 38;
		((ButtonBase)checkBoxPowerEN3).UseVisualStyleBackColor = true;
		((Control)checkBoxPowerEN1).AutoSize = true;
		((Control)checkBoxPowerEN1).Location = new Point(17, 158);
		((Control)checkBoxPowerEN1).Margin = new Padding(2);
		((Control)checkBoxPowerEN1).Name = "checkBoxPowerEN1";
		((Control)checkBoxPowerEN1).Size = new Size(15, 14);
		((Control)checkBoxPowerEN1).TabIndex = 37;
		((ButtonBase)checkBoxPowerEN1).UseVisualStyleBackColor = true;
		((Control)AllPowerControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)AllPowerControl).Location = new Point(379, 113);
		((Control)AllPowerControl).Margin = new Padding(2);
		((Control)AllPowerControl).Name = "AllPowerControl";
		((Control)AllPowerControl).Size = new Size(150, 26);
		((Control)AllPowerControl).TabIndex = 33;
		((Control)AllPowerControl).Text = "Broadcast distribution";
		((ButtonBase)AllPowerControl).UseVisualStyleBackColor = true;
		((Control)AllPowerControl).Click += AllPowerControl_Click;
		((Control)MaxOverCount).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)MaxOverCount).Location = new Point(529, 221);
		((Control)MaxOverCount).Margin = new Padding(2);
		((TextBoxBase)MaxOverCount).MaxLength = 2;
		((Control)MaxOverCount).Name = "MaxOverCount";
		((Control)MaxOverCount).Size = new Size(38, 29);
		((Control)MaxOverCount).TabIndex = 25;
		((Control)MaxOverCount).Text = "0";
		((Control)label74).AutoSize = true;
		((Control)label74).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label74.ImageAlign = (ContentAlignment)1;
		((Control)label74).Location = new Point(299, 224);
		((Control)label74).Margin = new Padding(2, 0, 2, 0);
		((Control)label74).Name = "label74";
		((Control)label74).Size = new Size(230, 21);
		((Control)label74).TabIndex = 24;
		((Control)label74).Text = "Upper limit of times";
		((Control)RecoverTime).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)RecoverTime).Location = new Point(239, 222);
		((Control)RecoverTime).Margin = new Padding(2);
		((TextBoxBase)RecoverTime).MaxLength = 3;
		((Control)RecoverTime).Name = "RecoverTime";
		((Control)RecoverTime).Size = new Size(42, 29);
		((Control)RecoverTime).TabIndex = 23;
		((Control)RecoverTime).Text = "0";
		((Control)label75).AutoSize = true;
		((Control)label75).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label75.ImageAlign = (ContentAlignment)1;
		((Control)label75).Location = new Point(32, 224);
		((Control)label75).Margin = new Padding(2, 0, 2, 0);
		((Control)label75).Name = "label75";
		((Control)label75).Size = new Size(153, 21);
		((Control)label75).TabIndex = 22;
		((Control)label75).Text = "recovery time";
		((Control)MaxPower).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)MaxPower).Location = new Point(239, 151);
		((Control)MaxPower).Margin = new Padding(2);
		((TextBoxBase)MaxPower).MaxLength = 5;
		((Control)MaxPower).Name = "MaxPower";
		((Control)MaxPower).Size = new Size(60, 29);
		((Control)MaxPower).TabIndex = 21;
		((Control)MaxPower).Text = "0";
		((Control)label77).AutoSize = true;
		((Control)label77).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label77.ImageAlign = (ContentAlignment)1;
		((Control)label77).Location = new Point(32, 154);
		((Control)label77).Margin = new Padding(2, 0, 2, 0);
		((Control)label77).Name = "label77";
		((Control)label77).Size = new Size(175, 21);
		((Control)label77).TabIndex = 20;
		((Control)label77).Text = "Power threshold";
		((Control)PowerControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PowerControl).Location = new Point(235, 113);
		((Control)PowerControl).Margin = new Padding(2);
		((Control)PowerControl).Name = "PowerControl";
		((Control)PowerControl).Size = new Size(131, 26);
		((Control)PowerControl).TabIndex = 10;
		((Control)PowerControl).Text = "Set up distribution";
		((ButtonBase)PowerControl).UseVisualStyleBackColor = true;
		((Control)PowerControl).Click += PowerControl_Click;
		((Control)ClosePower).AutoSize = true;
		((Control)ClosePower).Location = new Point(106, 118);
		((Control)ClosePower).Margin = new Padding(2);
		((Control)ClosePower).Name = "ClosePower";
		((Control)ClosePower).Size = new Size(49, 20);
		((Control)ClosePower).TabIndex = 1;
		((Control)ClosePower).Text = "OFF";
		((ButtonBase)ClosePower).UseVisualStyleBackColor = true;
		((Control)OpenPower).AutoSize = true;
		((Control)OpenPower).Location = new Point(58, 118);
		((Control)OpenPower).Margin = new Padding(2);
		((Control)OpenPower).Name = "OpenPower";
		((Control)OpenPower).Size = new Size(41, 20);
		((Control)OpenPower).TabIndex = 0;
		((Control)OpenPower).Text = "ON";
		((ButtonBase)OpenPower).UseVisualStyleBackColor = true;
		((Control)groupBox25).Controls.Add((Control)(object)button5);
		((Control)groupBox25).Controls.Add((Control)(object)OverCount3);
		((Control)groupBox25).Controls.Add((Control)(object)OverCount2);
		((Control)groupBox25).Controls.Add((Control)(object)OverCount1);
		((Control)groupBox25).Controls.Add((Control)(object)label169);
		((Control)groupBox25).Controls.Add((Control)(object)label168);
		((Control)groupBox25).Controls.Add((Control)(object)label167);
		((Control)groupBox25).Controls.Add((Control)(object)label78);
		((Control)groupBox25).Controls.Add((Control)(object)FWL3);
		((Control)groupBox25).Controls.Add((Control)(object)FWL2);
		((Control)groupBox25).Controls.Add((Control)(object)FWL1);
		((Control)groupBox25).Controls.Add((Control)(object)FWALL);
		((Control)groupBox25).Controls.Add((Control)(object)OverCountALL);
		((Control)groupBox25).Controls.Add((Control)(object)ResetPC);
		((Control)groupBox25).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox25).Location = new Point(34, 365);
		((Control)groupBox25).Margin = new Padding(2);
		((Control)groupBox25).Name = "groupBox25";
		((Control)groupBox25).Padding = new Padding(2);
		((Control)groupBox25).Size = new Size(552, 146);
		((Control)groupBox25).TabIndex = 22;
		groupBox25.TabStop = false;
		((Control)groupBox25).Text = "Load control reset";
		((Control)button5).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button5).Location = new Point(316, 46);
		((Control)button5).Margin = new Padding(2);
		((Control)button5).Name = "button5";
		((Control)button5).Size = new Size(157, 26);
		((Control)button5).TabIndex = 73;
		((Control)button5).Text = "Broadcast distribution";
		((ButtonBase)button5).UseVisualStyleBackColor = true;
		((Control)button5).Click += button5_Click;
		((Control)OverCount3).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)OverCount3).Location = new Point(269, 82);
		((Control)OverCount3).Margin = new Padding(2);
		((TextBoxBase)OverCount3).MaxLength = 2;
		((Control)OverCount3).Name = "OverCount3";
		((Control)OverCount3).Size = new Size(30, 29);
		((Control)OverCount3).TabIndex = 72;
		((Control)OverCount3).Text = "0";
		((Control)OverCount2).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)OverCount2).Location = new Point(118, 82);
		((Control)OverCount2).Margin = new Padding(2);
		((TextBoxBase)OverCount2).MaxLength = 2;
		((Control)OverCount2).Name = "OverCount2";
		((Control)OverCount2).Size = new Size(30, 29);
		((Control)OverCount2).TabIndex = 71;
		((Control)OverCount2).Text = "0";
		((Control)OverCount1).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)OverCount1).Location = new Point(266, 34);
		((Control)OverCount1).Margin = new Padding(2);
		((TextBoxBase)OverCount1).MaxLength = 2;
		((Control)OverCount1).Name = "OverCount1";
		((Control)OverCount1).Size = new Size(30, 29);
		((Control)OverCount1).TabIndex = 70;
		((Control)OverCount1).Text = "0";
		((Control)label169).AutoSize = true;
		((Control)label169).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label169.ImageAlign = (ContentAlignment)1;
		((Control)label169).Location = new Point(230, 86);
		((Control)label169).Margin = new Padding(2, 0, 2, 0);
		((Control)label169).Name = "label169";
		((Control)label169).Size = new Size(32, 21);
		((Control)label169).TabIndex = 69;
		((Control)label169).Text = "L3";
		((Control)label168).AutoSize = true;
		((Control)label168).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label168.ImageAlign = (ContentAlignment)1;
		((Control)label168).Location = new Point(82, 86);
		((Control)label168).Margin = new Padding(2, 0, 2, 0);
		((Control)label168).Name = "label168";
		((Control)label168).Size = new Size(32, 21);
		((Control)label168).TabIndex = 68;
		((Control)label168).Text = "L2";
		((Control)label167).AutoSize = true;
		((Control)label167).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label167.ImageAlign = (ContentAlignment)1;
		((Control)label167).Location = new Point(226, 34);
		((Control)label167).Margin = new Padding(2, 0, 2, 0);
		((Control)label167).Name = "label167";
		((Control)label167).Size = new Size(32, 21);
		((Control)label167).TabIndex = 67;
		((Control)label167).Text = "L1";
		((Control)label78).AutoSize = true;
		((Control)label78).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label78.ImageAlign = (ContentAlignment)1;
		((Control)label78).Location = new Point(56, 35);
		((Control)label78).Margin = new Padding(2, 0, 2, 0);
		((Control)label78).Name = "label78";
		((Control)label78).Size = new Size(65, 21);
		((Control)label78).TabIndex = 66;
		((Control)label78).Text = "total";
		((Control)FWL3).AutoSize = true;
		((Control)FWL3).Location = new Point(202, 90);
		((Control)FWL3).Margin = new Padding(2);
		((Control)FWL3).Name = "FWL3";
		((Control)FWL3).Size = new Size(15, 14);
		((Control)FWL3).TabIndex = 65;
		((ButtonBase)FWL3).UseVisualStyleBackColor = true;
		((Control)FWL2).AutoSize = true;
		((Control)FWL2).Location = new Point(60, 90);
		((Control)FWL2).Margin = new Padding(2);
		((Control)FWL2).Name = "FWL2";
		((Control)FWL2).Size = new Size(15, 14);
		((Control)FWL2).TabIndex = 64;
		((ButtonBase)FWL2).UseVisualStyleBackColor = true;
		((Control)FWL1).AutoSize = true;
		((Control)FWL1).Location = new Point(202, 40);
		((Control)FWL1).Margin = new Padding(2);
		((Control)FWL1).Name = "FWL1";
		((Control)FWL1).Size = new Size(15, 14);
		((Control)FWL1).TabIndex = 62;
		((ButtonBase)FWL1).UseVisualStyleBackColor = true;
		((Control)FWALL).AutoSize = true;
		((Control)FWALL).Location = new Point(36, 41);
		((Control)FWALL).Margin = new Padding(2);
		((Control)FWALL).Name = "FWALL";
		((Control)FWALL).Size = new Size(15, 14);
		((Control)FWALL).TabIndex = 63;
		((ButtonBase)FWALL).UseVisualStyleBackColor = true;
		((Control)OverCountALL).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)OverCountALL).Location = new Point(122, 34);
		((Control)OverCountALL).Margin = new Padding(2);
		((TextBoxBase)OverCountALL).MaxLength = 2;
		((Control)OverCountALL).Name = "OverCountALL";
		((Control)OverCountALL).Size = new Size(30, 29);
		((Control)OverCountALL).TabIndex = 32;
		((Control)OverCountALL).Text = "0";
		((Control)ResetPC).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ResetPC).Location = new Point(316, 86);
		((Control)ResetPC).Margin = new Padding(2);
		((Control)ResetPC).Name = "ResetPC";
		((Control)ResetPC).Size = new Size(157, 26);
		((Control)ResetPC).TabIndex = 30;
		((Control)ResetPC).Text = "Set up distribution";
		((ButtonBase)ResetPC).UseVisualStyleBackColor = true;
		((Control)ResetPC).Click += ResetPC_Click;
		((Control)tabPage1).BackColor = Color.Gainsboro;
		((Control)tabPage1).Controls.Add((Control)(object)groupBox9);
		tabPage1.Location = new Point(4, 22);
		((Control)tabPage1).Margin = new Padding(2);
		((Control)tabPage1).Name = "tabPage1";
		((Control)tabPage1).Padding = new Padding(2);
		((Control)tabPage1).Size = new Size(608, 632);
		tabPage1.TabIndex = 0;
		((Control)tabPage1).Text = "Advance payment";
		((Control)groupBox9).BackColor = Color.FromArgb(224, 224, 224);
		((Control)groupBox9).Controls.Add((Control)(object)groupBox48);
		((Control)groupBox9).Controls.Add((Control)(object)groupBox50);
		((Control)groupBox9).Controls.Add((Control)(object)groupBox49);
		((Control)groupBox9).Controls.Add((Control)(object)groupBox43);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN0);
		((Control)groupBox9).Controls.Add((Control)(object)label200);
		((Control)groupBox9).Controls.Add((Control)(object)label188);
		((Control)groupBox9).Controls.Add((Control)(object)表号读取);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN10);
		((Control)groupBox9).Controls.Add((Control)(object)textBox8);
		((Control)groupBox9).Controls.Add((Control)(object)label144);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN8);
		((Control)groupBox9).Controls.Add((Control)(object)textBox7);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN9);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN7);
		((Control)groupBox9).Controls.Add((Control)(object)TouZhi);
		((Control)groupBox9).Controls.Add((Control)(object)label142);
		((Control)groupBox9).Controls.Add((Control)(object)textBoxPrice4);
		((Control)groupBox9).Controls.Add((Control)(object)label95);
		((Control)groupBox9).Controls.Add((Control)(object)textBoxPrice3);
		((Control)groupBox9).Controls.Add((Control)(object)label96);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN6);
		((Control)groupBox9).Controls.Add((Control)(object)textBoxPrice2);
		((Control)groupBox9).Controls.Add((Control)(object)label93);
		((Control)groupBox9).Controls.Add((Control)(object)textBoxPrice1);
		((Control)groupBox9).Controls.Add((Control)(object)label94);
		((Control)groupBox9).Controls.Add((Control)(object)checkBox1);
		((Control)groupBox9).Controls.Add((Control)(object)ReadMoneyControl);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN3);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN2);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN5);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN4);
		((Control)groupBox9).Controls.Add((Control)(object)FKEN1);
		((Control)groupBox9).Controls.Add((Control)(object)AllMoneyControl);
		((Control)groupBox9).Controls.Add((Control)(object)Alarm2);
		((Control)groupBox9).Controls.Add((Control)(object)label63);
		((Control)groupBox9).Controls.Add((Control)(object)Alarm1);
		((Control)groupBox9).Controls.Add((Control)(object)label64);
		((Control)groupBox9).Controls.Add((Control)(object)TotalE);
		((Control)groupBox9).Controls.Add((Control)(object)label66);
		((Control)groupBox9).Controls.Add((Control)(object)BaseE);
		((Control)groupBox9).Controls.Add((Control)(object)label67);
		((Control)groupBox9).Controls.Add((Control)(object)BuyTimes);
		((Control)groupBox9).Controls.Add((Control)(object)label68);
		((Control)groupBox9).Controls.Add((Control)(object)LeaveE);
		((Control)groupBox9).Controls.Add((Control)(object)label73);
		((Control)groupBox9).Controls.Add((Control)(object)MoneyControl);
		((Control)groupBox9).Controls.Add((Control)(object)OFFFK);
		((Control)groupBox9).Controls.Add((Control)(object)ONFK);
		((Control)groupBox9).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox9).Location = new Point(26, 24);
		((Control)groupBox9).Margin = new Padding(2);
		((Control)groupBox9).Name = "groupBox9";
		((Control)groupBox9).Padding = new Padding(2);
		((Control)groupBox9).Size = new Size(575, 602);
		((Control)groupBox9).TabIndex = 14;
		groupBox9.TabStop = false;
		((Control)groupBox9).Text = "v";
		((Control)groupBox9).Enter += v;
		((Control)groupBox48).Controls.Add((Control)(object)button12);
		((Control)groupBox48).Controls.Add((Control)(object)加密开);
		((Control)groupBox48).Controls.Add((Control)(object)加密关);
		((Control)groupBox48).Controls.Add((Control)(object)button13);
		((Control)groupBox48).Location = new Point(334, 490);
		((Control)groupBox48).Margin = new Padding(2);
		((Control)groupBox48).Name = "groupBox48";
		((Control)groupBox48).Padding = new Padding(2);
		((Control)groupBox48).Size = new Size(122, 98);
		((Control)groupBox48).TabIndex = 70;
		groupBox48.TabStop = false;
		((Control)button12).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button12).Location = new Point(64, 68);
		((Control)button12).Margin = new Padding(2);
		((Control)button12).Name = "button12";
		((Control)button12).Size = new Size(50, 22);
		((Control)button12).TabIndex = 44;
		((Control)button12).Text = "read";
		((ButtonBase)button12).UseVisualStyleBackColor = true;
		((Control)button12).Click += button12_Click;
		((Control)加密开).AutoSize = true;
		((Control)加密开).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)加密开).Location = new Point(6, 20);
		((Control)加密开).Margin = new Padding(2);
		((Control)加密开).Name = "加密开";
		((Control)加密开).Size = new Size(101, 16);
		((Control)加密开).TabIndex = 0;
		((Control)加密开).Text = "Encryption on";
		((ButtonBase)加密开).UseVisualStyleBackColor = true;
		((Control)加密关).AutoSize = true;
		加密关.Checked = true;
		((Control)加密关).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)加密关).Location = new Point(6, 42);
		((Control)加密关).Margin = new Padding(2);
		((Control)加密关).Name = "加密关";
		((Control)加密关).Size = new Size(107, 16);
		((Control)加密关).TabIndex = 1;
		加密关.TabStop = true;
		((Control)加密关).Text = "Encryption off";
		((ButtonBase)加密关).UseVisualStyleBackColor = true;
		((Control)button13).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button13).Location = new Point(10, 68);
		((Control)button13).Margin = new Padding(2);
		((Control)button13).Name = "button13";
		((Control)button13).Size = new Size(50, 22);
		((Control)button13).TabIndex = 43;
		((Control)button13).Text = "set";
		((ButtonBase)button13).UseVisualStyleBackColor = true;
		((Control)button13).Click += button13_Click_1;
		((Control)groupBox50).Controls.Add((Control)(object)新购电量);
		((Control)groupBox50).Controls.Add((Control)(object)label201);
		((Control)groupBox50).Controls.Add((Control)(object)new购电次数);
		((Control)groupBox50).Controls.Add((Control)(object)label202);
		((Control)groupBox50).Controls.Add((Control)(object)购电命令下发);
		((Control)groupBox50).Location = new Point(16, 384);
		((Control)groupBox50).Margin = new Padding(2);
		((Control)groupBox50).Name = "groupBox50";
		((Control)groupBox50).Padding = new Padding(2);
		((Control)groupBox50).Size = new Size(555, 100);
		((Control)groupBox50).TabIndex = 69;
		groupBox50.TabStop = false;
		((Control)groupBox50).Text = "Power purchase order";
		((Control)新购电量).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)新购电量).Location = new Point(275, 20);
		((Control)新购电量).Margin = new Padding(2);
		((TextBoxBase)新购电量).MaxLength = 8;
		((Control)新购电量).Name = "新购电量";
		((Control)新购电量).Size = new Size(98, 29);
		((Control)新购电量).TabIndex = 72;
		((Control)新购电量).Text = "0";
		((Control)label201).AutoSize = true;
		((Control)label201).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label201.ImageAlign = (ContentAlignment)1;
		((Control)label201).Location = new Point(10, 22);
		((Control)label201).Margin = new Padding(2, 0, 2, 0);
		((Control)label201).Name = "label201";
		((Control)label201).Size = new Size(219, 21);
		((Control)label201).TabIndex = 71;
		((Control)label201).Text = "New energy purchase";
		((Control)new购电次数).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)new购电次数).Location = new Point(275, 60);
		((Control)new购电次数).Margin = new Padding(2);
		((TextBoxBase)new购电次数).MaxLength = 6;
		((Control)new购电次数).Name = "new购电次数";
		((Control)new购电次数).Size = new Size(98, 29);
		((Control)new购电次数).TabIndex = 70;
		((Control)new购电次数).Text = "0";
		((Control)label202).AutoSize = true;
		((Control)label202).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label202.ImageAlign = (ContentAlignment)1;
		((Control)label202).Location = new Point(9, 63);
		((Control)label202).Margin = new Padding(2, 0, 2, 0);
		((Control)label202).Name = "label202";
		((Control)label202).Size = new Size(263, 21);
		((Control)label202).TabIndex = 69;
		((Control)label202).Text = "Times of power purchase";
		((Control)购电命令下发).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)购电命令下发).Location = new Point(421, 58);
		((Control)购电命令下发).Margin = new Padding(2);
		((Control)购电命令下发).Name = "购电命令下发";
		((Control)购电命令下发).Size = new Size(130, 30);
		((Control)购电命令下发).TabIndex = 68;
		((Control)购电命令下发).Text = "Power purchase";
		((ButtonBase)购电命令下发).UseVisualStyleBackColor = true;
		((Control)购电命令下发).Click += 购电命令下发_Click;
		((Control)groupBox49).Controls.Add((Control)(object)设置密钥);
		((Control)groupBox49).Controls.Add((Control)(object)button9);
		((Control)groupBox49).Controls.Add((Control)(object)密钥4);
		((Control)groupBox49).Controls.Add((Control)(object)密钥3);
		((Control)groupBox49).Controls.Add((Control)(object)密钥2);
		((Control)groupBox49).Controls.Add((Control)(object)密钥1);
		((Control)groupBox49).Location = new Point(10, 490);
		((Control)groupBox49).Margin = new Padding(2);
		((Control)groupBox49).Name = "groupBox49";
		((Control)groupBox49).Padding = new Padding(2);
		((Control)groupBox49).Size = new Size(316, 102);
		((Control)groupBox49).TabIndex = 67;
		groupBox49.TabStop = false;
		((Control)groupBox49).Text = "Key settings";
		((Control)设置密钥).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)设置密钥).Location = new Point(14, 67);
		((Control)设置密钥).Margin = new Padding(2);
		((Control)设置密钥).Name = "设置密钥";
		((Control)设置密钥).Size = new Size(74, 26);
		((Control)设置密钥).TabIndex = 62;
		((Control)设置密钥).Text = "set";
		((ButtonBase)设置密钥).UseVisualStyleBackColor = true;
		((Control)设置密钥).Click += 设置密钥_Click;
		((Control)button9).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button9).ForeColor = Color.Red;
		((Control)button9).Location = new Point(166, 68);
		((Control)button9).Margin = new Padding(2);
		((Control)button9).Name = "button9";
		((Control)button9).Size = new Size(144, 26);
		((Control)button9).TabIndex = 61;
		((Control)button9).Text = "Reset initial key";
		((ButtonBase)button9).UseVisualStyleBackColor = true;
		((Control)button9).Click += button9_Click_1;
		((Control)密钥4).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)密钥4).Location = new Point(214, 34);
		((Control)密钥4).Margin = new Padding(2);
		((TextBoxBase)密钥4).MaxLength = 4;
		((Control)密钥4).Name = "密钥4";
		((Control)密钥4).Size = new Size(59, 29);
		((Control)密钥4).TabIndex = 53;
		((Control)密钥4).Text = "10000";
		((Control)密钥3).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)密钥3).Location = new Point(148, 34);
		((Control)密钥3).Margin = new Padding(2);
		((TextBoxBase)密钥3).MaxLength = 4;
		((Control)密钥3).Name = "密钥3";
		((Control)密钥3).Size = new Size(59, 29);
		((Control)密钥3).TabIndex = 52;
		((Control)密钥3).Text = "10000";
		((Control)密钥2).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)密钥2).Location = new Point(78, 32);
		((Control)密钥2).Margin = new Padding(2);
		((TextBoxBase)密钥2).MaxLength = 4;
		((Control)密钥2).Name = "密钥2";
		((Control)密钥2).Size = new Size(59, 29);
		((Control)密钥2).TabIndex = 51;
		((Control)密钥2).Text = "10000";
		((Control)密钥1).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)密钥1).Location = new Point(14, 32);
		((Control)密钥1).Margin = new Padding(2);
		((TextBoxBase)密钥1).MaxLength = 4;
		((Control)密钥1).Name = "密钥1";
		((Control)密钥1).Size = new Size(59, 29);
		((Control)密钥1).TabIndex = 50;
		((Control)密钥1).Text = "10000";
		((Control)groupBox43).Controls.Add((Control)(object)radioButton2);
		((Control)groupBox43).Controls.Add((Control)(object)radioButton1);
		((Control)groupBox43).Location = new Point(486, 16);
		((Control)groupBox43).Margin = new Padding(2);
		((Control)groupBox43).Name = "groupBox43";
		((Control)groupBox43).Padding = new Padding(2);
		((Control)groupBox43).Size = new Size(50, 67);
		((Control)groupBox43).TabIndex = 66;
		groupBox43.TabStop = false;
		((Control)radioButton2).AutoSize = true;
		((Control)radioButton2).Location = new Point(6, 14);
		((Control)radioButton2).Margin = new Padding(2);
		((Control)radioButton2).Name = "radioButton2";
		((Control)radioButton2).Size = new Size(41, 20);
		((Control)radioButton2).TabIndex = 63;
		((Control)radioButton2).Text = "ON";
		((ButtonBase)radioButton2).UseVisualStyleBackColor = true;
		((Control)radioButton1).AutoSize = true;
		((Control)radioButton1).Location = new Point(6, 46);
		((Control)radioButton1).Margin = new Padding(2);
		((Control)radioButton1).Name = "radioButton1";
		((Control)radioButton1).Size = new Size(49, 20);
		((Control)radioButton1).TabIndex = 64;
		((Control)radioButton1).Text = "OFF";
		((ButtonBase)radioButton1).UseVisualStyleBackColor = true;
		((Control)FKEN0).AutoSize = true;
		((Control)FKEN0).Location = new Point(185, 66);
		((Control)FKEN0).Margin = new Padding(2);
		((Control)FKEN0).Name = "FKEN0";
		((Control)FKEN0).Size = new Size(15, 14);
		((Control)FKEN0).TabIndex = 65;
		((ButtonBase)FKEN0).UseVisualStyleBackColor = true;
		((Control)label200).AutoSize = true;
		((Control)label200).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label200.ImageAlign = (ContentAlignment)1;
		((Control)label200).Location = new Point(362, 26);
		((Control)label200).Margin = new Padding(2, 0, 2, 0);
		((Control)label200).Name = "label200";
		((Control)label200).Size = new Size(120, 21);
		((Control)label200).TabIndex = 62;
		((Control)label200).Text = "Encrypted ";
		((Control)label188).AutoSize = true;
		((Control)label188).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label188.ImageAlign = (ContentAlignment)1;
		((Control)label188).Location = new Point(12, 62);
		((Control)label188).Margin = new Padding(2, 0, 2, 0);
		((Control)label188).Name = "label188";
		((Control)label188).Size = new Size(164, 21);
		((Control)label188).TabIndex = 61;
		((Control)label188).Text = "Prepaid switch";
		((Control)表号读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)表号读取).Location = new Point(308, 352);
		((Control)表号读取).Margin = new Padding(2);
		((Control)表号读取).Name = "表号读取";
		((Control)表号读取).Size = new Size(155, 26);
		((Control)表号读取).TabIndex = 60;
		((Control)表号读取).Text = "Table number reading";
		((ButtonBase)表号读取).UseVisualStyleBackColor = true;
		((Control)表号读取).Click += 表号读取_Click;
		((Control)FKEN10).AutoSize = true;
		((Control)FKEN10).Location = new Point(10, 358);
		((Control)FKEN10).Margin = new Padding(2);
		((Control)FKEN10).Name = "FKEN10";
		((Control)FKEN10).Size = new Size(15, 14);
		((Control)FKEN10).TabIndex = 59;
		((ButtonBase)FKEN10).UseVisualStyleBackColor = true;
		((Control)textBox8).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBox8).Location = new Point(125, 352);
		((Control)textBox8).Margin = new Padding(2);
		((TextBoxBase)textBox8).MaxLength = 12;
		((Control)textBox8).Name = "textBox8";
		((Control)textBox8).Size = new Size(136, 29);
		((Control)textBox8).TabIndex = 58;
		((Control)textBox8).Text = "000000000001";
		((Control)label144).AutoSize = true;
		((Control)label144).Font = new Font("宋体", 15.75f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label144.ImageAlign = (ContentAlignment)1;
		((Control)label144).Location = new Point(24, 355);
		((Control)label144).Margin = new Padding(2, 0, 2, 0);
		((Control)label144).Name = "label144";
		((Control)label144).Size = new Size(98, 21);
		((Control)label144).TabIndex = 57;
		((Control)label144).Text = "Table No";
		((Control)FKEN8).AutoSize = true;
		((Control)FKEN8).Location = new Point(295, 314);
		((Control)FKEN8).Margin = new Padding(2);
		((Control)FKEN8).Name = "FKEN8";
		((Control)FKEN8).Size = new Size(15, 14);
		((Control)FKEN8).TabIndex = 56;
		((ButtonBase)FKEN8).UseVisualStyleBackColor = true;
		((Control)textBox7).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBox7).Location = new Point(469, 306);
		((Control)textBox7).Margin = new Padding(2);
		((TextBoxBase)textBox7).MaxLength = 8;
		((Control)textBox7).Name = "textBox7";
		((Control)textBox7).Size = new Size(98, 29);
		((Control)textBox7).TabIndex = 55;
		((Control)textBox7).Text = "0";
		((Control)FKEN9).AutoSize = true;
		((Control)FKEN9).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		FKEN9.ImageAlign = (ContentAlignment)1;
		((Control)FKEN9).Location = new Point(311, 310);
		((Control)FKEN9).Margin = new Padding(2, 0, 2, 0);
		((Control)FKEN9).Name = "FKEN9";
		((Control)FKEN9).Size = new Size(139, 19);
		((Control)FKEN9).TabIndex = 54;
		((Control)FKEN9).Text = "recovery time";
		((Control)FKEN7).AutoSize = true;
		((Control)FKEN7).Location = new Point(10, 314);
		((Control)FKEN7).Margin = new Padding(2);
		((Control)FKEN7).Name = "FKEN7";
		((Control)FKEN7).Size = new Size(15, 14);
		((Control)FKEN7).TabIndex = 53;
		((ButtonBase)FKEN7).UseVisualStyleBackColor = true;
		((Control)TouZhi).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)TouZhi).Location = new Point(191, 310);
		((Control)TouZhi).Margin = new Padding(2);
		((TextBoxBase)TouZhi).MaxLength = 8;
		((Control)TouZhi).Name = "TouZhi";
		((Control)TouZhi).Size = new Size(98, 29);
		((Control)TouZhi).TabIndex = 52;
		((Control)TouZhi).Text = "0";
		((Control)label142).AutoSize = true;
		((Control)label142).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label142.ImageAlign = (ContentAlignment)1;
		((Control)label142).Location = new Point(24, 310);
		((Control)label142).Margin = new Padding(2, 0, 2, 0);
		((Control)label142).Name = "label142";
		((Control)label142).Size = new Size(169, 19);
		((Control)label142).TabIndex = 51;
		((Control)label142).Text = "Overdraft amount";
		((Control)textBoxPrice4).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxPrice4).Location = new Point(469, 262);
		((Control)textBoxPrice4).Margin = new Padding(2);
		((TextBoxBase)textBoxPrice4).MaxLength = 8;
		((Control)textBoxPrice4).Name = "textBoxPrice4";
		((Control)textBoxPrice4).Size = new Size(98, 29);
		((Control)textBoxPrice4).TabIndex = 49;
		((Control)textBoxPrice4).Text = "10000";
		((Control)label95).AutoSize = true;
		((Control)label95).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label95.ImageAlign = (ContentAlignment)1;
		((Control)label95).Location = new Point(328, 266);
		((Control)label95).Margin = new Padding(2, 0, 2, 0);
		((Control)label95).Name = "label95";
		((Control)label95).Size = new Size(129, 19);
		((Control)label95).TabIndex = 48;
		((Control)label95).Text = "Valley price";
		((Control)textBoxPrice3).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxPrice3).Location = new Point(185, 266);
		((Control)textBoxPrice3).Margin = new Padding(2);
		((TextBoxBase)textBoxPrice3).MaxLength = 8;
		((Control)textBoxPrice3).Name = "textBoxPrice3";
		((Control)textBoxPrice3).Size = new Size(98, 29);
		((Control)textBoxPrice3).TabIndex = 47;
		((Control)textBoxPrice3).Text = "10000";
		((Control)label96).AutoSize = true;
		((Control)label96).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label96.ImageAlign = (ContentAlignment)1;
		((Control)label96).Location = new Point(48, 266);
		((Control)label96).Margin = new Padding(2, 0, 2, 0);
		((Control)label96).Name = "label96";
		((Control)label96).Size = new Size(109, 19);
		((Control)label96).TabIndex = 46;
		((Control)label96).Text = "Flat price";
		((Control)FKEN6).AutoSize = true;
		((Control)FKEN6).Location = new Point(10, 235);
		((Control)FKEN6).Margin = new Padding(2);
		((Control)FKEN6).Name = "FKEN6";
		((Control)FKEN6).Size = new Size(15, 14);
		((Control)FKEN6).TabIndex = 45;
		((ButtonBase)FKEN6).UseVisualStyleBackColor = true;
		((Control)textBoxPrice2).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxPrice2).Location = new Point(469, 226);
		((Control)textBoxPrice2).Margin = new Padding(2);
		((TextBoxBase)textBoxPrice2).MaxLength = 8;
		((Control)textBoxPrice2).Name = "textBoxPrice2";
		((Control)textBoxPrice2).Size = new Size(98, 29);
		((Control)textBoxPrice2).TabIndex = 44;
		((Control)textBoxPrice2).Text = "10000";
		((Control)label93).AutoSize = true;
		((Control)label93).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label93.ImageAlign = (ContentAlignment)1;
		((Control)label93).Location = new Point(328, 230);
		((Control)label93).Margin = new Padding(2, 0, 2, 0);
		((Control)label93).Name = "label93";
		((Control)label93).Size = new Size(119, 19);
		((Control)label93).TabIndex = 43;
		((Control)label93).Text = "Peak  price";
		((Control)textBoxPrice1).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)textBoxPrice1).Location = new Point(185, 230);
		((Control)textBoxPrice1).Margin = new Padding(2);
		((TextBoxBase)textBoxPrice1).MaxLength = 8;
		((Control)textBoxPrice1).Name = "textBoxPrice1";
		((Control)textBoxPrice1).Size = new Size(98, 29);
		((Control)textBoxPrice1).TabIndex = 42;
		((Control)textBoxPrice1).Text = "10000";
		((Control)label94).AutoSize = true;
		((Control)label94).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label94.ImageAlign = (ContentAlignment)1;
		((Control)label94).Location = new Point(48, 230);
		((Control)label94).Margin = new Padding(2, 0, 2, 0);
		((Control)label94).Name = "label94";
		((Control)label94).Size = new Size(119, 19);
		((Control)label94).TabIndex = 41;
		((Control)label94).Text = "Sharp price";
		((Control)checkBox1).AutoSize = true;
		((Control)checkBox1).Location = new Point(-53, 202);
		((Control)checkBox1).Margin = new Padding(2);
		((Control)checkBox1).Name = "checkBox1";
		((Control)checkBox1).Size = new Size(15, 14);
		((Control)checkBox1).TabIndex = 40;
		((ButtonBase)checkBox1).UseVisualStyleBackColor = true;
		((Control)ReadMoneyControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ReadMoneyControl).Location = new Point(14, 26);
		((Control)ReadMoneyControl).Margin = new Padding(2);
		((Control)ReadMoneyControl).Name = "ReadMoneyControl";
		((Control)ReadMoneyControl).Size = new Size(74, 26);
		((Control)ReadMoneyControl).TabIndex = 38;
		((Control)ReadMoneyControl).Text = "Read ";
		((ButtonBase)ReadMoneyControl).UseVisualStyleBackColor = true;
		((Control)ReadMoneyControl).Click += ReadMoneyControl_Click;
		((Control)FKEN3).AutoSize = true;
		((Control)FKEN3).Location = new Point(291, 146);
		((Control)FKEN3).Margin = new Padding(2);
		((Control)FKEN3).Name = "FKEN3";
		((Control)FKEN3).Size = new Size(15, 14);
		((Control)FKEN3).TabIndex = 37;
		((ButtonBase)FKEN3).UseVisualStyleBackColor = true;
		((Control)FKEN2).AutoSize = true;
		((Control)FKEN2).Location = new Point(291, 103);
		((Control)FKEN2).Margin = new Padding(2);
		((Control)FKEN2).Name = "FKEN2";
		((Control)FKEN2).Size = new Size(15, 14);
		((Control)FKEN2).TabIndex = 36;
		((ButtonBase)FKEN2).UseVisualStyleBackColor = true;
		((Control)FKEN5).AutoSize = true;
		((Control)FKEN5).Location = new Point(10, 194);
		((Control)FKEN5).Margin = new Padding(2);
		((Control)FKEN5).Name = "FKEN5";
		((Control)FKEN5).Size = new Size(15, 14);
		((Control)FKEN5).TabIndex = 35;
		((ButtonBase)FKEN5).UseVisualStyleBackColor = true;
		((Control)FKEN4).AutoSize = true;
		((Control)FKEN4).Location = new Point(10, 148);
		((Control)FKEN4).Margin = new Padding(2);
		((Control)FKEN4).Name = "FKEN4";
		((Control)FKEN4).Size = new Size(15, 14);
		((Control)FKEN4).TabIndex = 34;
		((ButtonBase)FKEN4).UseVisualStyleBackColor = true;
		((Control)FKEN1).AutoSize = true;
		((Control)FKEN1).Location = new Point(10, 103);
		((Control)FKEN1).Margin = new Padding(2);
		((Control)FKEN1).Name = "FKEN1";
		((Control)FKEN1).Size = new Size(15, 14);
		((Control)FKEN1).TabIndex = 33;
		((ButtonBase)FKEN1).UseVisualStyleBackColor = true;
		((Control)AllMoneyControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)AllMoneyControl).Location = new Point(206, 26);
		((Control)AllMoneyControl).Margin = new Padding(2);
		((Control)AllMoneyControl).Name = "AllMoneyControl";
		((Control)AllMoneyControl).Size = new Size(147, 26);
		((Control)AllMoneyControl).TabIndex = 32;
		((Control)AllMoneyControl).Text = "Broadcast distribution";
		((ButtonBase)AllMoneyControl).UseVisualStyleBackColor = true;
		((Control)AllMoneyControl).Click += AllMoneyControl_Click;
		((Control)Alarm2).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Alarm2).Location = new Point(469, 184);
		((Control)Alarm2).Margin = new Padding(2);
		((TextBoxBase)Alarm2).MaxLength = 8;
		((Control)Alarm2).Name = "Alarm2";
		((Control)Alarm2).Size = new Size(98, 29);
		((Control)Alarm2).TabIndex = 31;
		((Control)Alarm2).Text = "0";
		((Control)label63).AutoSize = true;
		((Control)label63).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label63.ImageAlign = (ContentAlignment)1;
		((Control)label63).Location = new Point(304, 188);
		((Control)label63).Margin = new Padding(2, 0, 2, 0);
		((Control)label63).Name = "label63";
		((Control)label63).Size = new Size(139, 19);
		((Control)label63).TabIndex = 30;
		((Control)label63).Text = "Alarm energy2";
		((Control)Alarm1).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Alarm1).Location = new Point(185, 188);
		((Control)Alarm1).Margin = new Padding(2);
		((TextBoxBase)Alarm1).MaxLength = 8;
		((Control)Alarm1).Name = "Alarm1";
		((Control)Alarm1).Size = new Size(98, 29);
		((Control)Alarm1).TabIndex = 29;
		((Control)Alarm1).Text = "0";
		((Control)label64).AutoSize = true;
		((Control)label64).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label64.ImageAlign = (ContentAlignment)1;
		((Control)label64).Location = new Point(24, 190);
		((Control)label64).Margin = new Padding(2, 0, 2, 0);
		((Control)label64).Name = "label64";
		((Control)label64).Size = new Size(139, 19);
		((Control)label64).TabIndex = 28;
		((Control)label64).Text = "Alarm energy1";
		((Control)TotalE).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)TotalE).Location = new Point(469, 140);
		((Control)TotalE).Margin = new Padding(2);
		((TextBoxBase)TotalE).MaxLength = 8;
		((Control)TotalE).Name = "TotalE";
		((Control)TotalE).Size = new Size(98, 29);
		((Control)TotalE).TabIndex = 27;
		((Control)TotalE).Text = "0";
		((Control)label66).AutoSize = true;
		((Control)label66).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label66.ImageAlign = (ContentAlignment)1;
		((Control)label66).Location = new Point(304, 142);
		((Control)label66).Margin = new Padding(2, 0, 2, 0);
		((Control)label66).Name = "label66";
		((Control)label66).Size = new Size(139, 19);
		((Control)label66).TabIndex = 26;
		((Control)label66).Text = "Total energy ";
		((Control)BaseE).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)BaseE).Location = new Point(185, 144);
		((Control)BaseE).Margin = new Padding(2);
		((TextBoxBase)BaseE).MaxLength = 8;
		((Control)BaseE).Name = "BaseE";
		((Control)BaseE).Size = new Size(98, 29);
		((Control)BaseE).TabIndex = 25;
		((Control)BaseE).Text = "0";
		((Control)label67).AutoSize = true;
		((Control)label67).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label67.ImageAlign = (ContentAlignment)1;
		((Control)label67).Location = new Point(24, 144);
		((Control)label67).Margin = new Padding(2, 0, 2, 0);
		((Control)label67).Name = "label67";
		((Control)label67).Size = new Size(129, 19);
		((Control)label67).TabIndex = 24;
		((Control)label67).Text = "Basic energy";
		((Control)BuyTimes).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)BuyTimes).Location = new Point(469, 96);
		((Control)BuyTimes).Margin = new Padding(2);
		((TextBoxBase)BuyTimes).MaxLength = 6;
		((Control)BuyTimes).Name = "BuyTimes";
		((Control)BuyTimes).Size = new Size(98, 29);
		((Control)BuyTimes).TabIndex = 23;
		((Control)BuyTimes).Text = "0";
		((Control)label68).AutoSize = true;
		((Control)label68).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label68.ImageAlign = (ContentAlignment)1;
		((Control)label68).Location = new Point(304, 98);
		((Control)label68).Margin = new Padding(2, 0, 2, 0);
		((Control)label68).Name = "label68";
		((Control)label68).Size = new Size(159, 19);
		((Control)label68).TabIndex = 22;
		((Control)label68).Text = "Times  purchase";
		((Control)LeaveE).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)LeaveE).Location = new Point(185, 100);
		((Control)LeaveE).Margin = new Padding(2);
		((TextBoxBase)LeaveE).MaxLength = 8;
		((Control)LeaveE).Name = "LeaveE";
		((Control)LeaveE).Size = new Size(98, 29);
		((Control)LeaveE).TabIndex = 21;
		((Control)LeaveE).Text = "0";
		((Control)label73).AutoSize = true;
		((Control)label73).Font = new Font("宋体", 14.25f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		label73.ImageAlign = (ContentAlignment)1;
		((Control)label73).Location = new Point(24, 100);
		((Control)label73).Margin = new Padding(2, 0, 2, 0);
		((Control)label73).Name = "label73";
		((Control)label73).Size = new Size(159, 19);
		((Control)label73).TabIndex = 20;
		((Control)label73).Text = "Residual energy";
		((Control)MoneyControl).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)MoneyControl).Location = new Point(110, 26);
		((Control)MoneyControl).Margin = new Padding(2);
		((Control)MoneyControl).Name = "MoneyControl";
		((Control)MoneyControl).Size = new Size(74, 26);
		((Control)MoneyControl).TabIndex = 10;
		((Control)MoneyControl).Text = "Set";
		((ButtonBase)MoneyControl).UseVisualStyleBackColor = true;
		((Control)MoneyControl).Click += MoneyControl_Click;
		((Control)OFFFK).AutoSize = true;
		((Control)OFFFK).Location = new Point(278, 64);
		((Control)OFFFK).Margin = new Padding(2);
		((Control)OFFFK).Name = "OFFFK";
		((Control)OFFFK).Size = new Size(49, 20);
		((Control)OFFFK).TabIndex = 1;
		((Control)OFFFK).Text = "OFF";
		((ButtonBase)OFFFK).UseVisualStyleBackColor = true;
		((Control)ONFK).AutoSize = true;
		((Control)ONFK).Location = new Point(219, 64);
		((Control)ONFK).Margin = new Padding(2);
		((Control)ONFK).Name = "ONFK";
		((Control)ONFK).Size = new Size(41, 20);
		((Control)ONFK).TabIndex = 0;
		((Control)ONFK).Text = "ON";
		((ButtonBase)ONFK).UseVisualStyleBackColor = true;
		((Control)tabControl1).Controls.Add((Control)(object)tabPage9);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage12);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage10);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage1);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage5);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage4);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage2);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage3);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage7);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage6);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage8);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage11);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage13);
		((Control)tabControl1).Controls.Add((Control)(object)tabPage14);
		tabControl1.HotTrack = true;
		((Control)tabControl1).Location = new Point(576, 58);
		((Control)tabControl1).Margin = new Padding(2);
		((Control)tabControl1).Name = "tabControl1";
		tabControl1.SelectedIndex = 0;
		((Control)tabControl1).Size = new Size(616, 658);
		((Control)tabControl1).TabIndex = 32;
		((Control)tabPage9).BackColor = Color.Gainsboro;
		((Control)tabPage9).Controls.Add((Control)(object)ADF400广播清零);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox62);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox60);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox58);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox55);
		((Control)tabPage9).Controls.Add((Control)(object)ADF400互感器接入回路);
		((Control)tabPage9).Controls.Add((Control)(object)ADF4001通讯);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox54);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox53);
		((Control)tabPage9).Controls.Add((Control)(object)groupBox59);
		tabPage9.Location = new Point(4, 22);
		((Control)tabPage9).Margin = new Padding(2);
		((Control)tabPage9).Name = "tabPage9";
		((Control)tabPage9).Size = new Size(608, 632);
		tabPage9.TabIndex = 8;
		((Control)tabPage9).Text = "ADF400L Set";
		((Control)ADF400广播清零).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400广播清零).Location = new Point(299, 46);
		((Control)ADF400广播清零).Margin = new Padding(2);
		((Control)ADF400广播清零).Name = "ADF400广播清零";
		((Control)ADF400广播清零).Size = new Size(114, 22);
		((Control)ADF400广播清零).TabIndex = 42;
		((Control)ADF400广播清零).Text = "Broadcast clear";
		((ButtonBase)ADF400广播清零).UseVisualStyleBackColor = true;
		((Control)ADF400广播清零).Click += ADF400广播清零_Click;
		((Control)groupBox62).Controls.Add((Control)(object)Read序列号);
		((Control)groupBox62).Controls.Add((Control)(object)Set序列号);
		((Control)groupBox62).Controls.Add((Control)(object)label235);
		((Control)groupBox62).Controls.Add((Control)(object)ADF400序列号);
		((Control)groupBox62).Location = new Point(352, 6);
		((Control)groupBox62).Margin = new Padding(2);
		((Control)groupBox62).Name = "groupBox62";
		((Control)groupBox62).Padding = new Padding(2);
		((Control)groupBox62).Size = new Size(249, 72);
		((Control)groupBox62).TabIndex = 53;
		groupBox62.TabStop = false;
		((Control)groupBox62).Text = "Serial number setting";
		((Control)Read序列号).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Read序列号).Location = new Point(89, 38);
		((Control)Read序列号).Margin = new Padding(2);
		((Control)Read序列号).Name = "Read序列号";
		((Control)Read序列号).Size = new Size(59, 21);
		((Control)Read序列号).TabIndex = 61;
		((Control)Read序列号).Text = "read";
		((ButtonBase)Read序列号).UseVisualStyleBackColor = true;
		((Control)Read序列号).Click += Read序列号_Click;
		((Control)Set序列号).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)Set序列号).Location = new Point(161, 38);
		((Control)Set序列号).Margin = new Padding(2);
		((Control)Set序列号).Name = "Set序列号";
		((Control)Set序列号).Size = new Size(64, 21);
		((Control)Set序列号).TabIndex = 60;
		((Control)Set序列号).Text = "set ";
		((ButtonBase)Set序列号).UseVisualStyleBackColor = true;
		((Control)Set序列号).Click += Set序列号_Click;
		((Control)label235).AutoSize = true;
		((Control)label235).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label235).Location = new Point(6, 18);
		((Control)label235).Margin = new Padding(2, 0, 2, 0);
		((Control)label235).Name = "label235";
		((Control)label235).Size = new Size(95, 12);
		((Control)label235).TabIndex = 59;
		((Control)label235).Text = "serial number：";
		((Control)ADF400序列号).Location = new Point(105, 13);
		((Control)ADF400序列号).Margin = new Padding(2);
		((TextBoxBase)ADF400序列号).MaxLength = 14;
		((Control)ADF400序列号).Name = "ADF400序列号";
		((Control)ADF400序列号).Size = new Size(136, 21);
		((Control)ADF400序列号).TabIndex = 58;
		((Control)groupBox60).Controls.Add((Control)(object)ADF400校验位);
		((Control)groupBox60).Controls.Add((Control)(object)label275);
		((Control)groupBox60).Controls.Add((Control)(object)ADF4003通讯);
		((Control)groupBox60).Controls.Add((Control)(object)label246);
		((Control)groupBox60).Controls.Add((Control)(object)button32);
		((Control)groupBox60).Controls.Add((Control)(object)button33);
		((Control)groupBox60).Controls.Add((Control)(object)ADF400波特率);
		((Control)groupBox60).Controls.Add((Control)(object)ADF4002通讯);
		((Control)groupBox60).Controls.Add((Control)(object)label241);
		((Control)groupBox60).Controls.Add((Control)(object)ADF400地址);
		((Control)groupBox60).Location = new Point(352, 223);
		((Control)groupBox60).Margin = new Padding(2);
		((Control)groupBox60).Name = "groupBox60";
		((Control)groupBox60).Padding = new Padding(2);
		((Control)groupBox60).Size = new Size(241, 91);
		((Control)groupBox60).TabIndex = 52;
		groupBox60.TabStop = false;
		ADF400校验位.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400校验位).FormattingEnabled = true;
		ADF400校验位.Items.AddRange(new object[3] { "nonE", "Odd", "EvEn" });
		((Control)ADF400校验位).Location = new Point(179, 65);
		((Control)ADF400校验位).Margin = new Padding(2);
		((Control)ADF400校验位).Name = "ADF400校验位";
		((Control)ADF400校验位).Size = new Size(58, 20);
		((Control)ADF400校验位).TabIndex = 62;
		((Control)label275).AutoSize = true;
		((Control)label275).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label275).Location = new Point(107, 71);
		((Control)label275).Margin = new Padding(2, 0, 2, 0);
		((Control)label275).Name = "label275";
		((Control)label275).Size = new Size(71, 12);
		((Control)label275).TabIndex = 61;
		((Control)label275).Text = "Check bit：";
		((Control)ADF4003通讯).AutoSize = true;
		((Control)ADF4003通讯).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF4003通讯).Location = new Point(48, 20);
		((Control)ADF4003通讯).Margin = new Padding(2);
		((Control)ADF4003通讯).Name = "ADF4003通讯";
		((Control)ADF4003通讯).Size = new Size(137, 16);
		((Control)ADF4003通讯).TabIndex = 60;
		((Control)ADF4003通讯).Tag = "";
		((Control)ADF4003通讯).Text = "3-way communication";
		((ButtonBase)ADF4003通讯).UseVisualStyleBackColor = true;
		((Control)label246).AutoSize = true;
		((Control)label246).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label246).Location = new Point(107, 43);
		((Control)label246).Margin = new Padding(2, 0, 2, 0);
		((Control)label246).Name = "label246";
		((Control)label246).Size = new Size(71, 12);
		((Control)label246).TabIndex = 59;
		((Control)label246).Text = "Baud rate：";
		((Control)button32).Location = new Point(55, 67);
		((Control)button32).Margin = new Padding(2);
		((Control)button32).Name = "button32";
		((Control)button32).Size = new Size(48, 22);
		((Control)button32).TabIndex = 58;
		((Control)button32).Text = "set";
		((ButtonBase)button32).UseVisualStyleBackColor = true;
		((Control)button32).Click += button32_Click;
		((Control)button33).Location = new Point(7, 67);
		((Control)button33).Margin = new Padding(2);
		((Control)button33).Name = "button33";
		((Control)button33).Size = new Size(43, 22);
		((Control)button33).TabIndex = 57;
		((Control)button33).Text = "read";
		((ButtonBase)button33).UseVisualStyleBackColor = true;
		((Control)button33).Click += button33_Click;
		ADF400波特率.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400波特率).FormattingEnabled = true;
		ADF400波特率.Items.AddRange(new object[5] { "9600", "9600", "4800", "2400", "1200" });
		((Control)ADF400波特率).Location = new Point(178, 40);
		((Control)ADF400波特率).Margin = new Padding(2);
		((Control)ADF400波特率).Name = "ADF400波特率";
		((Control)ADF400波特率).Size = new Size(58, 20);
		((Control)ADF400波特率).TabIndex = 48;
		((Control)ADF4002通讯).AutoSize = true;
		((Control)ADF4002通讯).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF4002通讯).Location = new Point(48, 0);
		((Control)ADF4002通讯).Margin = new Padding(2);
		((Control)ADF4002通讯).Name = "ADF4002通讯";
		((Control)ADF4002通讯).Size = new Size(137, 16);
		((Control)ADF4002通讯).TabIndex = 51;
		((Control)ADF4002通讯).Tag = "";
		((Control)ADF4002通讯).Text = "2-way communication";
		((ButtonBase)ADF4002通讯).UseVisualStyleBackColor = true;
		((Control)label241).AutoSize = true;
		((Control)label241).Location = new Point(1, 45);
		((Control)label241).Margin = new Padding(2, 0, 2, 0);
		((Control)label241).Name = "label241";
		((Control)label241).Size = new Size(41, 12);
		((Control)label241).TabIndex = 47;
		((Control)label241).Text = "addr：";
		ADF400地址.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400地址).FormattingEnabled = true;
		ADF400地址.Items.AddRange(new object[10] { "1", "37", "73", "109", "145", "181", "217", "253", "", "" });
		((Control)ADF400地址).Location = new Point(45, 40);
		((Control)ADF400地址).Margin = new Padding(2);
		((Control)ADF400地址).Name = "ADF400地址";
		((Control)ADF400地址).Size = new Size(58, 20);
		((Control)ADF400地址).TabIndex = 49;
		((Control)groupBox58).Controls.Add((Control)(object)label237);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400电能清零);
		((Control)groupBox58).Controls.Add((Control)(object)label238);
		((Control)groupBox58).Controls.Add((Control)(object)label239);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400脉冲常数);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400电流);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400电压);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400校准);
		((Control)groupBox58).Controls.Add((Control)(object)ADF400初始化);
		((Control)groupBox58).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox58).Location = new Point(20, 6);
		((Control)groupBox58).Margin = new Padding(2);
		((Control)groupBox58).Name = "groupBox58";
		((Control)groupBox58).Padding = new Padding(2);
		((Control)groupBox58).Size = new Size(301, 71);
		((Control)groupBox58).TabIndex = 44;
		groupBox58.TabStop = false;
		((Control)groupBox58).Text = "calibration";
		((Control)label237).AutoSize = true;
		((Control)label237).Location = new Point(205, 17);
		((Control)label237).Margin = new Padding(2, 0, 2, 0);
		((Control)label237).Name = "label237";
		((Control)label237).Size = new Size(23, 12);
		((Control)label237).TabIndex = 23;
		((Control)label237).Text = "Ec:";
		((Control)ADF400电能清零).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400电能清零).Location = new Point(202, 40);
		((Control)ADF400电能清零).Margin = new Padding(2);
		((Control)ADF400电能清零).Name = "ADF400电能清零";
		((Control)ADF400电能清零).Size = new Size(67, 22);
		((Control)ADF400电能清零).TabIndex = 41;
		((Control)ADF400电能清零).Text = "energy clearing";
		((ButtonBase)ADF400电能清零).UseVisualStyleBackColor = true;
		((Control)ADF400电能清零).Click += ADF400电能清零_Click;
		((Control)label238).AutoSize = true;
		((Control)label238).Location = new Point(109, 18);
		((Control)label238).Margin = new Padding(2, 0, 2, 0);
		((Control)label238).Name = "label238";
		((Control)label238).Size = new Size(23, 12);
		((Control)label238).TabIndex = 22;
		((Control)label238).Text = "Ib:";
		((Control)label239).AutoSize = true;
		((Control)label239).Location = new Point(10, 17);
		((Control)label239).Margin = new Padding(2, 0, 2, 0);
		((Control)label239).Name = "label239";
		((Control)label239).Size = new Size(23, 12);
		((Control)label239).TabIndex = 21;
		((Control)label239).Text = "Un:";
		ADF400脉冲常数.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400脉冲常数).FormattingEnabled = true;
		ADF400脉冲常数.Items.AddRange(new object[3] { "6400", "1600", "400" });
		((Control)ADF400脉冲常数).Location = new Point(236, 15);
		((Control)ADF400脉冲常数).Margin = new Padding(2);
		((Control)ADF400脉冲常数).Name = "ADF400脉冲常数";
		((Control)ADF400脉冲常数).Size = new Size(56, 20);
		((Control)ADF400脉冲常数).TabIndex = 20;
		ADF400电流.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400电流).FormattingEnabled = true;
		ADF400电流.Items.AddRange(new object[3] { "1", "10（60）", "10（100）" });
		((Control)ADF400电流).Location = new Point(136, 15);
		((Control)ADF400电流).Margin = new Padding(2);
		((Control)ADF400电流).Name = "ADF400电流";
		((Control)ADF400电流).Size = new Size(56, 20);
		((Control)ADF400电流).TabIndex = 19;
		ADF400电压.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400电压).FormattingEnabled = true;
		ADF400电压.Items.AddRange(new object[3] { "57.7", "220", "380" });
		((Control)ADF400电压).Location = new Point(38, 14);
		((Control)ADF400电压).Margin = new Padding(2);
		((Control)ADF400电压).Name = "ADF400电压";
		((Control)ADF400电压).Size = new Size(56, 20);
		((Control)ADF400电压).TabIndex = 18;
		((Control)ADF400校准).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400校准).Location = new Point(125, 40);
		((Control)ADF400校准).Margin = new Padding(2);
		((Control)ADF400校准).Name = "ADF400校准";
		((Control)ADF400校准).Size = new Size(67, 22);
		((Control)ADF400校准).TabIndex = 11;
		((Control)ADF400校准).Text = "calibration";
		((ButtonBase)ADF400校准).UseVisualStyleBackColor = true;
		((Control)ADF400校准).Click += ADF400校准_Click;
		((Control)ADF400初始化).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400初始化).Location = new Point(4, 40);
		((Control)ADF400初始化).Margin = new Padding(2);
		((Control)ADF400初始化).Name = "ADF400初始化";
		((Control)ADF400初始化).Size = new Size(117, 21);
		((Control)ADF400初始化).TabIndex = 10;
		((Control)ADF400初始化).Text = "initialization";
		((ButtonBase)ADF400初始化).UseVisualStyleBackColor = true;
		((Control)ADF400初始化).Click += ADF400初始化_Click;
		((Control)groupBox55).Controls.Add((Control)(object)groupBox90);
		((Control)groupBox55).Controls.Add((Control)(object)groupBox57);
		((Control)groupBox55).Controls.Add((Control)(object)groupBox56);
		((Control)groupBox55).Controls.Add((Control)(object)button19);
		((Control)groupBox55).Controls.Add((Control)(object)ADF400设置DO);
		((Control)groupBox55).Location = new Point(29, 514);
		((Control)groupBox55).Margin = new Padding(2);
		((Control)groupBox55).Name = "groupBox55";
		((Control)groupBox55).Padding = new Padding(2);
		((Control)groupBox55).Size = new Size(514, 116);
		((Control)groupBox55).TabIndex = 2;
		groupBox55.TabStop = false;
		((Control)groupBox55).Text = "Switch state";
		((Control)groupBox90).Controls.Add((Control)(object)ADF400主机);
		((Control)groupBox90).Controls.Add((Control)(object)ADF400从机);
		((Control)groupBox90).Location = new Point(8, 19);
		((Control)groupBox90).Margin = new Padding(2);
		((Control)groupBox90).Name = "groupBox90";
		((Control)groupBox90).Padding = new Padding(2);
		((Control)groupBox90).Size = new Size(66, 104);
		((Control)groupBox90).TabIndex = 194;
		groupBox90.TabStop = false;
		((Control)ADF400主机).AutoSize = true;
		ADF400主机.Checked = true;
		((Control)ADF400主机).Location = new Point(18, 30);
		((Control)ADF400主机).Margin = new Padding(2);
		((Control)ADF400主机).Name = "ADF400主机";
		((Control)ADF400主机).Size = new Size(47, 16);
		((Control)ADF400主机).TabIndex = 6;
		ADF400主机.TabStop = true;
		((Control)ADF400主机).Text = "Host";
		((ButtonBase)ADF400主机).UseVisualStyleBackColor = true;
		ADF400主机.CheckedChanged += ADF400主机_CheckedChanged;
		((Control)ADF400从机).AutoSize = true;
		((Control)ADF400从机).Location = new Point(19, 70);
		((Control)ADF400从机).Margin = new Padding(2);
		((Control)ADF400从机).Name = "ADF400从机";
		((Control)ADF400从机).Size = new Size(53, 16);
		((Control)ADF400从机).TabIndex = 7;
		((Control)ADF400从机).Text = "Slave";
		((ButtonBase)ADF400从机).UseVisualStyleBackColor = true;
		((Control)groupBox57).Controls.Add((Control)(object)groupBox73);
		((Control)groupBox57).Controls.Add((Control)(object)groupBox71);
		((Control)groupBox57).Controls.Add((Control)(object)label234);
		((Control)groupBox57).Controls.Add((Control)(object)label233);
		((Control)groupBox57).Location = new Point(250, 19);
		((Control)groupBox57).Margin = new Padding(2);
		((Control)groupBox57).Name = "groupBox57";
		((Control)groupBox57).Padding = new Padding(2);
		((Control)groupBox57).Size = new Size(143, 104);
		((Control)groupBox57).TabIndex = 1;
		groupBox57.TabStop = false;
		((Control)groupBox57).Text = "DO state";
		((Control)groupBox73).Controls.Add((Control)(object)ADF400DO1分);
		((Control)groupBox73).Controls.Add((Control)(object)ADF400DO1合);
		((Control)groupBox73).Location = new Point(46, 15);
		((Control)groupBox73).Margin = new Padding(2);
		((Control)groupBox73).Name = "groupBox73";
		((Control)groupBox73).Padding = new Padding(2);
		((Control)groupBox73).Size = new Size(93, 34);
		((Control)groupBox73).TabIndex = 193;
		groupBox73.TabStop = false;
		((Control)ADF400DO1分).AutoSize = true;
		((Control)ADF400DO1分).Location = new Point(6, 14);
		((Control)ADF400DO1分).Margin = new Padding(2);
		((Control)ADF400DO1分).Name = "ADF400DO1分";
		((Control)ADF400DO1分).Size = new Size(41, 16);
		((Control)ADF400DO1分).TabIndex = 8;
		((Control)ADF400DO1分).Text = "OFF";
		((ButtonBase)ADF400DO1分).UseVisualStyleBackColor = true;
		((Control)ADF400DO1合).AutoSize = true;
		ADF400DO1合.Checked = true;
		((Control)ADF400DO1合).Location = new Point(49, 14);
		((Control)ADF400DO1合).Margin = new Padding(2);
		((Control)ADF400DO1合).Name = "ADF400DO1合";
		((Control)ADF400DO1合).Size = new Size(35, 16);
		((Control)ADF400DO1合).TabIndex = 9;
		ADF400DO1合.TabStop = true;
		((Control)ADF400DO1合).Text = "ON";
		((ButtonBase)ADF400DO1合).UseVisualStyleBackColor = true;
		((Control)groupBox71).Controls.Add((Control)(object)ADF400DO2分);
		((Control)groupBox71).Controls.Add((Control)(object)ADF400DO2合);
		((Control)groupBox71).Location = new Point(46, 58);
		((Control)groupBox71).Margin = new Padding(2);
		((Control)groupBox71).Name = "groupBox71";
		((Control)groupBox71).Padding = new Padding(2);
		((Control)groupBox71).Size = new Size(97, 34);
		((Control)groupBox71).TabIndex = 193;
		groupBox71.TabStop = false;
		((Control)ADF400DO2分).AutoSize = true;
		((Control)ADF400DO2分).Location = new Point(5, 14);
		((Control)ADF400DO2分).Margin = new Padding(2);
		((Control)ADF400DO2分).Name = "ADF400DO2分";
		((Control)ADF400DO2分).Size = new Size(41, 16);
		((Control)ADF400DO2分).TabIndex = 10;
		((Control)ADF400DO2分).Text = "OFF";
		((ButtonBase)ADF400DO2分).UseVisualStyleBackColor = true;
		((Control)ADF400DO2合).AutoSize = true;
		ADF400DO2合.Checked = true;
		((Control)ADF400DO2合).Location = new Point(49, 14);
		((Control)ADF400DO2合).Margin = new Padding(2);
		((Control)ADF400DO2合).Name = "ADF400DO2合";
		((Control)ADF400DO2合).Size = new Size(35, 16);
		((Control)ADF400DO2合).TabIndex = 11;
		ADF400DO2合.TabStop = true;
		((Control)ADF400DO2合).Text = "ON";
		((ButtonBase)ADF400DO2合).UseVisualStyleBackColor = true;
		((Control)label234).AutoSize = true;
		((Control)label234).Location = new Point(2, 74);
		((Control)label234).Margin = new Padding(2, 0, 2, 0);
		((Control)label234).Name = "label234";
		((Control)label234).Size = new Size(35, 12);
		((Control)label234).TabIndex = 4;
		((Control)label234).Text = "DO2：";
		((Control)label233).AutoSize = true;
		((Control)label233).Location = new Point(2, 29);
		((Control)label233).Margin = new Padding(2, 0, 2, 0);
		((Control)label233).Name = "label233";
		((Control)label233).Size = new Size(35, 12);
		((Control)label233).TabIndex = 3;
		((Control)label233).Text = "DO1：";
		((Control)groupBox56).Controls.Add((Control)(object)groupBox70);
		((Control)groupBox56).Controls.Add((Control)(object)groupBox69);
		((Control)groupBox56).Controls.Add((Control)(object)label232);
		((Control)groupBox56).Controls.Add((Control)(object)label231);
		((Control)groupBox56).Location = new Point(88, 19);
		((Control)groupBox56).Margin = new Padding(2);
		((Control)groupBox56).Name = "groupBox56";
		((Control)groupBox56).Padding = new Padding(2);
		((Control)groupBox56).Size = new Size(158, 104);
		((Control)groupBox56).TabIndex = 0;
		groupBox56.TabStop = false;
		((Control)groupBox56).Text = "DI state";
		((Control)groupBox70).Controls.Add((Control)(object)ADF400DI2分);
		((Control)groupBox70).Controls.Add((Control)(object)ADF400DI2合);
		((Control)groupBox70).Location = new Point(44, 58);
		((Control)groupBox70).Margin = new Padding(2);
		((Control)groupBox70).Name = "groupBox70";
		((Control)groupBox70).Padding = new Padding(2);
		((Control)groupBox70).Size = new Size(90, 34);
		((Control)groupBox70).TabIndex = 193;
		groupBox70.TabStop = false;
		((Control)ADF400DI2分).AutoSize = true;
		((Control)ADF400DI2分).Location = new Point(7, 14);
		((Control)ADF400DI2分).Margin = new Padding(2);
		((Control)ADF400DI2分).Name = "ADF400DI2分";
		((Control)ADF400DI2分).Size = new Size(41, 16);
		((Control)ADF400DI2分).TabIndex = 8;
		((Control)ADF400DI2分).Text = "OFF";
		((ButtonBase)ADF400DI2分).UseVisualStyleBackColor = true;
		((Control)ADF400DI2合).AutoSize = true;
		ADF400DI2合.Checked = true;
		((Control)ADF400DI2合).Location = new Point(52, 13);
		((Control)ADF400DI2合).Margin = new Padding(2);
		((Control)ADF400DI2合).Name = "ADF400DI2合";
		((Control)ADF400DI2合).Size = new Size(35, 16);
		((Control)ADF400DI2合).TabIndex = 9;
		ADF400DI2合.TabStop = true;
		((Control)ADF400DI2合).Text = "ON";
		((ButtonBase)ADF400DI2合).UseVisualStyleBackColor = true;
		((Control)groupBox69).Controls.Add((Control)(object)ADF400DI1分);
		((Control)groupBox69).Controls.Add((Control)(object)ADF400DI1合);
		((Control)groupBox69).Location = new Point(44, 14);
		((Control)groupBox69).Margin = new Padding(2);
		((Control)groupBox69).Name = "groupBox69";
		((Control)groupBox69).Padding = new Padding(2);
		((Control)groupBox69).Size = new Size(90, 34);
		((Control)groupBox69).TabIndex = 193;
		groupBox69.TabStop = false;
		((Control)ADF400DI1分).AutoSize = true;
		((Control)ADF400DI1分).Location = new Point(4, 14);
		((Control)ADF400DI1分).Margin = new Padding(2);
		((Control)ADF400DI1分).Name = "ADF400DI1分";
		((Control)ADF400DI1分).Size = new Size(41, 16);
		((Control)ADF400DI1分).TabIndex = 6;
		((Control)ADF400DI1分).Text = "OFF";
		((ButtonBase)ADF400DI1分).UseVisualStyleBackColor = true;
		((Control)ADF400DI1合).AutoSize = true;
		ADF400DI1合.Checked = true;
		((Control)ADF400DI1合).Location = new Point(55, 14);
		((Control)ADF400DI1合).Margin = new Padding(2);
		((Control)ADF400DI1合).Name = "ADF400DI1合";
		((Control)ADF400DI1合).Size = new Size(35, 16);
		((Control)ADF400DI1合).TabIndex = 7;
		ADF400DI1合.TabStop = true;
		((Control)ADF400DI1合).Text = "ON";
		((ButtonBase)ADF400DI1合).UseVisualStyleBackColor = true;
		((Control)label232).AutoSize = true;
		((Control)label232).Location = new Point(4, 73);
		((Control)label232).Margin = new Padding(2, 0, 2, 0);
		((Control)label232).Name = "label232";
		((Control)label232).Size = new Size(35, 12);
		((Control)label232).TabIndex = 3;
		((Control)label232).Text = "DI2：";
		((Control)label231).AutoSize = true;
		((Control)label231).Location = new Point(4, 29);
		((Control)label231).Margin = new Padding(2, 0, 2, 0);
		((Control)label231).Name = "label231";
		((Control)label231).Size = new Size(35, 12);
		((Control)label231).TabIndex = 2;
		((Control)label231).Text = "DI1：";
		((Control)button19).Location = new Point(418, 35);
		((Control)button19).Margin = new Padding(2);
		((Control)button19).Name = "button19";
		((Control)button19).Size = new Size(82, 25);
		((Control)button19).TabIndex = 10;
		((Control)button19).Text = "read DIDO";
		((ButtonBase)button19).UseVisualStyleBackColor = true;
		((Control)button19).Click += button19_Click;
		((Control)ADF400设置DO).Location = new Point(418, 80);
		((Control)ADF400设置DO).Margin = new Padding(2);
		((Control)ADF400设置DO).Name = "ADF400设置DO";
		((Control)ADF400设置DO).Size = new Size(82, 25);
		((Control)ADF400设置DO).TabIndex = 17;
		((Control)ADF400设置DO).Text = "set DO";
		((ButtonBase)ADF400设置DO).UseVisualStyleBackColor = true;
		((Control)ADF400设置DO).Click += ADF400设置DO_Click;
		((Control)ADF400互感器接入回路).Location = new Point(305, 198);
		((Control)ADF400互感器接入回路).Margin = new Padding(2);
		((Control)ADF400互感器接入回路).Name = "ADF400互感器接入回路";
		((Control)ADF400互感器接入回路).Size = new Size(76, 21);
		((Control)ADF400互感器接入回路).TabIndex = 5;
		((Control)ADF400互感器接入回路).Text = "0";
		((Control)ADF4001通讯).AutoSize = true;
		ADF4001通讯.Checked = true;
		((Control)ADF4001通讯).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF4001通讯).Location = new Point(400, 201);
		((Control)ADF4001通讯).Margin = new Padding(2);
		((Control)ADF4001通讯).Name = "ADF4001通讯";
		((Control)ADF4001通讯).Size = new Size(137, 16);
		((Control)ADF4001通讯).TabIndex = 50;
		ADF4001通讯.TabStop = true;
		((Control)ADF4001通讯).Text = "1-way communication";
		((ButtonBase)ADF4001通讯).UseVisualStyleBackColor = true;
		((Control)groupBox54).Controls.Add((Control)(object)groupBox68);
		((Control)groupBox54).Controls.Add((Control)(object)groupBox67);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400脉宽);
		((Control)groupBox54).Controls.Add((Control)(object)groupBox66);
		((Control)groupBox54).Controls.Add((Control)(object)label243);
		((Control)groupBox54).Controls.Add((Control)(object)label242);
		((Control)groupBox54).Controls.Add((Control)(object)button18);
		((Control)groupBox54).Controls.Add((Control)(object)button17);
		((Control)groupBox54).Controls.Add((Control)(object)label230);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400间隔);
		((Control)groupBox54).Controls.Add((Control)(object)label229);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400PT);
		((Control)groupBox54).Controls.Add((Control)(object)label228);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT12);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT8);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT4);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT11);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT7);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT3);
		((Control)groupBox54).Controls.Add((Control)(object)label227);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT10);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT6);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT2);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT9);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT5);
		((Control)groupBox54).Controls.Add((Control)(object)ADF400CT1);
		((Control)groupBox54).Controls.Add((Control)(object)label223);
		((Control)groupBox54).Controls.Add((Control)(object)label224);
		((Control)groupBox54).Controls.Add((Control)(object)label225);
		((Control)groupBox54).Controls.Add((Control)(object)label226);
		((Control)groupBox54).Controls.Add((Control)(object)label219);
		((Control)groupBox54).Controls.Add((Control)(object)label220);
		((Control)groupBox54).Controls.Add((Control)(object)label221);
		((Control)groupBox54).Controls.Add((Control)(object)label222);
		((Control)groupBox54).Controls.Add((Control)(object)label217);
		((Control)groupBox54).Controls.Add((Control)(object)label218);
		((Control)groupBox54).Controls.Add((Control)(object)label216);
		((Control)groupBox54).Controls.Add((Control)(object)label214);
		((Control)groupBox54).Controls.Add((Control)(object)label212);
		((Control)groupBox54).Location = new Point(29, 314);
		((Control)groupBox54).Margin = new Padding(2);
		((Control)groupBox54).Name = "groupBox54";
		((Control)groupBox54).Padding = new Padding(2);
		((Control)groupBox54).Size = new Size(559, 195);
		((Control)groupBox54).TabIndex = 1;
		groupBox54.TabStop = false;
		((Control)groupBox54).Text = "Loop ratio setting";
		((Control)groupBox68).Controls.Add((Control)(object)ADF400无线);
		((Control)groupBox68).Controls.Add((Control)(object)ADF400无无线);
		((Control)groupBox68).Location = new Point(56, 157);
		((Control)groupBox68).Margin = new Padding(2);
		((Control)groupBox68).Name = "groupBox68";
		((Control)groupBox68).Padding = new Padding(2);
		((Control)groupBox68).Size = new Size(156, 36);
		((Control)groupBox68).TabIndex = 195;
		groupBox68.TabStop = false;
		((Control)ADF400无线).AutoSize = true;
		((Control)ADF400无线).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400无线).Location = new Point(18, 14);
		((Control)ADF400无线).Margin = new Padding(2);
		((Control)ADF400无线).Name = "ADF400无线";
		((Control)ADF400无线).Size = new Size(71, 16);
		((Control)ADF400无线).TabIndex = 50;
		((Control)ADF400无线).Text = "Wireless";
		((ButtonBase)ADF400无线).UseVisualStyleBackColor = true;
		((Control)ADF400无无线).AutoSize = true;
		ADF400无无线.Checked = true;
		((Control)ADF400无无线).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400无无线).Location = new Point(92, 14);
		((Control)ADF400无无线).Margin = new Padding(2);
		((Control)ADF400无无线).Name = "ADF400无无线";
		((Control)ADF400无无线).Size = new Size(35, 16);
		((Control)ADF400无无线).TabIndex = 52;
		ADF400无无线.TabStop = true;
		((Control)ADF400无无线).Text = "NO";
		((ButtonBase)ADF400无无线).UseVisualStyleBackColor = true;
		((Control)groupBox67).Controls.Add((Control)(object)ADF400电平);
		((Control)groupBox67).Controls.Add((Control)(object)ADF400脉冲);
		((Control)groupBox67).Location = new Point(413, 129);
		((Control)groupBox67).Margin = new Padding(2);
		((Control)groupBox67).Name = "groupBox67";
		((Control)groupBox67).Padding = new Padding(2);
		((Control)groupBox67).Size = new Size(135, 34);
		((Control)groupBox67).TabIndex = 194;
		groupBox67.TabStop = false;
		((Control)ADF400电平).AutoSize = true;
		((Control)ADF400电平).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400电平).Location = new Point(11, 14);
		((Control)ADF400电平).Margin = new Padding(2);
		((Control)ADF400电平).Name = "ADF400电平";
		((Control)ADF400电平).Size = new Size(53, 16);
		((Control)ADF400电平).TabIndex = 49;
		((Control)ADF400电平).Text = "level";
		((ButtonBase)ADF400电平).UseVisualStyleBackColor = true;
		((Control)ADF400脉冲).AutoSize = true;
		ADF400脉冲.Checked = true;
		((Control)ADF400脉冲).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400脉冲).Location = new Point(76, 14);
		((Control)ADF400脉冲).Margin = new Padding(2);
		((Control)ADF400脉冲).Name = "ADF400脉冲";
		((Control)ADF400脉冲).Size = new Size(53, 16);
		((Control)ADF400脉冲).TabIndex = 54;
		ADF400脉冲.TabStop = true;
		((Control)ADF400脉冲).Text = "pulse";
		((ButtonBase)ADF400脉冲).UseVisualStyleBackColor = true;
		((Control)ADF400脉宽).Location = new Point(77, 138);
		((Control)ADF400脉宽).Margin = new Padding(2);
		((Control)ADF400脉宽).Name = "ADF400脉宽";
		((Control)ADF400脉宽).Size = new Size(44, 21);
		((Control)ADF400脉宽).TabIndex = 29;
		((Control)ADF400脉宽).Text = "500";
		((Control)groupBox66).Controls.Add((Control)(object)ADF4003p3l);
		((Control)groupBox66).Controls.Add((Control)(object)ADF4003p4l);
		((Control)groupBox66).Location = new Point(313, 11);
		((Control)groupBox66).Margin = new Padding(2);
		((Control)groupBox66).Name = "groupBox66";
		((Control)groupBox66).Padding = new Padding(2);
		((Control)groupBox66).Size = new Size(124, 31);
		((Control)groupBox66).TabIndex = 193;
		groupBox66.TabStop = false;
		((Control)ADF4003p3l).AutoSize = true;
		((Control)ADF4003p3l).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF4003p3l).Location = new Point(8, 10);
		((Control)ADF4003p3l).Margin = new Padding(2);
		((Control)ADF4003p3l).Name = "ADF4003p3l";
		((Control)ADF4003p3l).Size = new Size(53, 18);
		((Control)ADF4003p3l).TabIndex = 53;
		((Control)ADF4003p3l).Text = "3P3L";
		((ButtonBase)ADF4003p3l).UseVisualStyleBackColor = true;
		((Control)ADF4003p4l).AutoSize = true;
		ADF4003p4l.Checked = true;
		((Control)ADF4003p4l).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF4003p4l).Location = new Point(64, 10);
		((Control)ADF4003p4l).Margin = new Padding(2);
		((Control)ADF4003p4l).Name = "ADF4003p4l";
		((Control)ADF4003p4l).Size = new Size(53, 18);
		((Control)ADF4003p4l).TabIndex = 51;
		ADF4003p4l.TabStop = true;
		((Control)ADF4003p4l).Text = "3P4L";
		((ButtonBase)ADF4003p4l).UseVisualStyleBackColor = true;
		((Control)label243).AutoSize = true;
		((Control)label243).Location = new Point(335, 145);
		((Control)label243).Margin = new Padding(2, 0, 2, 0);
		((Control)label243).Name = "label243";
		((Control)label243).Size = new Size(83, 12);
		((Control)label243).TabIndex = 58;
		((Control)label243).Text = "Output mode：";
		((Control)label242).AutoSize = true;
		((Control)label242).Location = new Point(166, 25);
		((Control)label242).Margin = new Padding(2, 0, 2, 0);
		((Control)label242).Name = "label242";
		((Control)label242).Size = new Size(143, 12);
		((Control)label242).TabIndex = 57;
		((Control)label242).Text = "Line system selection：";
		((Control)button18).Location = new Point(417, 171);
		((Control)button18).Margin = new Padding(2);
		((Control)button18).Name = "button18";
		((Control)button18).Size = new Size(82, 22);
		((Control)button18).TabIndex = 11;
		((Control)button18).Text = "set";
		((ButtonBase)button18).UseVisualStyleBackColor = true;
		((Control)button18).Click += button18_Click;
		((Control)button17).Location = new Point(302, 171);
		((Control)button17).Margin = new Padding(2);
		((Control)button17).Name = "button17";
		((Control)button17).Size = new Size(82, 22);
		((Control)button17).TabIndex = 33;
		((Control)button17).Text = "read";
		((ButtonBase)button17).UseVisualStyleBackColor = true;
		((Control)button17).Click += button17_Click;
		((Control)label230).AutoSize = true;
		((Control)label230).Location = new Point(294, 146);
		((Control)label230).Margin = new Padding(2, 0, 2, 0);
		((Control)label230).Name = "label230";
		((Control)label230).Size = new Size(11, 12);
		((Control)label230).TabIndex = 32;
		((Control)label230).Text = "s";
		((Control)ADF400间隔).Location = new Point(249, 138);
		((Control)ADF400间隔).Margin = new Padding(2);
		((Control)ADF400间隔).Name = "ADF400间隔";
		((Control)ADF400间隔).Size = new Size(44, 21);
		((Control)ADF400间隔).TabIndex = 31;
		((Control)ADF400间隔).Text = "30";
		((Control)label229).AutoSize = true;
		((Control)label229).Location = new Point(128, 143);
		((Control)label229).Margin = new Padding(2, 0, 2, 0);
		((Control)label229).Name = "label229";
		((Control)label229).Size = new Size(17, 12);
		((Control)label229).TabIndex = 30;
		((Control)label229).Text = "ms";
		((Control)ADF400PT).Location = new Point(34, 19);
		((Control)ADF400PT).Margin = new Padding(2);
		((Control)ADF400PT).Name = "ADF400PT";
		((Control)ADF400PT).Size = new Size(84, 21);
		((Control)ADF400PT).TabIndex = 26;
		((Control)ADF400PT).Text = "1";
		((Control)label228).AutoSize = true;
		((Control)label228).Location = new Point(152, 143);
		((Control)label228).Margin = new Padding(2, 0, 2, 0);
		((Control)label228).Name = "label228";
		((Control)label228).Size = new Size(101, 12);
		((Control)label228).TabIndex = 28;
		((Control)label228).Text = "Pulse interval：";
		((Control)ADF400CT12).Location = new Point(417, 104);
		((Control)ADF400CT12).Margin = new Padding(2);
		((Control)ADF400CT12).Name = "ADF400CT12";
		((Control)ADF400CT12).Size = new Size(84, 21);
		((Control)ADF400CT12).TabIndex = 25;
		((Control)ADF400CT12).Text = "1";
		((Control)ADF400CT8).Location = new Point(417, 75);
		((Control)ADF400CT8).Margin = new Padding(2);
		((Control)ADF400CT8).Name = "ADF400CT8";
		((Control)ADF400CT8).Size = new Size(84, 21);
		((Control)ADF400CT8).TabIndex = 24;
		((Control)ADF400CT8).Text = "1";
		((Control)ADF400CT4).Location = new Point(417, 46);
		((Control)ADF400CT4).Margin = new Padding(2);
		((Control)ADF400CT4).Name = "ADF400CT4";
		((Control)ADF400CT4).Size = new Size(84, 21);
		((Control)ADF400CT4).TabIndex = 23;
		((Control)ADF400CT4).Text = "1";
		((Control)ADF400CT11).Location = new Point(284, 104);
		((Control)ADF400CT11).Margin = new Padding(2);
		((Control)ADF400CT11).Name = "ADF400CT11";
		((Control)ADF400CT11).Size = new Size(84, 21);
		((Control)ADF400CT11).TabIndex = 22;
		((Control)ADF400CT11).Text = "1";
		((Control)ADF400CT7).Location = new Point(284, 75);
		((Control)ADF400CT7).Margin = new Padding(2);
		((Control)ADF400CT7).Name = "ADF400CT7";
		((Control)ADF400CT7).Size = new Size(84, 21);
		((Control)ADF400CT7).TabIndex = 21;
		((Control)ADF400CT7).Text = "1";
		((Control)ADF400CT3).Location = new Point(284, 46);
		((Control)ADF400CT3).Margin = new Padding(2);
		((Control)ADF400CT3).Name = "ADF400CT3";
		((Control)ADF400CT3).Size = new Size(84, 21);
		((Control)ADF400CT3).TabIndex = 20;
		((Control)ADF400CT3).Text = "1";
		((Control)label227).AutoSize = true;
		((Control)label227).Location = new Point(2, 143);
		((Control)label227).Margin = new Padding(2, 0, 2, 0);
		((Control)label227).Name = "label227";
		((Control)label227).Size = new Size(83, 12);
		((Control)label227).TabIndex = 27;
		((Control)label227).Text = "pulse width：";
		((Control)ADF400CT10).Location = new Point(164, 104);
		((Control)ADF400CT10).Margin = new Padding(2);
		((Control)ADF400CT10).Name = "ADF400CT10";
		((Control)ADF400CT10).Size = new Size(84, 21);
		((Control)ADF400CT10).TabIndex = 19;
		((Control)ADF400CT10).Text = "1";
		((Control)ADF400CT6).Location = new Point(164, 75);
		((Control)ADF400CT6).Margin = new Padding(2);
		((Control)ADF400CT6).Name = "ADF400CT6";
		((Control)ADF400CT6).Size = new Size(84, 21);
		((Control)ADF400CT6).TabIndex = 18;
		((Control)ADF400CT6).Text = "1";
		((Control)ADF400CT2).Location = new Point(164, 46);
		((Control)ADF400CT2).Margin = new Padding(2);
		((Control)ADF400CT2).Name = "ADF400CT2";
		((Control)ADF400CT2).Size = new Size(84, 21);
		((Control)ADF400CT2).TabIndex = 17;
		((Control)ADF400CT2).Text = "1";
		((Control)ADF400CT9).Location = new Point(34, 104);
		((Control)ADF400CT9).Margin = new Padding(2);
		((Control)ADF400CT9).Name = "ADF400CT9";
		((Control)ADF400CT9).Size = new Size(84, 21);
		((Control)ADF400CT9).TabIndex = 16;
		((Control)ADF400CT9).Text = "1";
		((Control)ADF400CT5).Location = new Point(34, 75);
		((Control)ADF400CT5).Margin = new Padding(2);
		((Control)ADF400CT5).Name = "ADF400CT5";
		((Control)ADF400CT5).Size = new Size(84, 21);
		((Control)ADF400CT5).TabIndex = 15;
		((Control)ADF400CT5).Text = "1";
		((Control)ADF400CT1).Location = new Point(34, 46);
		((Control)ADF400CT1).Margin = new Padding(2);
		((Control)ADF400CT1).Name = "ADF400CT1";
		((Control)ADF400CT1).Size = new Size(84, 21);
		((Control)ADF400CT1).TabIndex = 14;
		((Control)ADF400CT1).Text = "1";
		((Control)label223).AutoSize = true;
		((Control)label223).Location = new Point(382, 106);
		((Control)label223).Margin = new Padding(2, 0, 2, 0);
		((Control)label223).Name = "label223";
		((Control)label223).Size = new Size(41, 12);
		((Control)label223).TabIndex = 13;
		((Control)label223).Text = "CT12：";
		((Control)label224).AutoSize = true;
		((Control)label224).Location = new Point(250, 104);
		((Control)label224).Margin = new Padding(2, 0, 2, 0);
		((Control)label224).Name = "label224";
		((Control)label224).Size = new Size(41, 12);
		((Control)label224).TabIndex = 12;
		((Control)label224).Text = "CT11：";
		((Control)label225).AutoSize = true;
		((Control)label225).Location = new Point(130, 104);
		((Control)label225).Margin = new Padding(2, 0, 2, 0);
		((Control)label225).Name = "label225";
		((Control)label225).Size = new Size(41, 12);
		((Control)label225).TabIndex = 11;
		((Control)label225).Text = "CT10：";
		((Control)label226).AutoSize = true;
		((Control)label226).Location = new Point(7, 103);
		((Control)label226).Margin = new Padding(2, 0, 2, 0);
		((Control)label226).Name = "label226";
		((Control)label226).Size = new Size(35, 12);
		((Control)label226).TabIndex = 10;
		((Control)label226).Text = "CT9：";
		((Control)label219).AutoSize = true;
		((Control)label219).Location = new Point(389, 78);
		((Control)label219).Margin = new Padding(2, 0, 2, 0);
		((Control)label219).Name = "label219";
		((Control)label219).Size = new Size(35, 12);
		((Control)label219).TabIndex = 9;
		((Control)label219).Text = "CT8：";
		((Control)label220).AutoSize = true;
		((Control)label220).Location = new Point(256, 76);
		((Control)label220).Margin = new Padding(2, 0, 2, 0);
		((Control)label220).Name = "label220";
		((Control)label220).Size = new Size(35, 12);
		((Control)label220).TabIndex = 8;
		((Control)label220).Text = "CT7：";
		((Control)label221).AutoSize = true;
		((Control)label221).Location = new Point(136, 76);
		((Control)label221).Margin = new Padding(2, 0, 2, 0);
		((Control)label221).Name = "label221";
		((Control)label221).Size = new Size(35, 12);
		((Control)label221).TabIndex = 7;
		((Control)label221).Text = "CT6：";
		((Control)label222).AutoSize = true;
		((Control)label222).Location = new Point(7, 75);
		((Control)label222).Margin = new Padding(2, 0, 2, 0);
		((Control)label222).Name = "label222";
		((Control)label222).Size = new Size(35, 12);
		((Control)label222).TabIndex = 6;
		((Control)label222).Text = "CT5：";
		((Control)label217).AutoSize = true;
		((Control)label217).Location = new Point(389, 51);
		((Control)label217).Margin = new Padding(2, 0, 2, 0);
		((Control)label217).Name = "label217";
		((Control)label217).Size = new Size(35, 12);
		((Control)label217).TabIndex = 5;
		((Control)label217).Text = "CT4：";
		((Control)label218).AutoSize = true;
		((Control)label218).Location = new Point(256, 50);
		((Control)label218).Margin = new Padding(2, 0, 2, 0);
		((Control)label218).Name = "label218";
		((Control)label218).Size = new Size(35, 12);
		((Control)label218).TabIndex = 4;
		((Control)label218).Text = "CT3：";
		((Control)label216).AutoSize = true;
		((Control)label216).Location = new Point(136, 50);
		((Control)label216).Margin = new Padding(2, 0, 2, 0);
		((Control)label216).Name = "label216";
		((Control)label216).Size = new Size(35, 12);
		((Control)label216).TabIndex = 3;
		((Control)label216).Text = "CT2：";
		((Control)label214).AutoSize = true;
		((Control)label214).Location = new Point(7, 49);
		((Control)label214).Margin = new Padding(2, 0, 2, 0);
		((Control)label214).Name = "label214";
		((Control)label214).Size = new Size(35, 12);
		((Control)label214).TabIndex = 2;
		((Control)label214).Text = "CT1：";
		((Control)label212).AutoSize = true;
		((Control)label212).Location = new Point(13, 24);
		((Control)label212).Margin = new Padding(2, 0, 2, 0);
		((Control)label212).Name = "label212";
		((Control)label212).Size = new Size(29, 12);
		((Control)label212).TabIndex = 1;
		((Control)label212).Text = "PT：";
		((Control)groupBox53).Controls.Add((Control)(object)ADF400计量型);
		((Control)groupBox53).Controls.Add((Control)(object)ADF400无使能IC);
		((Control)groupBox53).Controls.Add((Control)(object)groupBox63);
		((Control)groupBox53).Controls.Add((Control)(object)groupBox61);
		((Control)groupBox53).Controls.Add((Control)(object)ADF400dlt645协议);
		((Control)groupBox53).Controls.Add((Control)(object)ADF400表号);
		((Control)groupBox53).Controls.Add((Control)(object)label240);
		((Control)groupBox53).Controls.Add((Control)(object)button16);
		((Control)groupBox53).Controls.Add((Control)(object)button15);
		((Control)groupBox53).Controls.Add((Control)(object)ADF400三相数量);
		((Control)groupBox53).Controls.Add((Control)(object)ADF400单相数量);
		((Control)groupBox53).Controls.Add((Control)(object)label207);
		((Control)groupBox53).Controls.Add((Control)(object)label204);
		((Control)groupBox53).Location = new Point(20, 82);
		((Control)groupBox53).Margin = new Padding(2);
		((Control)groupBox53).Name = "groupBox53";
		((Control)groupBox53).Padding = new Padding(2);
		((Control)groupBox53).Size = new Size(586, 110);
		((Control)groupBox53).TabIndex = 0;
		groupBox53.TabStop = false;
		((Control)groupBox53).Text = "Specification setting";
		((Control)ADF400计量型).AutoSize = true;
		ADF400计量型.Checked = true;
		((Control)ADF400计量型).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400计量型).Location = new Point(106, 71);
		((Control)ADF400计量型).Margin = new Padding(2);
		((Control)ADF400计量型).Name = "ADF400计量型";
		((Control)ADF400计量型).Size = new Size(125, 16);
		((Control)ADF400计量型).TabIndex = 60;
		ADF400计量型.TabStop = true;
		((Control)ADF400计量型).Text = "Metrological type";
		((ButtonBase)ADF400计量型).UseVisualStyleBackColor = true;
		((Control)ADF400无使能IC).AutoSize = true;
		ADF400无使能IC.Checked = true;
		((Control)ADF400无使能IC).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400无使能IC).Location = new Point(439, 80);
		((Control)ADF400无使能IC).Margin = new Padding(2);
		((Control)ADF400无使能IC).Name = "ADF400无使能IC";
		((Control)ADF400无使能IC).Size = new Size(95, 16);
		((Control)ADF400无使能IC).TabIndex = 62;
		ADF400无使能IC.TabStop = true;
		((Control)ADF400无使能IC).Text = "No enable IC";
		((ButtonBase)ADF400无使能IC).UseVisualStyleBackColor = true;
		((Control)groupBox63).Controls.Add((Control)(object)ADF400使能IC);
		((Control)groupBox63).Location = new Point(354, 71);
		((Control)groupBox63).Margin = new Padding(2);
		((Control)groupBox63).Name = "groupBox63";
		((Control)groupBox63).Padding = new Padding(2);
		((Control)groupBox63).Size = new Size(81, 24);
		((Control)groupBox63).TabIndex = 193;
		groupBox63.TabStop = false;
		((Control)ADF400使能IC).AutoSize = true;
		((Control)ADF400使能IC).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400使能IC).Location = new Point(1, 8);
		((Control)ADF400使能IC).Margin = new Padding(2);
		((Control)ADF400使能IC).Name = "ADF400使能IC";
		((Control)ADF400使能IC).Size = new Size(77, 16);
		((Control)ADF400使能IC).TabIndex = 61;
		((Control)ADF400使能IC).Text = "Enable IC";
		((ButtonBase)ADF400使能IC).UseVisualStyleBackColor = true;
		((Control)groupBox61).Controls.Add((Control)(object)ADF400预付费型);
		((Control)groupBox61).Location = new Point(20, 66);
		((Control)groupBox61).Margin = new Padding(2);
		((Control)groupBox61).Name = "groupBox61";
		((Control)groupBox61).Padding = new Padding(2);
		((Control)groupBox61).Size = new Size(154, 30);
		((Control)groupBox61).TabIndex = 64;
		groupBox61.TabStop = false;
		((Control)ADF400预付费型).AutoSize = true;
		((Control)ADF400预付费型).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400预付费型).Location = new Point(14, 5);
		((Control)ADF400预付费型).Margin = new Padding(2);
		((Control)ADF400预付费型).Name = "ADF400预付费型";
		((Control)ADF400预付费型).Size = new Size(65, 16);
		((Control)ADF400预付费型).TabIndex = 59;
		((Control)ADF400预付费型).Text = "Prepaid";
		((ButtonBase)ADF400预付费型).UseVisualStyleBackColor = true;
		((Control)ADF400dlt645协议).AutoSize = true;
		((Control)ADF400dlt645协议).Location = new Point(354, 52);
		((Control)ADF400dlt645协议).Margin = new Padding(2);
		((Control)ADF400dlt645协议).Name = "ADF400dlt645协议";
		((Control)ADF400dlt645协议).Size = new Size(78, 16);
		((Control)ADF400dlt645协议).TabIndex = 63;
		((Control)ADF400dlt645协议).Text = "DLT645-07";
		((ButtonBase)ADF400dlt645协议).UseVisualStyleBackColor = true;
		((Control)ADF400表号).Location = new Point(411, 23);
		((Control)ADF400表号).Margin = new Padding(2);
		((TextBoxBase)ADF400表号).MaxLength = 12;
		((Control)ADF400表号).Name = "ADF400表号";
		((Control)ADF400表号).Size = new Size(122, 21);
		((Control)ADF400表号).TabIndex = 41;
		((Control)ADF400表号).Text = "0000000001";
		((Control)label240).AutoSize = true;
		((Control)label240).Location = new Point(352, 29);
		((Control)label240).Margin = new Padding(2, 0, 2, 0);
		((Control)label240).Name = "label240";
		((Control)label240).Size = new Size(65, 12);
		((Control)label240).TabIndex = 40;
		((Control)label240).Text = "Table No：";
		((Control)button16).Location = new Point(524, 49);
		((Control)button16).Margin = new Padding(2);
		((Control)button16).Name = "button16";
		((Control)button16).Size = new Size(49, 21);
		((Control)button16).TabIndex = 10;
		((Control)button16).Text = "set";
		((ButtonBase)button16).UseVisualStyleBackColor = true;
		((Control)button16).Click += button16_Click;
		((Control)button15).Location = new Point(459, 49);
		((Control)button15).Margin = new Padding(2);
		((Control)button15).Name = "button15";
		((Control)button15).Size = new Size(49, 21);
		((Control)button15).TabIndex = 9;
		((Control)button15).Text = "read";
		((ButtonBase)button15).UseVisualStyleBackColor = true;
		((Control)button15).Click += button15_Click;
		((Control)ADF400三相数量).Location = new Point(272, 50);
		((Control)ADF400三相数量).Margin = new Padding(2);
		((Control)ADF400三相数量).Name = "ADF400三相数量";
		((Control)ADF400三相数量).Size = new Size(76, 21);
		((Control)ADF400三相数量).TabIndex = 3;
		((Control)ADF400三相数量).Text = "0";
		((Control)ADF400单相数量).Location = new Point(272, 20);
		((Control)ADF400单相数量).Margin = new Padding(2);
		((Control)ADF400单相数量).Name = "ADF400单相数量";
		((Control)ADF400单相数量).Size = new Size(76, 21);
		((Control)ADF400单相数量).TabIndex = 2;
		((Control)ADF400单相数量).Text = "0";
		((Control)label207).AutoSize = true;
		((Control)label207).Location = new Point(11, 48);
		((Control)label207).Margin = new Padding(2, 0, 2, 0);
		((Control)label207).Name = "label207";
		((Control)label207).Size = new Size(263, 12);
		((Control)label207).TabIndex = 1;
		((Control)label207).Text = "Directly connected to three-phase circuit：";
		((Control)label204).AutoSize = true;
		((Control)label204).Location = new Point(11, 25);
		((Control)label204).Margin = new Padding(2, 0, 2, 0);
		((Control)label204).Name = "label204";
		((Control)label204).Size = new Size(239, 12);
		((Control)label204).TabIndex = 0;
		((Control)label204).Text = "Direct access to single phase circuit：";
		((Control)groupBox59).Controls.Add((Control)(object)groupBox65);
		((Control)groupBox59).Controls.Add((Control)(object)groupBox64);
		((Control)groupBox59).Controls.Add((Control)(object)label247);
		((Control)groupBox59).Controls.Add((Control)(object)label209);
		((Control)groupBox59).Controls.Add((Control)(object)label210);
		((Control)groupBox59).Controls.Add((Control)(object)button21);
		((Control)groupBox59).Controls.Add((Control)(object)button22);
		((Control)groupBox59).Location = new Point(20, 187);
		((Control)groupBox59).Margin = new Padding(2);
		((Control)groupBox59).Name = "groupBox59";
		((Control)groupBox59).Padding = new Padding(2);
		((Control)groupBox59).Size = new Size(332, 123);
		((Control)groupBox59).TabIndex = 42;
		groupBox59.TabStop = false;
		((Control)groupBox65).Controls.Add((Control)(object)ADF400从机地址重排2);
		((Control)groupBox65).Controls.Add((Control)(object)ADF400从机地址重排1);
		((Control)groupBox65).Location = new Point(125, 67);
		((Control)groupBox65).Margin = new Padding(2);
		((Control)groupBox65).Name = "groupBox65";
		((Control)groupBox65).Padding = new Padding(2);
		((Control)groupBox65).Size = new Size(137, 31);
		((Control)groupBox65).TabIndex = 193;
		groupBox65.TabStop = false;
		((Control)ADF400从机地址重排2).AutoSize = true;
		ADF400从机地址重排2.Checked = true;
		((Control)ADF400从机地址重排2).Location = new Point(67, 6);
		((Control)ADF400从机地址重排2).Margin = new Padding(2);
		((Control)ADF400从机地址重排2).Name = "ADF400从机地址重排2";
		((Control)ADF400从机地址重排2).Size = new Size(71, 16);
		((Control)ADF400从机地址重排2).TabIndex = 8;
		ADF400从机地址重排2.TabStop = true;
		((Control)ADF400从机地址重排2).Text = "NOenable";
		((ButtonBase)ADF400从机地址重排2).UseVisualStyleBackColor = true;
		((Control)ADF400从机地址重排1).AutoSize = true;
		((Control)ADF400从机地址重排1).Location = new Point(0, 8);
		((Control)ADF400从机地址重排1).Margin = new Padding(2);
		((Control)ADF400从机地址重排1).Name = "ADF400从机地址重排1";
		((Control)ADF400从机地址重排1).Size = new Size(59, 16);
		((Control)ADF400从机地址重排1).TabIndex = 7;
		((Control)ADF400从机地址重排1).Text = "Enable";
		((ButtonBase)ADF400从机地址重排1).UseVisualStyleBackColor = true;
		((Control)groupBox64).Controls.Add((Control)(object)ADF400使能CE以太网1);
		((Control)groupBox64).Controls.Add((Control)(object)ADF400使能CE以太网0);
		((Control)groupBox64).Location = new Point(125, 93);
		((Control)groupBox64).Margin = new Padding(2);
		((Control)groupBox64).Name = "groupBox64";
		((Control)groupBox64).Padding = new Padding(2);
		((Control)groupBox64).Size = new Size(137, 31);
		((Control)groupBox64).TabIndex = 193;
		groupBox64.TabStop = false;
		((Control)ADF400使能CE以太网1).AutoSize = true;
		((Control)ADF400使能CE以太网1).Location = new Point(0, 11);
		((Control)ADF400使能CE以太网1).Margin = new Padding(2);
		((Control)ADF400使能CE以太网1).Name = "ADF400使能CE以太网1";
		((Control)ADF400使能CE以太网1).Size = new Size(59, 16);
		((Control)ADF400使能CE以太网1).TabIndex = 14;
		((Control)ADF400使能CE以太网1).Text = "Enable";
		((ButtonBase)ADF400使能CE以太网1).UseVisualStyleBackColor = true;
		((Control)ADF400使能CE以太网0).AutoSize = true;
		ADF400使能CE以太网0.Checked = true;
		((Control)ADF400使能CE以太网0).Location = new Point(66, 12);
		((Control)ADF400使能CE以太网0).Margin = new Padding(2);
		((Control)ADF400使能CE以太网0).Name = "ADF400使能CE以太网0";
		((Control)ADF400使能CE以太网0).Size = new Size(71, 16);
		((Control)ADF400使能CE以太网0).TabIndex = 15;
		ADF400使能CE以太网0.TabStop = true;
		((Control)ADF400使能CE以太网0).Text = "NOenable";
		((ButtonBase)ADF400使能CE以太网0).UseVisualStyleBackColor = true;
		((Control)label247).AutoSize = true;
		((Control)label247).Location = new Point(15, 106);
		((Control)label247).Margin = new Padding(2, 0, 2, 0);
		((Control)label247).Name = "label247";
		((Control)label247).Size = new Size(107, 12);
		((Control)label247).TabIndex = 13;
		((Control)label247).Text = "Enable Ethernet：";
		((Control)label209).AutoSize = true;
		((Control)label209).Location = new Point(7, 16);
		((Control)label209).Margin = new Padding(2, 0, 2, 0);
		((Control)label209).Name = "label209";
		((Control)label209).Size = new Size(275, 12);
		((Control)label209).TabIndex = 4;
		((Control)label209).Text = "Number of connected circuits of transformer：";
		((Control)label210).AutoSize = true;
		((Control)label210).Location = new Point(13, 78);
		((Control)label210).Margin = new Padding(2, 0, 2, 0);
		((Control)label210).Name = "label210";
		((Control)label210).Size = new Size(95, 12);
		((Control)label210).TabIndex = 6;
		((Control)label210).Text = "Slave address：";
		((Control)button21).Location = new Point(269, 100);
		((Control)button21).Margin = new Padding(2);
		((Control)button21).Name = "button21";
		((Control)button21).Size = new Size(47, 23);
		((Control)button21).TabIndex = 12;
		((Control)button21).Text = "set";
		((ButtonBase)button21).UseVisualStyleBackColor = true;
		((Control)button21).Click += button21_Click;
		((Control)button22).Location = new Point(267, 68);
		((Control)button22).Margin = new Padding(2);
		((Control)button22).Name = "button22";
		((Control)button22).Size = new Size(49, 21);
		((Control)button22).TabIndex = 11;
		((Control)button22).Text = "read";
		((ButtonBase)button22).UseVisualStyleBackColor = true;
		((Control)button22).Click += button22_Click;
		((Control)tabPage12).BackColor = Color.LightGray;
		((Control)tabPage12).Controls.Add((Control)(object)ADF400无线读取);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400无线设置);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400端口号);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400IP2);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400IP3);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400IP4);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400IP1);
		((Control)tabPage12).Controls.Add((Control)(object)子网掩码2);
		((Control)tabPage12).Controls.Add((Control)(object)子网掩码3);
		((Control)tabPage12).Controls.Add((Control)(object)子网掩码4);
		((Control)tabPage12).Controls.Add((Control)(object)子网掩码1);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400网关IP2);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400网关IP3);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400网关IP4);
		((Control)tabPage12).Controls.Add((Control)(object)ADF400网关IP1);
		((Control)tabPage12).Controls.Add((Control)(object)label274);
		((Control)tabPage12).Controls.Add((Control)(object)label273);
		((Control)tabPage12).Controls.Add((Control)(object)label272);
		((Control)tabPage12).Controls.Add((Control)(object)label244);
		tabPage12.Location = new Point(4, 22);
		((Control)tabPage12).Name = "tabPage12";
		((Control)tabPage12).Size = new Size(608, 632);
		tabPage12.TabIndex = 11;
		((Control)tabPage12).Text = "ADF400LWireless";
		((Control)ADF400无线读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400无线读取).Location = new Point(122, 193);
		((Control)ADF400无线读取).Margin = new Padding(2);
		((Control)ADF400无线读取).Name = "ADF400无线读取";
		((Control)ADF400无线读取).Size = new Size(55, 26);
		((Control)ADF400无线读取).TabIndex = 103;
		((Control)ADF400无线读取).Text = "read";
		((ButtonBase)ADF400无线读取).UseVisualStyleBackColor = true;
		((Control)ADF400无线读取).Click += ADF400无线读取_Click;
		((Control)ADF400无线设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400无线设置).Location = new Point(203, 193);
		((Control)ADF400无线设置).Margin = new Padding(2);
		((Control)ADF400无线设置).Name = "ADF400无线设置";
		((Control)ADF400无线设置).Size = new Size(55, 26);
		((Control)ADF400无线设置).TabIndex = 102;
		((Control)ADF400无线设置).Text = "set";
		((ButtonBase)ADF400无线设置).UseVisualStyleBackColor = true;
		((Control)ADF400无线设置).Click += ADF400无线设置_Click;
		((Control)ADF400端口号).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400端口号).Location = new Point(122, 144);
		((Control)ADF400端口号).Margin = new Padding(2);
		((TextBoxBase)ADF400端口号).MaxLength = 6;
		((Control)ADF400端口号).Name = "ADF400端口号";
		((Control)ADF400端口号).Size = new Size(62, 26);
		((Control)ADF400端口号).TabIndex = 101;
		((Control)ADF400端口号).Text = "5000";
		((Control)ADF400IP2).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400IP2).Location = new Point(186, 101);
		((Control)ADF400IP2).Margin = new Padding(2);
		((TextBoxBase)ADF400IP2).MaxLength = 3;
		((Control)ADF400IP2).Name = "ADF400IP2";
		((Control)ADF400IP2).Size = new Size(44, 26);
		((Control)ADF400IP2).TabIndex = 100;
		((Control)ADF400IP2).Text = "168";
		((Control)ADF400IP3).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400IP3).Location = new Point(247, 101);
		((Control)ADF400IP3).Margin = new Padding(2);
		((TextBoxBase)ADF400IP3).MaxLength = 3;
		((Control)ADF400IP3).Name = "ADF400IP3";
		((Control)ADF400IP3).Size = new Size(44, 26);
		((Control)ADF400IP3).TabIndex = 99;
		((Control)ADF400IP3).Text = "8";
		((Control)ADF400IP4).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400IP4).Location = new Point(310, 101);
		((Control)ADF400IP4).Margin = new Padding(2);
		((TextBoxBase)ADF400IP4).MaxLength = 3;
		((Control)ADF400IP4).Name = "ADF400IP4";
		((Control)ADF400IP4).Size = new Size(44, 26);
		((Control)ADF400IP4).TabIndex = 98;
		((Control)ADF400IP4).Text = "1";
		((Control)ADF400IP1).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400IP1).Location = new Point(122, 101);
		((Control)ADF400IP1).Margin = new Padding(2);
		((TextBoxBase)ADF400IP1).MaxLength = 3;
		((Control)ADF400IP1).Name = "ADF400IP1";
		((Control)ADF400IP1).Size = new Size(44, 26);
		((Control)ADF400IP1).TabIndex = 97;
		((Control)ADF400IP1).Text = "192";
		((Control)子网掩码2).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)子网掩码2).Location = new Point(186, 60);
		((Control)子网掩码2).Margin = new Padding(2);
		((TextBoxBase)子网掩码2).MaxLength = 3;
		((Control)子网掩码2).Name = "子网掩码2";
		((Control)子网掩码2).Size = new Size(44, 26);
		((Control)子网掩码2).TabIndex = 96;
		((Control)子网掩码2).Text = "255";
		((Control)子网掩码3).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)子网掩码3).Location = new Point(247, 60);
		((Control)子网掩码3).Margin = new Padding(2);
		((TextBoxBase)子网掩码3).MaxLength = 3;
		((Control)子网掩码3).Name = "子网掩码3";
		((Control)子网掩码3).Size = new Size(44, 26);
		((Control)子网掩码3).TabIndex = 95;
		((Control)子网掩码3).Text = "255";
		((Control)子网掩码4).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)子网掩码4).Location = new Point(310, 60);
		((Control)子网掩码4).Margin = new Padding(2);
		((TextBoxBase)子网掩码4).MaxLength = 3;
		((Control)子网掩码4).Name = "子网掩码4";
		((Control)子网掩码4).Size = new Size(44, 26);
		((Control)子网掩码4).TabIndex = 94;
		((Control)子网掩码4).Text = "0";
		((Control)子网掩码1).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)子网掩码1).Location = new Point(122, 60);
		((Control)子网掩码1).Margin = new Padding(2);
		((TextBoxBase)子网掩码1).MaxLength = 3;
		((Control)子网掩码1).Name = "子网掩码1";
		((Control)子网掩码1).Size = new Size(44, 26);
		((Control)子网掩码1).TabIndex = 93;
		((Control)子网掩码1).Text = "255";
		((Control)ADF400网关IP2).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400网关IP2).Location = new Point(186, 21);
		((Control)ADF400网关IP2).Margin = new Padding(2);
		((TextBoxBase)ADF400网关IP2).MaxLength = 3;
		((Control)ADF400网关IP2).Name = "ADF400网关IP2";
		((Control)ADF400网关IP2).Size = new Size(44, 26);
		((Control)ADF400网关IP2).TabIndex = 92;
		((Control)ADF400网关IP2).Text = "168";
		((Control)ADF400网关IP3).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400网关IP3).Location = new Point(247, 21);
		((Control)ADF400网关IP3).Margin = new Padding(2);
		((TextBoxBase)ADF400网关IP3).MaxLength = 3;
		((Control)ADF400网关IP3).Name = "ADF400网关IP3";
		((Control)ADF400网关IP3).Size = new Size(44, 26);
		((Control)ADF400网关IP3).TabIndex = 91;
		((Control)ADF400网关IP3).Text = "8";
		((Control)ADF400网关IP4).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400网关IP4).Location = new Point(310, 21);
		((Control)ADF400网关IP4).Margin = new Padding(2);
		((TextBoxBase)ADF400网关IP4).MaxLength = 3;
		((Control)ADF400网关IP4).Name = "ADF400网关IP4";
		((Control)ADF400网关IP4).Size = new Size(44, 26);
		((Control)ADF400网关IP4).TabIndex = 90;
		((Control)ADF400网关IP4).Text = "8";
		((Control)ADF400网关IP1).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400网关IP1).Location = new Point(122, 21);
		((Control)ADF400网关IP1).Margin = new Padding(2);
		((TextBoxBase)ADF400网关IP1).MaxLength = 3;
		((Control)ADF400网关IP1).Name = "ADF400网关IP1";
		((Control)ADF400网关IP1).Size = new Size(44, 26);
		((Control)ADF400网关IP1).TabIndex = 89;
		((Control)ADF400网关IP1).Text = "192";
		((Control)label274).AutoSize = true;
		((Control)label274).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label274).Location = new Point(2, 149);
		((Control)label274).Margin = new Padding(2, 0, 2, 0);
		((Control)label274).Name = "label274";
		((Control)label274).Size = new Size(111, 16);
		((Control)label274).TabIndex = 88;
		((Control)label274).Text = "Port number：";
		((Control)label273).AutoSize = true;
		((Control)label273).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label273).Location = new Point(14, 104);
		((Control)label273).Margin = new Padding(2, 0, 2, 0);
		((Control)label273).Name = "label273";
		((Control)label273).Size = new Size(103, 16);
		((Control)label273).TabIndex = 87;
		((Control)label273).Text = "IP address：";
		((Control)label272).AutoSize = true;
		((Control)label272).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label272).Location = new Point(6, 60);
		((Control)label272).Margin = new Padding(2, 0, 2, 0);
		((Control)label272).Name = "label272";
		((Control)label272).Size = new Size(111, 16);
		((Control)label272).TabIndex = 86;
		((Control)label272).Text = "Subnet mask：";
		((Control)label244).AutoSize = true;
		((Control)label244).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label244).Location = new Point(14, 24);
		((Control)label244).Margin = new Padding(2, 0, 2, 0);
		((Control)label244).Name = "label244";
		((Control)label244).Size = new Size(103, 16);
		((Control)label244).TabIndex = 85;
		((Control)label244).Text = "Gateway IP：";
		((Control)tabPage10).BackColor = Color.Gainsboro;
		((Control)tabPage10).Controls.Add((Control)(object)groupBox88);
		((Control)tabPage10).Controls.Add((Control)(object)groupBox79);
		((Control)tabPage10).Controls.Add((Control)(object)groupBox76);
		((Control)tabPage10).Controls.Add((Control)(object)groupBox75);
		((Control)tabPage10).Controls.Add((Control)(object)groupBox74);
		tabPage10.Location = new Point(4, 22);
		((Control)tabPage10).Margin = new Padding(2);
		((Control)tabPage10).Name = "tabPage10";
		((Control)tabPage10).Size = new Size(608, 632);
		tabPage10.TabIndex = 9;
		((Control)tabPage10).Text = "ADF400LSlave";
		((Control)groupBox88).Controls.Add((Control)(object)button24);
		((Control)groupBox88).Controls.Add((Control)(object)label267);
		((Control)groupBox88).Controls.Add((Control)(object)button27);
		((Control)groupBox88).Controls.Add((Control)(object)label268);
		((Control)groupBox88).Controls.Add((Control)(object)label269);
		((Control)groupBox88).Controls.Add((Control)(object)ADF400L从pulse);
		((Control)groupBox88).Controls.Add((Control)(object)ADF400L从电流);
		((Control)groupBox88).Controls.Add((Control)(object)ADF400L从电压);
		((Control)groupBox88).Controls.Add((Control)(object)button28);
		((Control)groupBox88).Controls.Add((Control)(object)button29);
		((Control)groupBox88).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox88).Location = new Point(22, 14);
		((Control)groupBox88).Margin = new Padding(2);
		((Control)groupBox88).Name = "groupBox88";
		((Control)groupBox88).Padding = new Padding(2);
		((Control)groupBox88).Size = new Size(503, 82);
		((Control)groupBox88).TabIndex = 70;
		groupBox88.TabStop = false;
		((Control)groupBox88).Text = "calibration";
		((Control)button24).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button24).Location = new Point(362, 46);
		((Control)button24).Margin = new Padding(2);
		((Control)button24).Name = "button24";
		((Control)button24).Size = new Size(105, 22);
		((Control)button24).TabIndex = 42;
		((Control)button24).Text = "Broadcast clear";
		((ButtonBase)button24).UseVisualStyleBackColor = true;
		((Control)button24).Click += button24_Click;
		((Control)label267).AutoSize = true;
		((Control)label267).Location = new Point(359, 23);
		((Control)label267).Margin = new Padding(2, 0, 2, 0);
		((Control)label267).Name = "label267";
		((Control)label267).Size = new Size(23, 12);
		((Control)label267).TabIndex = 23;
		((Control)label267).Text = "Ec:";
		((Control)button27).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button27).Location = new Point(237, 46);
		((Control)button27).Margin = new Padding(2);
		((Control)button27).Name = "button27";
		((Control)button27).Size = new Size(109, 22);
		((Control)button27).TabIndex = 41;
		((Control)button27).Text = "Energy clearing";
		((ButtonBase)button27).UseVisualStyleBackColor = true;
		((Control)button27).Click += button27_Click;
		((Control)label268).AutoSize = true;
		((Control)label268).Location = new Point(189, 23);
		((Control)label268).Margin = new Padding(2, 0, 2, 0);
		((Control)label268).Name = "label268";
		((Control)label268).Size = new Size(23, 12);
		((Control)label268).TabIndex = 22;
		((Control)label268).Text = "Ib:";
		((Control)label269).AutoSize = true;
		((Control)label269).Location = new Point(23, 21);
		((Control)label269).Margin = new Padding(2, 0, 2, 0);
		((Control)label269).Name = "label269";
		((Control)label269).Size = new Size(23, 12);
		((Control)label269).TabIndex = 21;
		((Control)label269).Text = "Un:";
		ADF400L从pulse.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400L从pulse).FormattingEnabled = true;
		ADF400L从pulse.Items.AddRange(new object[3] { "6400", "1600", "400" });
		((Control)ADF400L从pulse).Location = new Point(387, 21);
		((Control)ADF400L从pulse).Margin = new Padding(2);
		((Control)ADF400L从pulse).Name = "ADF400L从pulse";
		((Control)ADF400L从pulse).Size = new Size(80, 20);
		((Control)ADF400L从pulse).TabIndex = 20;
		ADF400L从电流.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400L从电流).FormattingEnabled = true;
		ADF400L从电流.Items.AddRange(new object[3] { "1", "10（60）", "10（100）" });
		((Control)ADF400L从电流).Location = new Point(219, 18);
		((Control)ADF400L从电流).Margin = new Padding(2);
		((Control)ADF400L从电流).Name = "ADF400L从电流";
		((Control)ADF400L从电流).Size = new Size(80, 20);
		((Control)ADF400L从电流).TabIndex = 19;
		ADF400L从电压.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)ADF400L从电压).FormattingEnabled = true;
		ADF400L从电压.Items.AddRange(new object[3] { "57.7", "220", "380" });
		((Control)ADF400L从电压).Location = new Point(51, 18);
		((Control)ADF400L从电压).Margin = new Padding(2);
		((Control)ADF400L从电压).Name = "ADF400L从电压";
		((Control)ADF400L从电压).Size = new Size(80, 20);
		((Control)ADF400L从电压).TabIndex = 18;
		((Control)button28).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button28).Location = new Point(148, 46);
		((Control)button28).Margin = new Padding(2);
		((Control)button28).Name = "button28";
		((Control)button28).Size = new Size(80, 22);
		((Control)button28).TabIndex = 11;
		((Control)button28).Text = "calibration";
		((ButtonBase)button28).UseVisualStyleBackColor = true;
		((Control)button28).Click += button28_Click;
		((Control)button29).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button29).Location = new Point(24, 46);
		((Control)button29).Margin = new Padding(2);
		((Control)button29).Name = "button29";
		((Control)button29).Size = new Size(107, 22);
		((Control)button29).TabIndex = 10;
		((Control)button29).Text = "initialization";
		((ButtonBase)button29).UseVisualStyleBackColor = true;
		((Control)button29).Click += button29_Click;
		((Control)groupBox79).Controls.Add((Control)(object)groupBox80);
		((Control)groupBox79).Controls.Add((Control)(object)groupBox85);
		((Control)groupBox79).Location = new Point(22, 361);
		((Control)groupBox79).Margin = new Padding(2);
		((Control)groupBox79).Name = "groupBox79";
		((Control)groupBox79).Padding = new Padding(2);
		((Control)groupBox79).Size = new Size(508, 158);
		((Control)groupBox79).TabIndex = 69;
		groupBox79.TabStop = false;
		((Control)groupBox80).Controls.Add((Control)(object)groupBox81);
		((Control)groupBox80).Controls.Add((Control)(object)groupBox82);
		((Control)groupBox80).Controls.Add((Control)(object)groupBox83);
		((Control)groupBox80).Controls.Add((Control)(object)ADF400L从DOW);
		((Control)groupBox80).Controls.Add((Control)(object)groupBox84);
		((Control)groupBox80).Controls.Add((Control)(object)ADF400L从DOR);
		((Control)groupBox80).Controls.Add((Control)(object)label260);
		((Control)groupBox80).Controls.Add((Control)(object)label261);
		((Control)groupBox80).Controls.Add((Control)(object)label262);
		((Control)groupBox80).Controls.Add((Control)(object)label263);
		((Control)groupBox80).Location = new Point(184, 19);
		((Control)groupBox80).Margin = new Padding(2);
		((Control)groupBox80).Name = "groupBox80";
		((Control)groupBox80).Padding = new Padding(2);
		((Control)groupBox80).Size = new Size(295, 121);
		((Control)groupBox80).TabIndex = 1;
		groupBox80.TabStop = false;
		((Control)groupBox80).Text = "DO state";
		((Control)groupBox81).Controls.Add((Control)(object)ADF400L从DO4分);
		((Control)groupBox81).Controls.Add((Control)(object)ADF400L从DO4合);
		((Control)groupBox81).Location = new Point(184, 58);
		((Control)groupBox81).Margin = new Padding(2);
		((Control)groupBox81).Name = "groupBox81";
		((Control)groupBox81).Padding = new Padding(2);
		((Control)groupBox81).Size = new Size(99, 34);
		((Control)groupBox81).TabIndex = 193;
		groupBox81.TabStop = false;
		((Control)ADF400L从DO4分).AutoSize = true;
		((Control)ADF400L从DO4分).Location = new Point(12, 14);
		((Control)ADF400L从DO4分).Margin = new Padding(2);
		((Control)ADF400L从DO4分).Name = "ADF400L从DO4分";
		((Control)ADF400L从DO4分).Size = new Size(41, 16);
		((Control)ADF400L从DO4分).TabIndex = 14;
		((Control)ADF400L从DO4分).Text = "OFF";
		((ButtonBase)ADF400L从DO4分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DO4合).AutoSize = true;
		ADF400L从DO4合.Checked = true;
		((Control)ADF400L从DO4合).Location = new Point(57, 14);
		((Control)ADF400L从DO4合).Margin = new Padding(2);
		((Control)ADF400L从DO4合).Name = "ADF400L从DO4合";
		((Control)ADF400L从DO4合).Size = new Size(35, 16);
		((Control)ADF400L从DO4合).TabIndex = 15;
		ADF400L从DO4合.TabStop = true;
		((Control)ADF400L从DO4合).Text = "ON";
		((ButtonBase)ADF400L从DO4合).UseVisualStyleBackColor = true;
		((Control)groupBox82).Controls.Add((Control)(object)ADF400L从DO1分);
		((Control)groupBox82).Controls.Add((Control)(object)ADF400L从DO1合);
		((Control)groupBox82).Location = new Point(44, 19);
		((Control)groupBox82).Margin = new Padding(2);
		((Control)groupBox82).Name = "groupBox82";
		((Control)groupBox82).Padding = new Padding(2);
		((Control)groupBox82).Size = new Size(86, 34);
		((Control)groupBox82).TabIndex = 193;
		groupBox82.TabStop = false;
		((Control)ADF400L从DO1分).AutoSize = true;
		((Control)ADF400L从DO1分).Location = new Point(6, 14);
		((Control)ADF400L从DO1分).Margin = new Padding(2);
		((Control)ADF400L从DO1分).Name = "ADF400L从DO1分";
		((Control)ADF400L从DO1分).Size = new Size(41, 16);
		((Control)ADF400L从DO1分).TabIndex = 8;
		((Control)ADF400L从DO1分).Text = "OFF";
		((ButtonBase)ADF400L从DO1分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DO1合).AutoSize = true;
		ADF400L从DO1合.Checked = true;
		((Control)ADF400L从DO1合).Location = new Point(54, 15);
		((Control)ADF400L从DO1合).Margin = new Padding(2);
		((Control)ADF400L从DO1合).Name = "ADF400L从DO1合";
		((Control)ADF400L从DO1合).Size = new Size(35, 16);
		((Control)ADF400L从DO1合).TabIndex = 9;
		ADF400L从DO1合.TabStop = true;
		((Control)ADF400L从DO1合).Text = "ON";
		((ButtonBase)ADF400L从DO1合).UseVisualStyleBackColor = true;
		((Control)groupBox83).Controls.Add((Control)(object)ADF400L从DO2分);
		((Control)groupBox83).Controls.Add((Control)(object)ADF400L从DO2合);
		((Control)groupBox83).Location = new Point(184, 19);
		((Control)groupBox83).Margin = new Padding(2);
		((Control)groupBox83).Name = "groupBox83";
		((Control)groupBox83).Padding = new Padding(2);
		((Control)groupBox83).Size = new Size(99, 34);
		((Control)groupBox83).TabIndex = 193;
		groupBox83.TabStop = false;
		((Control)ADF400L从DO2分).AutoSize = true;
		((Control)ADF400L从DO2分).Location = new Point(9, 14);
		((Control)ADF400L从DO2分).Margin = new Padding(2);
		((Control)ADF400L从DO2分).Name = "ADF400L从DO2分";
		((Control)ADF400L从DO2分).Size = new Size(41, 16);
		((Control)ADF400L从DO2分).TabIndex = 10;
		((Control)ADF400L从DO2分).Text = "OFF";
		((ButtonBase)ADF400L从DO2分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DO2合).AutoSize = true;
		ADF400L从DO2合.Checked = true;
		((Control)ADF400L从DO2合).Location = new Point(57, 13);
		((Control)ADF400L从DO2合).Margin = new Padding(2);
		((Control)ADF400L从DO2合).Name = "ADF400L从DO2合";
		((Control)ADF400L从DO2合).Size = new Size(35, 16);
		((Control)ADF400L从DO2合).TabIndex = 11;
		ADF400L从DO2合.TabStop = true;
		((Control)ADF400L从DO2合).Text = "ON";
		((ButtonBase)ADF400L从DO2合).UseVisualStyleBackColor = true;
		((Control)ADF400L从DOW).Location = new Point(184, 99);
		((Control)ADF400L从DOW).Margin = new Padding(2);
		((Control)ADF400L从DOW).Name = "ADF400L从DOW";
		((Control)ADF400L从DOW).Size = new Size(82, 21);
		((Control)ADF400L从DOW).TabIndex = 17;
		((Control)ADF400L从DOW).Text = "set";
		((ButtonBase)ADF400L从DOW).UseVisualStyleBackColor = true;
		((Control)ADF400L从DOW).Click += ADF400L从DOW_Click;
		((Control)groupBox84).Controls.Add((Control)(object)ADF400L从DO3分);
		((Control)groupBox84).Controls.Add((Control)(object)ADF400L从DO3合);
		((Control)groupBox84).Location = new Point(44, 58);
		((Control)groupBox84).Margin = new Padding(2);
		((Control)groupBox84).Name = "groupBox84";
		((Control)groupBox84).Padding = new Padding(2);
		((Control)groupBox84).Size = new Size(86, 34);
		((Control)groupBox84).TabIndex = 192;
		groupBox84.TabStop = false;
		((Control)ADF400L从DO3分).AutoSize = true;
		((Control)ADF400L从DO3分).Location = new Point(9, 14);
		((Control)ADF400L从DO3分).Margin = new Padding(2);
		((Control)ADF400L从DO3分).Name = "ADF400L从DO3分";
		((Control)ADF400L从DO3分).Size = new Size(41, 16);
		((Control)ADF400L从DO3分).TabIndex = 12;
		((Control)ADF400L从DO3分).Text = "OFF";
		((ButtonBase)ADF400L从DO3分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DO3合).AutoSize = true;
		ADF400L从DO3合.Checked = true;
		((Control)ADF400L从DO3合).Location = new Point(54, 14);
		((Control)ADF400L从DO3合).Margin = new Padding(2);
		((Control)ADF400L从DO3合).Name = "ADF400L从DO3合";
		((Control)ADF400L从DO3合).Size = new Size(35, 16);
		((Control)ADF400L从DO3合).TabIndex = 13;
		ADF400L从DO3合.TabStop = true;
		((Control)ADF400L从DO3合).Text = "ON";
		((ButtonBase)ADF400L从DO3合).UseVisualStyleBackColor = true;
		((Control)ADF400L从DOR).Location = new Point(44, 99);
		((Control)ADF400L从DOR).Margin = new Padding(2);
		((Control)ADF400L从DOR).Name = "ADF400L从DOR";
		((Control)ADF400L从DOR).Size = new Size(82, 21);
		((Control)ADF400L从DOR).TabIndex = 16;
		((Control)ADF400L从DOR).Text = "read";
		((ButtonBase)ADF400L从DOR).UseVisualStyleBackColor = true;
		((Control)ADF400L从DOR).Click += ADF400L从DOR_Click;
		((Control)label260).AutoSize = true;
		((Control)label260).Location = new Point(142, 76);
		((Control)label260).Margin = new Padding(2, 0, 2, 0);
		((Control)label260).Name = "label260";
		((Control)label260).Size = new Size(35, 12);
		((Control)label260).TabIndex = 6;
		((Control)label260).Text = "DO4：";
		((Control)label261).AutoSize = true;
		((Control)label261).Location = new Point(4, 74);
		((Control)label261).Margin = new Padding(2, 0, 2, 0);
		((Control)label261).Name = "label261";
		((Control)label261).Size = new Size(35, 12);
		((Control)label261).TabIndex = 5;
		((Control)label261).Text = "DO3：";
		((Control)label262).AutoSize = true;
		((Control)label262).Location = new Point(142, 34);
		((Control)label262).Margin = new Padding(2, 0, 2, 0);
		((Control)label262).Name = "label262";
		((Control)label262).Size = new Size(35, 12);
		((Control)label262).TabIndex = 4;
		((Control)label262).Text = "DO2：";
		((Control)label263).AutoSize = true;
		((Control)label263).Location = new Point(4, 34);
		((Control)label263).Margin = new Padding(2, 0, 2, 0);
		((Control)label263).Name = "label263";
		((Control)label263).Size = new Size(35, 12);
		((Control)label263).TabIndex = 3;
		((Control)label263).Text = "DO1：";
		((Control)groupBox85).Controls.Add((Control)(object)groupBox86);
		((Control)groupBox85).Controls.Add((Control)(object)groupBox87);
		((Control)groupBox85).Controls.Add((Control)(object)ADF400L从DI);
		((Control)groupBox85).Controls.Add((Control)(object)label264);
		((Control)groupBox85).Controls.Add((Control)(object)label265);
		((Control)groupBox85).Location = new Point(24, 19);
		((Control)groupBox85).Margin = new Padding(2);
		((Control)groupBox85).Name = "groupBox85";
		((Control)groupBox85).Padding = new Padding(2);
		((Control)groupBox85).Size = new Size(156, 122);
		((Control)groupBox85).TabIndex = 0;
		groupBox85.TabStop = false;
		((Control)groupBox85).Text = "DI state";
		((Control)groupBox86).Controls.Add((Control)(object)ADF400L从DI2分);
		((Control)groupBox86).Controls.Add((Control)(object)ADF400L从DI2合);
		((Control)groupBox86).Location = new Point(56, 58);
		((Control)groupBox86).Margin = new Padding(2);
		((Control)groupBox86).Name = "groupBox86";
		((Control)groupBox86).Padding = new Padding(2);
		((Control)groupBox86).Size = new Size(86, 34);
		((Control)groupBox86).TabIndex = 193;
		groupBox86.TabStop = false;
		((Control)ADF400L从DI2分).AutoSize = true;
		((Control)ADF400L从DI2分).Location = new Point(7, 14);
		((Control)ADF400L从DI2分).Margin = new Padding(2);
		((Control)ADF400L从DI2分).Name = "ADF400L从DI2分";
		((Control)ADF400L从DI2分).Size = new Size(41, 16);
		((Control)ADF400L从DI2分).TabIndex = 8;
		((Control)ADF400L从DI2分).Text = "OFF";
		((ButtonBase)ADF400L从DI2分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DI2合).AutoSize = true;
		ADF400L从DI2合.Checked = true;
		((Control)ADF400L从DI2合).Location = new Point(51, 14);
		((Control)ADF400L从DI2合).Margin = new Padding(2);
		((Control)ADF400L从DI2合).Name = "ADF400L从DI2合";
		((Control)ADF400L从DI2合).Size = new Size(35, 16);
		((Control)ADF400L从DI2合).TabIndex = 9;
		ADF400L从DI2合.TabStop = true;
		((Control)ADF400L从DI2合).Text = "ON";
		((ButtonBase)ADF400L从DI2合).UseVisualStyleBackColor = true;
		((Control)groupBox87).Controls.Add((Control)(object)ADF400L从DI1分);
		((Control)groupBox87).Controls.Add((Control)(object)ADF400L从DI1合);
		((Control)groupBox87).Location = new Point(56, 19);
		((Control)groupBox87).Margin = new Padding(2);
		((Control)groupBox87).Name = "groupBox87";
		((Control)groupBox87).Padding = new Padding(2);
		((Control)groupBox87).Size = new Size(86, 34);
		((Control)groupBox87).TabIndex = 193;
		groupBox87.TabStop = false;
		((Control)ADF400L从DI1分).AutoSize = true;
		((Control)ADF400L从DI1分).Location = new Point(4, 14);
		((Control)ADF400L从DI1分).Margin = new Padding(2);
		((Control)ADF400L从DI1分).Name = "ADF400L从DI1分";
		((Control)ADF400L从DI1分).Size = new Size(41, 16);
		((Control)ADF400L从DI1分).TabIndex = 6;
		((Control)ADF400L从DI1分).Text = "OFF";
		((ButtonBase)ADF400L从DI1分).UseVisualStyleBackColor = true;
		((Control)ADF400L从DI1合).AutoSize = true;
		ADF400L从DI1合.Checked = true;
		((Control)ADF400L从DI1合).Location = new Point(51, 14);
		((Control)ADF400L从DI1合).Margin = new Padding(2);
		((Control)ADF400L从DI1合).Name = "ADF400L从DI1合";
		((Control)ADF400L从DI1合).Size = new Size(35, 16);
		((Control)ADF400L从DI1合).TabIndex = 7;
		ADF400L从DI1合.TabStop = true;
		((Control)ADF400L从DI1合).Text = "ON";
		((ButtonBase)ADF400L从DI1合).UseVisualStyleBackColor = true;
		((Control)ADF400L从DI).Location = new Point(35, 99);
		((Control)ADF400L从DI).Margin = new Padding(2);
		((Control)ADF400L从DI).Name = "ADF400L从DI";
		((Control)ADF400L从DI).Size = new Size(82, 21);
		((Control)ADF400L从DI).TabIndex = 10;
		((Control)ADF400L从DI).Text = "read";
		((ButtonBase)ADF400L从DI).UseVisualStyleBackColor = true;
		((Control)ADF400L从DI).Click += ADF400L从DI_Click;
		((Control)label264).AutoSize = true;
		((Control)label264).Location = new Point(16, 74);
		((Control)label264).Margin = new Padding(2, 0, 2, 0);
		((Control)label264).Name = "label264";
		((Control)label264).Size = new Size(35, 12);
		((Control)label264).TabIndex = 3;
		((Control)label264).Text = "DI2：";
		((Control)label265).AutoSize = true;
		((Control)label265).Location = new Point(16, 34);
		((Control)label265).Margin = new Padding(2, 0, 2, 0);
		((Control)label265).Name = "label265";
		((Control)label265).Size = new Size(35, 12);
		((Control)label265).TabIndex = 2;
		((Control)label265).Text = "DI1：";
		((Control)groupBox76).Controls.Add((Control)(object)label266);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从参数W);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从参数R);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从消抖时间);
		((Control)groupBox76).Controls.Add((Control)(object)label259);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从脉冲常数);
		((Control)groupBox76).Controls.Add((Control)(object)label258);
		((Control)groupBox76).Controls.Add((Control)(object)groupBox78);
		((Control)groupBox76).Controls.Add((Control)(object)label257);
		((Control)groupBox76).Controls.Add((Control)(object)groupBox77);
		((Control)groupBox76).Controls.Add((Control)(object)label252);
		((Control)groupBox76).Controls.Add((Control)(object)label253);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从脉冲间隔);
		((Control)groupBox76).Controls.Add((Control)(object)label254);
		((Control)groupBox76).Controls.Add((Control)(object)label255);
		((Control)groupBox76).Controls.Add((Control)(object)ADF400L从脉冲宽度);
		((Control)groupBox76).Controls.Add((Control)(object)label256);
		((Control)groupBox76).Location = new Point(22, 190);
		((Control)groupBox76).Margin = new Padding(2);
		((Control)groupBox76).Name = "groupBox76";
		((Control)groupBox76).Padding = new Padding(2);
		((Control)groupBox76).Size = new Size(579, 166);
		((Control)groupBox76).TabIndex = 68;
		groupBox76.TabStop = false;
		((Control)label266).AutoSize = true;
		((Control)label266).Location = new Point(297, 106);
		((Control)label266).Margin = new Padding(2, 0, 2, 0);
		((Control)label266).Name = "label266";
		((Control)label266).Size = new Size(17, 12);
		((Control)label266).TabIndex = 211;
		((Control)label266).Text = "ms";
		((Control)ADF400L从参数W).Location = new Point(275, 134);
		((Control)ADF400L从参数W).Margin = new Padding(2);
		((Control)ADF400L从参数W).Name = "ADF400L从参数W";
		((Control)ADF400L从参数W).Size = new Size(82, 21);
		((Control)ADF400L从参数W).TabIndex = 210;
		((Control)ADF400L从参数W).Text = "set";
		((ButtonBase)ADF400L从参数W).UseVisualStyleBackColor = true;
		((Control)ADF400L从参数W).Click += ADF400L从参数W_Click;
		((Control)ADF400L从参数R).Location = new Point(123, 134);
		((Control)ADF400L从参数R).Margin = new Padding(2);
		((Control)ADF400L从参数R).Name = "ADF400L从参数R";
		((Control)ADF400L从参数R).Size = new Size(82, 21);
		((Control)ADF400L从参数R).TabIndex = 209;
		((Control)ADF400L从参数R).Text = "read";
		((ButtonBase)ADF400L从参数R).UseVisualStyleBackColor = true;
		((Control)ADF400L从参数R).Click += ADF400L从参数R_Click;
		((Control)ADF400L从消抖时间).Location = new Point(156, 100);
		((Control)ADF400L从消抖时间).Margin = new Padding(2);
		((Control)ADF400L从消抖时间).Name = "ADF400L从消抖时间";
		((Control)ADF400L从消抖时间).Size = new Size(136, 21);
		((Control)ADF400L从消抖时间).TabIndex = 208;
		((Control)ADF400L从消抖时间).Text = "200";
		((Control)label259).AutoSize = true;
		((Control)label259).Location = new Point(11, 105);
		((Control)label259).Margin = new Padding(2, 0, 2, 0);
		((Control)label259).Name = "label259";
		((Control)label259).Size = new Size(155, 12);
		((Control)label259).TabIndex = 207;
		((Control)label259).Text = "Jitter elimination time：";
		((Control)ADF400L从脉冲常数).Location = new Point(439, 109);
		((Control)ADF400L从脉冲常数).Margin = new Padding(2);
		((Control)ADF400L从脉冲常数).Name = "ADF400L从脉冲常数";
		((TextBoxBase)ADF400L从脉冲常数).ReadOnly = true;
		((Control)ADF400L从脉冲常数).Size = new Size(136, 21);
		((Control)ADF400L从脉冲常数).TabIndex = 206;
		((Control)label258).AutoSize = true;
		((Control)label258).Location = new Point(339, 112);
		((Control)label258).Margin = new Padding(2, 0, 2, 0);
		((Control)label258).Name = "label258";
		((Control)label258).Size = new Size(101, 12);
		((Control)label258).TabIndex = 205;
		((Control)label258).Text = "Pulse constant：";
		((Control)groupBox78).Controls.Add((Control)(object)ADF400L从3p3l);
		((Control)groupBox78).Controls.Add((Control)(object)ADF400L从3p4l);
		((Control)groupBox78).Location = new Point(148, 15);
		((Control)groupBox78).Margin = new Padding(2);
		((Control)groupBox78).Name = "groupBox78";
		((Control)groupBox78).Padding = new Padding(2);
		((Control)groupBox78).Size = new Size(135, 34);
		((Control)groupBox78).TabIndex = 204;
		groupBox78.TabStop = false;
		((Control)ADF400L从3p3l).AutoSize = true;
		((Control)ADF400L从3p3l).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400L从3p3l).Location = new Point(8, 12);
		((Control)ADF400L从3p3l).Margin = new Padding(2);
		((Control)ADF400L从3p3l).Name = "ADF400L从3p3l";
		((Control)ADF400L从3p3l).Size = new Size(53, 18);
		((Control)ADF400L从3p3l).TabIndex = 53;
		((Control)ADF400L从3p3l).Text = "3P3L";
		((ButtonBase)ADF400L从3p3l).UseVisualStyleBackColor = true;
		((Control)ADF400L从3p4l).AutoSize = true;
		ADF400L从3p4l.Checked = true;
		((Control)ADF400L从3p4l).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400L从3p4l).Location = new Point(75, 12);
		((Control)ADF400L从3p4l).Margin = new Padding(2);
		((Control)ADF400L从3p4l).Name = "ADF400L从3p4l";
		((Control)ADF400L从3p4l).Size = new Size(53, 18);
		((Control)ADF400L从3p4l).TabIndex = 51;
		ADF400L从3p4l.TabStop = true;
		((Control)ADF400L从3p4l).Text = "3P4L";
		((ButtonBase)ADF400L从3p4l).UseVisualStyleBackColor = true;
		((Control)label257).AutoSize = true;
		((Control)label257).Location = new Point(11, 28);
		((Control)label257).Margin = new Padding(2, 0, 2, 0);
		((Control)label257).Name = "label257";
		((Control)label257).Size = new Size(143, 12);
		((Control)label257).TabIndex = 203;
		((Control)label257).Text = "Line system selection：";
		((Control)groupBox77).Controls.Add((Control)(object)ADF400L从电平);
		((Control)groupBox77).Controls.Add((Control)(object)ADF400L从脉冲);
		((Control)groupBox77).Location = new Point(373, 15);
		((Control)groupBox77).Margin = new Padding(2);
		((Control)groupBox77).Name = "groupBox77";
		((Control)groupBox77).Padding = new Padding(2);
		((Control)groupBox77).Size = new Size(135, 34);
		((Control)groupBox77).TabIndex = 202;
		groupBox77.TabStop = false;
		((Control)ADF400L从电平).AutoSize = true;
		((Control)ADF400L从电平).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400L从电平).Location = new Point(11, 14);
		((Control)ADF400L从电平).Margin = new Padding(2);
		((Control)ADF400L从电平).Name = "ADF400L从电平";
		((Control)ADF400L从电平).Size = new Size(53, 16);
		((Control)ADF400L从电平).TabIndex = 49;
		((Control)ADF400L从电平).Text = "level";
		((ButtonBase)ADF400L从电平).UseVisualStyleBackColor = true;
		((Control)ADF400L从脉冲).AutoSize = true;
		ADF400L从脉冲.Checked = true;
		((Control)ADF400L从脉冲).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)ADF400L从脉冲).Location = new Point(76, 13);
		((Control)ADF400L从脉冲).Margin = new Padding(2);
		((Control)ADF400L从脉冲).Name = "ADF400L从脉冲";
		((Control)ADF400L从脉冲).Size = new Size(53, 16);
		((Control)ADF400L从脉冲).TabIndex = 54;
		ADF400L从脉冲.TabStop = true;
		((Control)ADF400L从脉冲).Text = "pulse";
		((ButtonBase)ADF400L从脉冲).UseVisualStyleBackColor = true;
		((Control)label252).AutoSize = true;
		((Control)label252).Location = new Point(287, 28);
		((Control)label252).Margin = new Padding(2, 0, 2, 0);
		((Control)label252).Name = "label252";
		((Control)label252).Size = new Size(83, 12);
		((Control)label252).TabIndex = 201;
		((Control)label252).Text = "Output mode：";
		((Control)label253).AutoSize = true;
		((Control)label253).Location = new Point(554, 72);
		((Control)label253).Margin = new Padding(2, 0, 2, 0);
		((Control)label253).Name = "label253";
		((Control)label253).Size = new Size(11, 12);
		((Control)label253).TabIndex = 200;
		((Control)label253).Text = "s";
		((Control)ADF400L从脉冲间隔).Location = new Point(414, 69);
		((Control)ADF400L从脉冲间隔).Margin = new Padding(2);
		((Control)ADF400L从脉冲间隔).Name = "ADF400L从脉冲间隔";
		((Control)ADF400L从脉冲间隔).Size = new Size(136, 21);
		((Control)ADF400L从脉冲间隔).TabIndex = 199;
		((Control)ADF400L从脉冲间隔).Text = "30";
		((Control)label254).AutoSize = true;
		((Control)label254).Location = new Point(249, 67);
		((Control)label254).Margin = new Padding(2, 0, 2, 0);
		((Control)label254).Name = "label254";
		((Control)label254).Size = new Size(17, 12);
		((Control)label254).TabIndex = 198;
		((Control)label254).Text = "ms";
		((Control)label255).AutoSize = true;
		((Control)label255).Location = new Point(314, 72);
		((Control)label255).Margin = new Padding(2, 0, 2, 0);
		((Control)label255).Name = "label255";
		((Control)label255).Size = new Size(101, 12);
		((Control)label255).TabIndex = 196;
		((Control)label255).Text = "Pulse interval：";
		((Control)ADF400L从脉冲宽度).Location = new Point(109, 63);
		((Control)ADF400L从脉冲宽度).Margin = new Padding(2);
		((Control)ADF400L从脉冲宽度).Name = "ADF400L从脉冲宽度";
		((Control)ADF400L从脉冲宽度).Size = new Size(136, 21);
		((Control)ADF400L从脉冲宽度).TabIndex = 197;
		((Control)ADF400L从脉冲宽度).Text = "500";
		((Control)label256).AutoSize = true;
		((Control)label256).Location = new Point(11, 68);
		((Control)label256).Margin = new Padding(2, 0, 2, 0);
		((Control)label256).Name = "label256";
		((Control)label256).Size = new Size(107, 12);
		((Control)label256).TabIndex = 195;
		((Control)label256).Text = "Pulse broadband：";
		((Control)groupBox75).Controls.Add((Control)(object)ADF400L额定参数读取);
		((Control)groupBox75).Controls.Add((Control)(object)ADF400L从额定电压);
		((Control)groupBox75).Controls.Add((Control)(object)ADF400L从额定电流);
		((Control)groupBox75).Controls.Add((Control)(object)label251);
		((Control)groupBox75).Controls.Add((Control)(object)label250);
		((Control)groupBox75).Location = new Point(280, 102);
		((Control)groupBox75).Margin = new Padding(2);
		((Control)groupBox75).Name = "groupBox75";
		((Control)groupBox75).Padding = new Padding(2);
		((Control)groupBox75).Size = new Size(301, 83);
		((Control)groupBox75).TabIndex = 67;
		groupBox75.TabStop = false;
		((Control)ADF400L额定参数读取).Location = new Point(240, 22);
		((Control)ADF400L额定参数读取).Margin = new Padding(2);
		((Control)ADF400L额定参数读取).Name = "ADF400L额定参数读取";
		((Control)ADF400L额定参数读取).Size = new Size(43, 47);
		((Control)ADF400L额定参数读取).TabIndex = 66;
		((Control)ADF400L额定参数读取).Text = "read";
		((ButtonBase)ADF400L额定参数读取).UseVisualStyleBackColor = true;
		((Control)ADF400L额定参数读取).Click += ADF400L额定参数读取_Click;
		((Control)ADF400L从额定电压).Location = new Point(134, 49);
		((Control)ADF400L从额定电压).Margin = new Padding(2);
		((Control)ADF400L从额定电压).Name = "ADF400L从额定电压";
		((TextBoxBase)ADF400L从额定电压).ReadOnly = true;
		((Control)ADF400L从额定电压).Size = new Size(96, 21);
		((Control)ADF400L从额定电压).TabIndex = 68;
		((Control)ADF400L从额定电流).Location = new Point(134, 22);
		((Control)ADF400L从额定电流).Margin = new Padding(2);
		((Control)ADF400L从额定电流).Name = "ADF400L从额定电流";
		((TextBoxBase)ADF400L从额定电流).ReadOnly = true;
		((Control)ADF400L从额定电流).Size = new Size(96, 21);
		((Control)ADF400L从额定电流).TabIndex = 67;
		((Control)label251).AutoSize = true;
		((Control)label251).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label251).Location = new Point(35, 53);
		((Control)label251).Margin = new Padding(2, 0, 2, 0);
		((Control)label251).Name = "label251";
		((Control)label251).Size = new Size(95, 12);
		((Control)label251).TabIndex = 66;
		((Control)label251).Text = "Rated voltage：";
		((Control)label250).AutoSize = true;
		((Control)label250).Location = new Point(35, 26);
		((Control)label250).Margin = new Padding(2, 0, 2, 0);
		((Control)label250).Name = "label250";
		((Control)label250).Size = new Size(95, 12);
		((Control)label250).TabIndex = 61;
		((Control)label250).Text = "Rated current：";
		((Control)groupBox74).Controls.Add((Control)(object)ADF400L从波特率);
		((Control)groupBox74).Controls.Add((Control)(object)ADF400L从地址);
		((Control)groupBox74).Controls.Add((Control)(object)ADF400L从通讯W);
		((Control)groupBox74).Controls.Add((Control)(object)label248);
		((Control)groupBox74).Controls.Add((Control)(object)label249);
		((Control)groupBox74).Controls.Add((Control)(object)ADF400L从通讯R);
		((Control)groupBox74).Location = new Point(22, 102);
		((Control)groupBox74).Margin = new Padding(2);
		((Control)groupBox74).Name = "groupBox74";
		((Control)groupBox74).Padding = new Padding(2);
		((Control)groupBox74).Size = new Size(245, 83);
		((Control)groupBox74).TabIndex = 66;
		groupBox74.TabStop = false;
		((Control)ADF400L从波特率).Location = new Point(190, 22);
		((Control)ADF400L从波特率).Margin = new Padding(2);
		((Control)ADF400L从波特率).Name = "ADF400L从波特率";
		((TextBoxBase)ADF400L从波特率).ReadOnly = true;
		((Control)ADF400L从波特率).Size = new Size(51, 21);
		((Control)ADF400L从波特率).TabIndex = 70;
		((Control)ADF400L从地址).Location = new Point(53, 22);
		((Control)ADF400L从地址).Margin = new Padding(2);
		((Control)ADF400L从地址).Name = "ADF400L从地址";
		((Control)ADF400L从地址).Size = new Size(51, 21);
		((Control)ADF400L从地址).TabIndex = 69;
		((Control)ADF400L从通讯W).Location = new Point(142, 49);
		((Control)ADF400L从通讯W).Margin = new Padding(2);
		((Control)ADF400L从通讯W).Name = "ADF400L从通讯W";
		((Control)ADF400L从通讯W).Size = new Size(82, 21);
		((Control)ADF400L从通讯W).TabIndex = 64;
		((Control)ADF400L从通讯W).Text = "set";
		((ButtonBase)ADF400L从通讯W).UseVisualStyleBackColor = true;
		((Control)ADF400L从通讯W).Click += ADF400L从通讯W_Click;
		((Control)label248).AutoSize = true;
		((Control)label248).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label248).Location = new Point(120, 26);
		((Control)label248).Margin = new Padding(2, 0, 2, 0);
		((Control)label248).Name = "label248";
		((Control)label248).Size = new Size(71, 12);
		((Control)label248).TabIndex = 65;
		((Control)label248).Text = "Baud rate：";
		((Control)label249).AutoSize = true;
		((Control)label249).Location = new Point(15, 26);
		((Control)label249).Margin = new Padding(2, 0, 2, 0);
		((Control)label249).Name = "label249";
		((Control)label249).Size = new Size(41, 12);
		((Control)label249).TabIndex = 60;
		((Control)label249).Text = "addr：";
		((Control)ADF400L从通讯R).Location = new Point(21, 48);
		((Control)ADF400L从通讯R).Margin = new Padding(2);
		((Control)ADF400L从通讯R).Name = "ADF400L从通讯R";
		((Control)ADF400L从通讯R).Size = new Size(82, 21);
		((Control)ADF400L从通讯R).TabIndex = 63;
		((Control)ADF400L从通讯R).Text = "read";
		((ButtonBase)ADF400L从通讯R).UseVisualStyleBackColor = true;
		((Control)ADF400L从通讯R).Click += ADF400L从通讯R_Click;
		((Control)tabPage7).AccessibleRole = (AccessibleRole)0;
		((Control)tabPage7).BackColor = Color.Gainsboro;
		((Control)tabPage7).Controls.Add((Control)(object)groupBox52);
		((Control)tabPage7).Controls.Add((Control)(object)groupBox29);
		((Control)tabPage7).Controls.Add((Control)(object)groupBox23);
		((Control)tabPage7).Controls.Add((Control)(object)groupBox11);
		((Control)tabPage7).Controls.Add((Control)(object)groupBox18);
		((Control)tabPage7).Controls.Add((Control)(object)groupBox2);
		tabPage7.Location = new Point(4, 22);
		((Control)tabPage7).Margin = new Padding(2);
		((Control)tabPage7).Name = "tabPage7";
		((Control)tabPage7).Size = new Size(608, 632);
		tabPage7.TabIndex = 6;
		((Control)tabPage7).Text = "Guide meter setting";
		((Control)tabPage7).UseWaitCursor = true;
		((Control)groupBox52).Controls.Add((Control)(object)XuLieHao读取);
		((Control)groupBox52).Controls.Add((Control)(object)XuLieHao);
		((Control)groupBox52).Controls.Add((Control)(object)XuLieHao设置);
		((Control)groupBox52).Controls.Add((Control)(object)label271);
		((Control)groupBox52).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox52).Location = new Point(8, 92);
		((Control)groupBox52).Margin = new Padding(2);
		((Control)groupBox52).Name = "groupBox52";
		((Control)groupBox52).Padding = new Padding(2);
		((Control)groupBox52).Size = new Size(593, 54);
		((Control)groupBox52).TabIndex = 58;
		groupBox52.TabStop = false;
		((Control)groupBox52).Text = "Serial number setting";
		((Control)groupBox52).UseWaitCursor = true;
		((Control)XuLieHao读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)XuLieHao读取).Location = new Point(356, 19);
		((Control)XuLieHao读取).Margin = new Padding(2);
		((Control)XuLieHao读取).Name = "XuLieHao读取";
		((Control)XuLieHao读取).Size = new Size(94, 22);
		((Control)XuLieHao读取).TabIndex = 55;
		((Control)XuLieHao读取).Text = "read";
		((ButtonBase)XuLieHao读取).UseVisualStyleBackColor = true;
		((Control)XuLieHao读取).UseWaitCursor = true;
		((Control)XuLieHao读取).Click += XuLieHao读取_Click;
		((Control)XuLieHao).Location = new Point(139, 17);
		((Control)XuLieHao).Margin = new Padding(2);
		((TextBoxBase)XuLieHao).MaxLength = 14;
		((Control)XuLieHao).Name = "XuLieHao";
		((Control)XuLieHao).Size = new Size(194, 26);
		((Control)XuLieHao).TabIndex = 57;
		((Control)XuLieHao).UseWaitCursor = true;
		((Control)XuLieHao设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)XuLieHao设置).Location = new Point(456, 19);
		((Control)XuLieHao设置).Margin = new Padding(2);
		((Control)XuLieHao设置).Name = "XuLieHao设置";
		((Control)XuLieHao设置).Size = new Size(98, 22);
		((Control)XuLieHao设置).TabIndex = 54;
		((Control)XuLieHao设置).Text = "set";
		((ButtonBase)XuLieHao设置).UseVisualStyleBackColor = true;
		((Control)XuLieHao设置).UseWaitCursor = true;
		((Control)XuLieHao设置).Click += XuLieHao设置_Click;
		((Control)label271).AutoSize = true;
		((Control)label271).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label271).Location = new Point(6, 22);
		((Control)label271).Margin = new Padding(2, 0, 2, 0);
		((Control)label271).Name = "label271";
		((Control)label271).Size = new Size(135, 16);
		((Control)label271).TabIndex = 56;
		((Control)label271).Text = "Serial number ：";
		((Control)label271).UseWaitCursor = true;
		((Control)groupBox29).Controls.Add((Control)(object)读取变比);
		((Control)groupBox29).Controls.Add((Control)(object)CTValue);
		((Control)groupBox29).Controls.Add((Control)(object)label120);
		((Control)groupBox29).Controls.Add((Control)(object)PTValue);
		((Control)groupBox29).Controls.Add((Control)(object)label121);
		((Control)groupBox29).Controls.Add((Control)(object)设置变比);
		((Control)groupBox29).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox29).Location = new Point(370, 2);
		((Control)groupBox29).Margin = new Padding(2);
		((Control)groupBox29).Name = "groupBox29";
		((Control)groupBox29).Padding = new Padding(2);
		((Control)groupBox29).Size = new Size(158, 86);
		((Control)groupBox29).TabIndex = 42;
		groupBox29.TabStop = false;
		((Control)groupBox29).Text = "ratio";
		((Control)groupBox29).UseWaitCursor = true;
		((Control)读取变比).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)读取变比).Location = new Point(90, 58);
		((Control)读取变比).Margin = new Padding(2);
		((Control)读取变比).Name = "读取变比";
		((Control)读取变比).Size = new Size(58, 22);
		((Control)读取变比).TabIndex = 46;
		((Control)读取变比).Text = "read";
		((ButtonBase)读取变比).UseVisualStyleBackColor = true;
		((Control)读取变比).UseWaitCursor = true;
		((Control)读取变比).Click += 读取地址_Click;
		((Control)CTValue).Location = new Point(62, 11);
		((Control)CTValue).Margin = new Padding(2);
		((TextBoxBase)CTValue).MaxLength = 5;
		((Control)CTValue).Name = "CTValue";
		((Control)CTValue).Size = new Size(60, 23);
		((Control)CTValue).TabIndex = 45;
		((Control)CTValue).Text = "1";
		((Control)CTValue).UseWaitCursor = true;
		((Control)label120).AutoSize = true;
		((Control)label120).Location = new Point(22, 14);
		((Control)label120).Margin = new Padding(2, 0, 2, 0);
		((Control)label120).Name = "label120";
		((Control)label120).Size = new Size(28, 14);
		((Control)label120).TabIndex = 44;
		((Control)label120).Text = "PT:";
		((Control)label120).UseWaitCursor = true;
		((Control)PTValue).Location = new Point(61, 35);
		((Control)PTValue).Margin = new Padding(2);
		((TextBoxBase)PTValue).MaxLength = 5;
		((Control)PTValue).Name = "PTValue";
		((Control)PTValue).Size = new Size(60, 23);
		((Control)PTValue).TabIndex = 37;
		((Control)PTValue).Text = "1";
		((Control)PTValue).UseWaitCursor = true;
		((Control)label121).AutoSize = true;
		((Control)label121).Location = new Point(22, 38);
		((Control)label121).Margin = new Padding(2, 0, 2, 0);
		((Control)label121).Name = "label121";
		((Control)label121).Size = new Size(28, 14);
		((Control)label121).TabIndex = 36;
		((Control)label121).Text = "CT:";
		((Control)label121).UseWaitCursor = true;
		((Control)设置变比).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)设置变比).Location = new Point(11, 58);
		((Control)设置变比).Margin = new Padding(2);
		((Control)设置变比).Name = "设置变比";
		((Control)设置变比).Size = new Size(52, 22);
		((Control)设置变比).TabIndex = 35;
		((Control)设置变比).Text = "set";
		((ButtonBase)设置变比).UseVisualStyleBackColor = true;
		((Control)设置变比).UseWaitCursor = true;
		((Control)设置变比).Click += button13_Click;
		((Control)groupBox23).Controls.Add((Control)(object)groupBox33);
		((Control)groupBox23).Controls.Add((Control)(object)groupBox12);
		((Control)groupBox23).Controls.Add((Control)(object)groupBox24);
		((Control)groupBox23).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox23).Location = new Point(8, 469);
		((Control)groupBox23).Margin = new Padding(2);
		((Control)groupBox23).Name = "groupBox23";
		((Control)groupBox23).Padding = new Padding(2);
		((Control)groupBox23).Size = new Size(593, 158);
		((Control)groupBox23).TabIndex = 51;
		groupBox23.TabStop = false;
		((Control)groupBox23).Text = "Control type settings";
		((Control)groupBox23).UseWaitCursor = true;
		((Control)groupBox33).Controls.Add((Control)(object)脉冲);
		((Control)groupBox33).Controls.Add((Control)(object)电平);
		((Control)groupBox33).Controls.Add((Control)(object)输出方式读取);
		((Control)groupBox33).Controls.Add((Control)(object)输出方式设置);
		((Control)groupBox33).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox33).Location = new Point(283, 95);
		((Control)groupBox33).Margin = new Padding(2);
		((Control)groupBox33).Name = "groupBox33";
		((Control)groupBox33).Padding = new Padding(2);
		((Control)groupBox33).Size = new Size(292, 54);
		((Control)groupBox33).TabIndex = 51;
		groupBox33.TabStop = false;
		((Control)groupBox33).Text = "Output mode";
		((Control)groupBox33).UseWaitCursor = true;
		((Control)脉冲).AutoSize = true;
		((Control)脉冲).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)脉冲).Location = new Point(87, 22);
		((Control)脉冲).Margin = new Padding(2);
		((Control)脉冲).Name = "脉冲";
		((Control)脉冲).Size = new Size(74, 18);
		((Control)脉冲).TabIndex = 46;
		脉冲.TabStop = true;
		((Control)脉冲).Text = "1-pulse";
		((ButtonBase)脉冲).UseVisualStyleBackColor = true;
		((Control)脉冲).UseWaitCursor = true;
		((Control)脉冲).Click += 脉冲_Click;
		((Control)电平).AutoSize = true;
		((Control)电平).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)电平).Location = new Point(6, 22);
		((Control)电平).Margin = new Padding(2);
		((Control)电平).Name = "电平";
		((Control)电平).Size = new Size(74, 18);
		((Control)电平).TabIndex = 45;
		电平.TabStop = true;
		((Control)电平).Text = "0-level";
		((ButtonBase)电平).UseVisualStyleBackColor = true;
		((Control)电平).UseWaitCursor = true;
		((Control)输出方式读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)输出方式读取).Location = new Point(179, 20);
		((Control)输出方式读取).Margin = new Padding(2);
		((Control)输出方式读取).Name = "输出方式读取";
		((Control)输出方式读取).Size = new Size(46, 22);
		((Control)输出方式读取).TabIndex = 40;
		((Control)输出方式读取).Text = "read";
		((ButtonBase)输出方式读取).UseVisualStyleBackColor = true;
		((Control)输出方式读取).UseWaitCursor = true;
		((Control)输出方式读取).Click += 输出方式读取_Click_1;
		((Control)输出方式设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)输出方式设置).Location = new Point(233, 20);
		((Control)输出方式设置).Margin = new Padding(2);
		((Control)输出方式设置).Name = "输出方式设置";
		((Control)输出方式设置).Size = new Size(38, 22);
		((Control)输出方式设置).TabIndex = 35;
		((Control)输出方式设置).Text = "set";
		((ButtonBase)输出方式设置).UseVisualStyleBackColor = true;
		((Control)输出方式设置).UseWaitCursor = true;
		((Control)输出方式设置).Click += 输出方式设置_Click_1;
		((Control)groupBox12).Controls.Add((Control)(object)强控设置);
		((Control)groupBox12).Controls.Add((Control)(object)强制合闸);
		((Control)groupBox12).Controls.Add((Control)(object)强制调制);
		((Control)groupBox12).Controls.Add((Control)(object)强控关);
		((Control)groupBox12).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox12).Location = new Point(287, 24);
		((Control)groupBox12).Margin = new Padding(2);
		((Control)groupBox12).Name = "groupBox12";
		((Control)groupBox12).Padding = new Padding(2);
		((Control)groupBox12).Size = new Size(292, 67);
		((Control)groupBox12).TabIndex = 50;
		groupBox12.TabStop = false;
		((Control)groupBox12).Text = "Control type settings";
		((Control)groupBox12).UseWaitCursor = true;
		((Control)强控设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)强控设置).Location = new Point(221, 24);
		((Control)强控设置).Margin = new Padding(2);
		((Control)强控设置).Name = "强控设置";
		((Control)强控设置).Size = new Size(46, 24);
		((Control)强控设置).TabIndex = 49;
		((Control)强控设置).Text = "set";
		((ButtonBase)强控设置).UseVisualStyleBackColor = true;
		((Control)强控设置).UseWaitCursor = true;
		((Control)强控设置).Click += 强控设置_Click;
		((Control)强制合闸).AutoSize = true;
		((Control)强制合闸).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)强制合闸).Location = new Point(123, 45);
		((Control)强制合闸).Margin = new Padding(2);
		((Control)强制合闸).Name = "强制合闸";
		((Control)强制合闸).Size = new Size(123, 18);
		((Control)强制合闸).TabIndex = 45;
		强制合闸.TabStop = true;
		((Control)强制合闸).Text = "Forced closing";
		((ButtonBase)强制合闸).UseVisualStyleBackColor = true;
		((Control)强制合闸).UseWaitCursor = true;
		((Control)强制调制).AutoSize = true;
		((Control)强制调制).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)强制调制).Location = new Point(7, 47);
		((Control)强制调制).Margin = new Padding(2);
		((Control)强制调制).Name = "强制调制";
		((Control)强制调制).Size = new Size(102, 18);
		((Control)强制调制).TabIndex = 44;
		强制调制.TabStop = true;
		((Control)强制调制).Text = "Forced trip";
		((ButtonBase)强制调制).UseVisualStyleBackColor = true;
		((Control)强制调制).UseWaitCursor = true;
		((Control)强控关).AutoSize = true;
		((Control)强控关).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)强控关).Location = new Point(6, 26);
		((Control)强控关).Margin = new Padding(2);
		((Control)强控关).Name = "强控关";
		((Control)强控关).Size = new Size(88, 18);
		((Control)强控关).TabIndex = 43;
		强控关.TabStop = true;
		((Control)强控关).Text = "ON force ";
		((ButtonBase)强控关).UseVisualStyleBackColor = true;
		((Control)强控关).UseWaitCursor = true;
		((Control)groupBox24).Controls.Add((Control)(object)第二路通讯);
		((Control)groupBox24).Controls.Add((Control)(object)主通讯);
		((Control)groupBox24).Controls.Add((Control)(object)label145);
		((Control)groupBox24).Controls.Add((Control)(object)label85);
		((Control)groupBox24).Controls.Add((Control)(object)label83);
		((Control)groupBox24).Controls.Add((Control)(object)label81);
		((Control)groupBox24).Controls.Add((Control)(object)表号textBox);
		((Control)groupBox24).Controls.Add((Control)(object)停止位comboBox);
		((Control)groupBox24).Controls.Add((Control)(object)校验位comboBox);
		((Control)groupBox24).Controls.Add((Control)(object)地址读取);
		((Control)groupBox24).Controls.Add((Control)(object)波特率comboBox);
		((Control)groupBox24).Controls.Add((Control)(object)地址textBox);
		((Control)groupBox24).Controls.Add((Control)(object)地址设置);
		((Control)groupBox24).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox24).Location = new Point(15, 26);
		((Control)groupBox24).Margin = new Padding(2);
		((Control)groupBox24).Name = "groupBox24";
		((Control)groupBox24).Padding = new Padding(2);
		((Control)groupBox24).Size = new Size(278, 123);
		((Control)groupBox24).TabIndex = 30;
		groupBox24.TabStop = false;
		((Control)groupBox24).Text = "Address and baud rate";
		((Control)groupBox24).UseWaitCursor = true;
		((Control)第二路通讯).AutoSize = true;
		((Control)第二路通讯).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)第二路通讯).Location = new Point(155, 16);
		((Control)第二路通讯).Margin = new Padding(2);
		((Control)第二路通讯).Name = "第二路通讯";
		((Control)第二路通讯).Size = new Size(74, 18);
		((Control)第二路通讯).TabIndex = 193;
		((Control)第二路通讯).Text = "Deputy ";
		((ButtonBase)第二路通讯).UseVisualStyleBackColor = true;
		((Control)第二路通讯).UseWaitCursor = true;
		((Control)主通讯).AutoSize = true;
		主通讯.Checked = true;
		((Control)主通讯).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)主通讯).Location = new Point(0, 16);
		((Control)主通讯).Margin = new Padding(2);
		((Control)主通讯).Name = "主通讯";
		((Control)主通讯).Size = new Size(151, 18);
		((Control)主通讯).TabIndex = 50;
		主通讯.TabStop = true;
		((Control)主通讯).Text = "Main communication";
		((ButtonBase)主通讯).UseVisualStyleBackColor = true;
		((Control)主通讯).UseWaitCursor = true;
		((Control)label145).AutoSize = true;
		((Control)label145).Location = new Point(134, 69);
		((Control)label145).Margin = new Padding(2, 0, 2, 0);
		((Control)label145).Name = "label145";
		((Control)label145).Size = new Size(63, 14);
		((Control)label145).TabIndex = 192;
		((Control)label145).Text = "stop bit";
		((Control)label145).UseWaitCursor = true;
		((Control)label85).AutoSize = true;
		((Control)label85).Location = new Point(95, 42);
		((Control)label85).Margin = new Padding(2, 0, 2, 0);
		((Control)label85).Name = "label85";
		((Control)label85).Size = new Size(70, 14);
		((Control)label85).TabIndex = 191;
		((Control)label85).Text = "Baud rate";
		((Control)label85).UseWaitCursor = true;
		((Control)label83).AutoSize = true;
		((Control)label83).Location = new Point(9, 73);
		((Control)label83).Margin = new Padding(2, 0, 2, 0);
		((Control)label83).Name = "label83";
		((Control)label83).Size = new Size(70, 14);
		((Control)label83).TabIndex = 190;
		((Control)label83).Text = "Check bit";
		((Control)label83).UseWaitCursor = true;
		((Control)label81).AutoSize = true;
		((Control)label81).Location = new Point(4, 39);
		((Control)label81).Margin = new Padding(2, 0, 2, 0);
		((Control)label81).Name = "label81";
		((Control)label81).Size = new Size(35, 14);
		((Control)label81).TabIndex = 189;
		((Control)label81).Text = "addr";
		((Control)label81).UseWaitCursor = true;
		((Control)表号textBox).Location = new Point(14, 90);
		((Control)表号textBox).Margin = new Padding(2);
		((TextBoxBase)表号textBox).MaxLength = 12;
		((Control)表号textBox).Name = "表号textBox";
		((Control)表号textBox).Size = new Size(110, 23);
		((Control)表号textBox).TabIndex = 37;
		((Control)表号textBox).Text = "000000000001";
		((Control)表号textBox).UseWaitCursor = true;
		停止位comboBox.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)停止位comboBox).FormattingEnabled = true;
		停止位comboBox.Items.AddRange(new object[3] { "1", "1.5", "2" });
		((Control)停止位comboBox).Location = new Point(201, 65);
		((Control)停止位comboBox).Margin = new Padding(2);
		((Control)停止位comboBox).Name = "停止位comboBox";
		((Control)停止位comboBox).Size = new Size(50, 22);
		((Control)停止位comboBox).TabIndex = 39;
		((Control)停止位comboBox).UseWaitCursor = true;
		校验位comboBox.AutoCompleteCustomSource.AddRange(new string[2] { "NONE", "EVEN" });
		校验位comboBox.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)校验位comboBox).FormattingEnabled = true;
		校验位comboBox.Items.AddRange(new object[3] { "N", "O", "E" });
		((Control)校验位comboBox).Location = new Point(83, 67);
		((Control)校验位comboBox).Margin = new Padding(2);
		((Control)校验位comboBox).Name = "校验位comboBox";
		((Control)校验位comboBox).Size = new Size(50, 22);
		((Control)校验位comboBox).TabIndex = 41;
		((Control)校验位comboBox).UseWaitCursor = true;
		((Control)地址读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)地址读取).Location = new Point(170, 90);
		((Control)地址读取).Margin = new Padding(2);
		((Control)地址读取).Name = "地址读取";
		((Control)地址读取).Size = new Size(46, 22);
		((Control)地址读取).TabIndex = 40;
		((Control)地址读取).Text = "read";
		((ButtonBase)地址读取).UseVisualStyleBackColor = true;
		((Control)地址读取).UseWaitCursor = true;
		((Control)地址读取).Click += 地址读取_Click;
		波特率comboBox.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)波特率comboBox).FormattingEnabled = true;
		波特率comboBox.Items.AddRange(new object[6] { "1200", "2400", "4800", "9600", "19200", "38400" });
		((Control)波特率comboBox).Location = new Point(176, 39);
		((Control)波特率comboBox).Margin = new Padding(2);
		((Control)波特率comboBox).Name = "波特率comboBox";
		((Control)波特率comboBox).Size = new Size(60, 22);
		((Control)波特率comboBox).TabIndex = 39;
		((Control)波特率comboBox).UseWaitCursor = true;
		((Control)地址textBox).Location = new Point(44, 36);
		((Control)地址textBox).Margin = new Padding(2);
		((TextBoxBase)地址textBox).MaxLength = 3;
		((Control)地址textBox).Name = "地址textBox";
		((Control)地址textBox).Size = new Size(38, 23);
		((Control)地址textBox).TabIndex = 37;
		((Control)地址textBox).Text = "1";
		((Control)地址textBox).UseWaitCursor = true;
		((Control)地址设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)地址设置).Location = new Point(127, 90);
		((Control)地址设置).Margin = new Padding(2);
		((Control)地址设置).Name = "地址设置";
		((Control)地址设置).Size = new Size(38, 22);
		((Control)地址设置).TabIndex = 35;
		((Control)地址设置).Text = "set";
		((ButtonBase)地址设置).UseVisualStyleBackColor = true;
		((Control)地址设置).UseWaitCursor = true;
		((Control)地址设置).Click += 地址设置_Click;
		((Control)groupBox11).Controls.Add((Control)(object)label98);
		((Control)groupBox11).Controls.Add((Control)(object)FKState);
		((Control)groupBox11).Controls.Add((Control)(object)BuyTime);
		((Control)groupBox11).Controls.Add((Control)(object)label97);
		((Control)groupBox11).Controls.Add((Control)(object)设置预付费参数);
		((Control)groupBox11).Controls.Add((Control)(object)读取预付费参数);
		((Control)groupBox11).Controls.Add((Control)(object)label92);
		((Control)groupBox11).Controls.Add((Control)(object)PMAX);
		((Control)groupBox11).Controls.Add((Control)(object)label90);
		((Control)groupBox11).Controls.Add((Control)(object)label91);
		((Control)groupBox11).Controls.Add((Control)(object)SQJE);
		((Control)groupBox11).Controls.Add((Control)(object)SYJE);
		((Control)groupBox11).Controls.Add((Control)(object)label57);
		((Control)groupBox11).Controls.Add((Control)(object)label60);
		((Control)groupBox11).Controls.Add((Control)(object)BJ1);
		((Control)groupBox11).Controls.Add((Control)(object)BJ2);
		((Control)groupBox11).Controls.Add((Control)(object)label55);
		((Control)groupBox11).Controls.Add((Control)(object)label53);
		((Control)groupBox11).Controls.Add((Control)(object)label48);
		((Control)groupBox11).Controls.Add((Control)(object)label37);
		((Control)groupBox11).Controls.Add((Control)(object)PriceF);
		((Control)groupBox11).Controls.Add((Control)(object)PriceP);
		((Control)groupBox11).Controls.Add((Control)(object)PriceG);
		((Control)groupBox11).Controls.Add((Control)(object)PriceJ);
		((Control)groupBox11).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox11).Location = new Point(8, 316);
		((Control)groupBox11).Margin = new Padding(2);
		((Control)groupBox11).Name = "groupBox11";
		((Control)groupBox11).Padding = new Padding(2);
		((Control)groupBox11).Size = new Size(598, 146);
		((Control)groupBox11).TabIndex = 49;
		groupBox11.TabStop = false;
		((Control)groupBox11).Text = "Prepayment parameter setting";
		((Control)groupBox11).UseWaitCursor = true;
		((Control)label98).AutoSize = true;
		((Control)label98).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label98).Location = new Point(364, 99);
		((Control)label98).Margin = new Padding(2, 0, 2, 0);
		((Control)label98).Name = "label98";
		((Control)label98).Size = new Size(161, 14);
		((Control)label98).TabIndex = 204;
		((Control)label98).Text = "Account opening status";
		((Control)label98).UseWaitCursor = true;
		((Control)FKState).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)FKState).Location = new Point(529, 96);
		((Control)FKState).Margin = new Padding(2);
		((Control)FKState).Name = "FKState";
		((Control)FKState).Size = new Size(51, 23);
		((Control)FKState).TabIndex = 203;
		((Control)FKState).Text = "0";
		((Control)FKState).UseWaitCursor = true;
		((Control)BuyTime).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)BuyTime).Location = new Point(499, 60);
		((Control)BuyTime).Margin = new Padding(2);
		((Control)BuyTime).Name = "BuyTime";
		((Control)BuyTime).Size = new Size(74, 23);
		((Control)BuyTime).TabIndex = 202;
		((Control)BuyTime).Text = "0";
		((Control)BuyTime).UseWaitCursor = true;
		((Control)label97).AutoSize = true;
		((Control)label97).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label97).Location = new Point(386, 62);
		((Control)label97).Margin = new Padding(2, 0, 2, 0);
		((Control)label97).Name = "label97";
		((Control)label97).Size = new Size(105, 14);
		((Control)label97).TabIndex = 201;
		((Control)label97).Text = "Purchase times";
		((Control)label97).UseWaitCursor = true;
		((Control)设置预付费参数).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)设置预付费参数).ForeColor = SystemColors.InfoText;
		((Control)设置预付费参数).Location = new Point(462, 122);
		((Control)设置预付费参数).Margin = new Padding(2);
		((Control)设置预付费参数).Name = "设置预付费参数";
		((Control)设置预付费参数).Size = new Size(74, 22);
		((Control)设置预付费参数).TabIndex = 49;
		((Control)设置预付费参数).Text = "set";
		((ButtonBase)设置预付费参数).UseVisualStyleBackColor = true;
		((Control)设置预付费参数).UseWaitCursor = true;
		((Control)设置预付费参数).Click += 设置预付费参数_Click;
		((Control)读取预付费参数).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)读取预付费参数).Location = new Point(378, 122);
		((Control)读取预付费参数).Margin = new Padding(2);
		((Control)读取预付费参数).Name = "读取预付费参数";
		((Control)读取预付费参数).Size = new Size(74, 22);
		((Control)读取预付费参数).TabIndex = 49;
		((Control)读取预付费参数).Text = "read";
		((ButtonBase)读取预付费参数).UseVisualStyleBackColor = true;
		((Control)读取预付费参数).UseWaitCursor = true;
		((Control)读取预付费参数).Click += 读取预付费参数_Click;
		((Control)label92).AutoSize = true;
		((Control)label92).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label92).Location = new Point(386, 34);
		((Control)label92).Margin = new Padding(2, 0, 2, 0);
		((Control)label92).Name = "label92";
		((Control)label92).Size = new Size(112, 14);
		((Control)label92).TabIndex = 200;
		((Control)label92).Text = "Power threshold";
		((Control)label92).UseWaitCursor = true;
		((Control)PMAX).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PMAX).Location = new Point(499, 28);
		((Control)PMAX).Margin = new Padding(2);
		((Control)PMAX).Name = "PMAX";
		((Control)PMAX).Size = new Size(74, 23);
		((Control)PMAX).TabIndex = 199;
		((Control)PMAX).Text = "0";
		((Control)PMAX).UseWaitCursor = true;
		((Control)label90).AutoSize = true;
		((Control)label90).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label90).Location = new Point(185, 122);
		((Control)label90).Margin = new Padding(2, 0, 2, 0);
		((Control)label90).Name = "label90";
		((Control)label90).Size = new Size(98, 14);
		((Control)label90).TabIndex = 198;
		((Control)label90).Text = "Preset amount";
		((Control)label90).UseWaitCursor = true;
		((Control)label91).AutoSize = true;
		((Control)label91).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label91).Location = new Point(185, 94);
		((Control)label91).Margin = new Padding(2, 0, 2, 0);
		((Control)label91).Name = "label91";
		((Control)label91).Size = new Size(98, 14);
		((Control)label91).TabIndex = 197;
		((Control)label91).Text = "Credit amount";
		((Control)label91).UseWaitCursor = true;
		((Control)SQJE).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)SQJE).Location = new Point(286, 90);
		((Control)SQJE).Margin = new Padding(2);
		((Control)SQJE).Name = "SQJE";
		((Control)SQJE).Size = new Size(74, 23);
		((Control)SQJE).TabIndex = 196;
		((Control)SQJE).Text = "0";
		((Control)SQJE).UseWaitCursor = true;
		((Control)SYJE).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)SYJE).Location = new Point(286, 118);
		((Control)SYJE).Margin = new Padding(2);
		((Control)SYJE).Name = "SYJE";
		((Control)SYJE).Size = new Size(74, 23);
		((Control)SYJE).TabIndex = 195;
		((Control)SYJE).Text = "0";
		((Control)SYJE).UseWaitCursor = true;
		((Control)label57).AutoSize = true;
		((Control)label57).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label57).Location = new Point(221, 62);
		((Control)label57).Margin = new Padding(2, 0, 2, 0);
		((Control)label57).Name = "label57";
		((Control)label57).Size = new Size(56, 14);
		((Control)label57).TabIndex = 194;
		((Control)label57).Text = "Alarm 2";
		((Control)label57).UseWaitCursor = true;
		((Control)label60).AutoSize = true;
		((Control)label60).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label60).Location = new Point(221, 31);
		((Control)label60).Margin = new Padding(2, 0, 2, 0);
		((Control)label60).Name = "label60";
		((Control)label60).Size = new Size(56, 14);
		((Control)label60).TabIndex = 193;
		((Control)label60).Text = "Alarm 1";
		((Control)label60).UseWaitCursor = true;
		((Control)BJ1).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)BJ1).Location = new Point(286, 30);
		((Control)BJ1).Margin = new Padding(2);
		((Control)BJ1).Name = "BJ1";
		((Control)BJ1).Size = new Size(74, 23);
		((Control)BJ1).TabIndex = 192;
		((Control)BJ1).Text = "0";
		((Control)BJ1).UseWaitCursor = true;
		((Control)BJ2).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)BJ2).Location = new Point(286, 58);
		((Control)BJ2).Margin = new Padding(2);
		((Control)BJ2).Name = "BJ2";
		((Control)BJ2).Size = new Size(74, 23);
		((Control)BJ2).TabIndex = 191;
		((Control)BJ2).Text = "0";
		((Control)BJ2).UseWaitCursor = true;
		((Control)label55).AutoSize = true;
		((Control)label55).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label55).Location = new Point(5, 122);
		((Control)label55).Margin = new Padding(2, 0, 2, 0);
		((Control)label55).Name = "label55";
		((Control)label55).Size = new Size(91, 14);
		((Control)label55).TabIndex = 190;
		((Control)label55).Text = "Valley price";
		((Control)label55).UseWaitCursor = true;
		((Control)label53).AutoSize = true;
		((Control)label53).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label53).Location = new Point(5, 92);
		((Control)label53).Margin = new Padding(2, 0, 2, 0);
		((Control)label53).Name = "label53";
		((Control)label53).Size = new Size(77, 14);
		((Control)label53).TabIndex = 189;
		((Control)label53).Text = "Flat price";
		((Control)label53).UseWaitCursor = true;
		((Control)label48).AutoSize = true;
		((Control)label48).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label48).Location = new Point(2, 62);
		((Control)label48).Margin = new Padding(2, 0, 2, 0);
		((Control)label48).Name = "label48";
		((Control)label48).Size = new Size(84, 14);
		((Control)label48).TabIndex = 188;
		((Control)label48).Text = " Peak price";
		((Control)label48).UseWaitCursor = true;
		((Control)label37).AutoSize = true;
		((Control)label37).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label37).Location = new Point(2, 34);
		((Control)label37).Margin = new Padding(2, 0, 2, 0);
		((Control)label37).Name = "label37";
		((Control)label37).Size = new Size(84, 14);
		((Control)label37).TabIndex = 187;
		((Control)label37).Text = "Sharp price";
		((Control)label37).UseWaitCursor = true;
		((Control)PriceF).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PriceF).Location = new Point(97, 60);
		((Control)PriceF).Margin = new Padding(2);
		((Control)PriceF).Name = "PriceF";
		((Control)PriceF).Size = new Size(74, 23);
		((Control)PriceF).TabIndex = 169;
		((Control)PriceF).Text = "10000";
		((Control)PriceF).UseWaitCursor = true;
		((Control)PriceP).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PriceP).Location = new Point(97, 89);
		((Control)PriceP).Margin = new Padding(2);
		((Control)PriceP).Name = "PriceP";
		((Control)PriceP).Size = new Size(74, 23);
		((Control)PriceP).TabIndex = 168;
		((Control)PriceP).Text = "10000";
		((Control)PriceP).UseWaitCursor = true;
		((Control)PriceG).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PriceG).Location = new Point(97, 118);
		((Control)PriceG).Margin = new Padding(2);
		((Control)PriceG).Name = "PriceG";
		((Control)PriceG).Size = new Size(74, 23);
		((Control)PriceG).TabIndex = 167;
		((Control)PriceG).Text = "10000";
		((Control)PriceG).UseWaitCursor = true;
		((Control)PriceJ).Font = new Font("宋体", 10.5f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)PriceJ).Location = new Point(97, 31);
		((Control)PriceJ).Margin = new Padding(2);
		((Control)PriceJ).Name = "PriceJ";
		((Control)PriceJ).Size = new Size(74, 23);
		((Control)PriceJ).TabIndex = 166;
		((Control)PriceJ).Text = "10000";
		((Control)PriceJ).UseWaitCursor = true;
		((Control)groupBox18).Controls.Add((Control)(object)groupBox91);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox27);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox30);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox22);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox21);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox45);
		((Control)groupBox18).Controls.Add((Control)(object)运行状态读取);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox44);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox35);
		((Control)groupBox18).Controls.Add((Control)(object)groupBox20);
		((Control)groupBox18).Controls.Add((Control)(object)运行状态设置);
		((Control)groupBox18).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox18).Location = new Point(8, 154);
		((Control)groupBox18).Margin = new Padding(2);
		((Control)groupBox18).Name = "groupBox18";
		((Control)groupBox18).Padding = new Padding(2);
		((Control)groupBox18).Size = new Size(577, 150);
		((Control)groupBox18).TabIndex = 43;
		groupBox18.TabStop = false;
		((Control)groupBox18).Text = "running state";
		((Control)groupBox18).UseWaitCursor = true;
		((Control)groupBox91).Controls.Add((Control)(object)DDSY);
		((Control)groupBox91).Controls.Add((Control)(object)DDSF);
		((Control)groupBox91).Location = new Point(449, 86);
		((Control)groupBox91).Margin = new Padding(2);
		((Control)groupBox91).Name = "groupBox91";
		((Control)groupBox91).Padding = new Padding(2);
		((Control)groupBox91).Size = new Size(72, 55);
		((Control)groupBox91).TabIndex = 51;
		groupBox91.TabStop = false;
		((Control)groupBox91).UseWaitCursor = true;
		((Control)DDSY).AutoSize = true;
		DDSY.Checked = true;
		((Control)DDSY).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)DDSY).Location = new Point(15, 13);
		((Control)DDSY).Margin = new Padding(2);
		((Control)DDSY).Name = "DDSY";
		((Control)DDSY).Size = new Size(47, 16);
		((Control)DDSY).TabIndex = 0;
		DDSY.TabStop = true;
		((Control)DDSY).Text = "DDSF";
		((ButtonBase)DDSY).UseVisualStyleBackColor = true;
		((Control)DDSY).UseWaitCursor = true;
		((Control)DDSF).AutoSize = true;
		((Control)DDSF).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)DDSF).Location = new Point(15, 33);
		((Control)DDSF).Margin = new Padding(2);
		((Control)DDSF).Name = "DDSF";
		((Control)DDSF).Size = new Size(47, 16);
		((Control)DDSF).TabIndex = 1;
		((Control)DDSF).Text = "DDSY";
		((ButtonBase)DDSF).UseVisualStyleBackColor = true;
		((Control)DDSF).UseWaitCursor = true;
		((Control)groupBox27).Controls.Add((Control)(object)内控);
		((Control)groupBox27).Controls.Add((Control)(object)外控);
		((Control)groupBox27).Location = new Point(293, 23);
		((Control)groupBox27).Margin = new Padding(2);
		((Control)groupBox27).Name = "groupBox27";
		((Control)groupBox27).Padding = new Padding(2);
		((Control)groupBox27).Size = new Size(70, 55);
		((Control)groupBox27).TabIndex = 50;
		groupBox27.TabStop = false;
		((Control)groupBox27).UseWaitCursor = true;
		((Control)内控).AutoSize = true;
		内控.Checked = true;
		((Control)内控).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)内控).Location = new Point(6, 16);
		((Control)内控).Margin = new Padding(2);
		((Control)内控).Name = "内控";
		((Control)内控).Size = new Size(119, 16);
		((Control)内控).TabIndex = 0;
		内控.TabStop = true;
		((Control)内控).Text = "Internal control";
		((ButtonBase)内控).UseVisualStyleBackColor = true;
		((Control)内控).UseWaitCursor = true;
		((Control)外控).AutoSize = true;
		((Control)外控).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)外控).Location = new Point(6, 35);
		((Control)外控).Margin = new Padding(2);
		((Control)外控).Name = "外控";
		((Control)外控).Size = new Size(119, 16);
		((Control)外控).TabIndex = 1;
		((Control)外控).Text = "External control";
		((ButtonBase)外控).UseVisualStyleBackColor = true;
		((Control)外控).UseWaitCursor = true;
		((Control)groupBox30).Controls.Add((Control)(object)无射频);
		((Control)groupBox30).Controls.Add((Control)(object)有射频);
		((Control)groupBox30).Location = new Point(398, 86);
		((Control)groupBox30).Margin = new Padding(2);
		((Control)groupBox30).Name = "groupBox30";
		((Control)groupBox30).Padding = new Padding(2);
		((Control)groupBox30).Size = new Size(70, 55);
		((Control)groupBox30).TabIndex = 51;
		groupBox30.TabStop = false;
		((Control)groupBox30).UseWaitCursor = true;
		((Control)无射频).AutoSize = true;
		无射频.Checked = true;
		((Control)无射频).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)无射频).Location = new Point(4, 15);
		((Control)无射频).Margin = new Padding(2);
		((Control)无射频).Name = "无射频";
		((Control)无射频).Size = new Size(53, 16);
		((Control)无射频).TabIndex = 0;
		无射频.TabStop = true;
		((Control)无射频).Text = "No RF";
		((ButtonBase)无射频).UseVisualStyleBackColor = true;
		((Control)无射频).UseWaitCursor = true;
		((Control)有射频).AutoSize = true;
		((Control)有射频).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)有射频).Location = new Point(4, 35);
		((Control)有射频).Margin = new Padding(2);
		((Control)有射频).Name = "有射频";
		((Control)有射频).Size = new Size(35, 16);
		((Control)有射频).TabIndex = 1;
		((Control)有射频).Text = "RF";
		((ButtonBase)有射频).UseVisualStyleBackColor = true;
		((Control)有射频).UseWaitCursor = true;
		((Control)groupBox22).Controls.Add((Control)(object)红外);
		((Control)groupBox22).Controls.Add((Control)(object)副通讯);
		((Control)groupBox22).Location = new Point(256, 86);
		((Control)groupBox22).Margin = new Padding(2);
		((Control)groupBox22).Name = "groupBox22";
		((Control)groupBox22).Padding = new Padding(2);
		((Control)groupBox22).Size = new Size(143, 55);
		((Control)groupBox22).TabIndex = 50;
		groupBox22.TabStop = false;
		((Control)groupBox22).UseWaitCursor = true;
		((Control)红外).AutoSize = true;
		红外.Checked = true;
		((Control)红外).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)红外).Location = new Point(6, 16);
		((Control)红外).Margin = new Padding(2);
		((Control)红外).Name = "红外";
		((Control)红外).Size = new Size(77, 16);
		((Control)红外).TabIndex = 0;
		红外.TabStop = true;
		((Control)红外).Text = "infra-red";
		((ButtonBase)红外).UseVisualStyleBackColor = true;
		((Control)红外).UseWaitCursor = true;
		((Control)副通讯).AutoSize = true;
		((Control)副通讯).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)副通讯).Location = new Point(4, 35);
		((Control)副通讯).Margin = new Padding(2);
		((Control)副通讯).Name = "副通讯";
		((Control)副通讯).Size = new Size(143, 16);
		((Control)副通讯).TabIndex = 1;
		((Control)副通讯).Text = "Deputy communication";
		((ButtonBase)副通讯).UseVisualStyleBackColor = true;
		((Control)副通讯).UseWaitCursor = true;
		((Control)groupBox21).Controls.Add((Control)(object)单费率);
		((Control)groupBox21).Controls.Add((Control)(object)复费率);
		((Control)groupBox21).Location = new Point(201, 23);
		((Control)groupBox21).Margin = new Padding(2);
		((Control)groupBox21).Name = "groupBox21";
		((Control)groupBox21).Padding = new Padding(2);
		((Control)groupBox21).Size = new Size(94, 55);
		((Control)groupBox21).TabIndex = 49;
		groupBox21.TabStop = false;
		((Control)groupBox21).UseWaitCursor = true;
		((Control)单费率).AutoSize = true;
		单费率.Checked = true;
		((Control)单费率).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)单费率).Location = new Point(4, 16);
		((Control)单费率).Margin = new Padding(2);
		((Control)单费率).Name = "单费率";
		((Control)单费率).Size = new Size(89, 16);
		((Control)单费率).TabIndex = 0;
		单费率.TabStop = true;
		((Control)单费率).Text = "Single rate";
		((ButtonBase)单费率).UseVisualStyleBackColor = true;
		((Control)单费率).UseWaitCursor = true;
		((Control)复费率).AutoSize = true;
		((Control)复费率).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)复费率).Location = new Point(4, 35);
		((Control)复费率).Margin = new Padding(2);
		((Control)复费率).Name = "复费率";
		((Control)复费率).Size = new Size(83, 16);
		((Control)复费率).TabIndex = 1;
		((Control)复费率).Text = "multi-rate";
		((ButtonBase)复费率).UseVisualStyleBackColor = true;
		((Control)复费率).UseWaitCursor = true;
		((Control)groupBox45).Controls.Add((Control)(object)checkBox3);
		((Control)groupBox45).Controls.Add((Control)(object)checkBox4);
		((Control)groupBox45).Location = new Point(375, 23);
		((Control)groupBox45).Margin = new Padding(2);
		((Control)groupBox45).Name = "groupBox45";
		((Control)groupBox45).Padding = new Padding(2);
		((Control)groupBox45).Size = new Size(72, 55);
		((Control)groupBox45).TabIndex = 59;
		groupBox45.TabStop = false;
		((Control)groupBox45).UseWaitCursor = true;
		((Control)checkBox3).AutoSize = true;
		((Control)checkBox3).Location = new Point(11, 12);
		((Control)checkBox3).Margin = new Padding(2);
		((Control)checkBox3).Name = "checkBox3";
		((Control)checkBox3).Size = new Size(42, 20);
		((Control)checkBox3).TabIndex = 56;
		((Control)checkBox3).Text = "-F";
		((ButtonBase)checkBox3).UseVisualStyleBackColor = true;
		((Control)checkBox3).UseWaitCursor = true;
		checkBox3.CheckedChanged += checkBox3_CheckedChanged;
		((Control)checkBox4).AutoSize = true;
		((Control)checkBox4).Location = new Point(11, 33);
		((Control)checkBox4).Margin = new Padding(2);
		((Control)checkBox4).Name = "checkBox4";
		((Control)checkBox4).Size = new Size(50, 20);
		((Control)checkBox4).TabIndex = 57;
		((Control)checkBox4).Text = "-2C";
		((ButtonBase)checkBox4).UseVisualStyleBackColor = true;
		((Control)checkBox4).UseWaitCursor = true;
		checkBox4.CheckedChanged += checkBox4_CheckedChanged;
		((Control)运行状态读取).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)运行状态读取).Location = new Point(523, 39);
		((Control)运行状态读取).Margin = new Padding(2);
		((Control)运行状态读取).Name = "运行状态读取";
		((Control)运行状态读取).Size = new Size(50, 22);
		((Control)运行状态读取).TabIndex = 42;
		((Control)运行状态读取).Text = "read";
		((ButtonBase)运行状态读取).UseVisualStyleBackColor = true;
		((Control)运行状态读取).UseWaitCursor = true;
		((Control)运行状态读取).Click += 运行状态读取_Click;
		((Control)groupBox44).Controls.Add((Control)(object)radioButton3);
		((Control)groupBox44).Controls.Add((Control)(object)radioButton4);
		((Control)groupBox44).Controls.Add((Control)(object)radioButton5);
		((Control)groupBox44).Location = new Point(34, 23);
		((Control)groupBox44).Margin = new Padding(2);
		((Control)groupBox44).Name = "groupBox44";
		((Control)groupBox44).Padding = new Padding(2);
		((Control)groupBox44).Size = new Size(58, 118);
		((Control)groupBox44).TabIndex = 58;
		groupBox44.TabStop = false;
		((Control)groupBox44).UseWaitCursor = true;
		((Control)radioButton3).AutoSize = true;
		radioButton3.Checked = true;
		((Control)radioButton3).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)radioButton3).Location = new Point(10, 12);
		((Control)radioButton3).Margin = new Padding(2);
		((Control)radioButton3).Name = "radioButton3";
		((Control)radioButton3).Size = new Size(41, 16);
		((Control)radioButton3).TabIndex = 53;
		radioButton3.TabStop = true;
		((Control)radioButton3).Text = "-NK";
		((ButtonBase)radioButton3).UseVisualStyleBackColor = true;
		((Control)radioButton3).UseWaitCursor = true;
		radioButton3.CheckedChanged += radioButton3_CheckedChanged_1;
		((Control)radioButton4).AutoSize = true;
		((Control)radioButton4).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)radioButton4).Location = new Point(12, 83);
		((Control)radioButton4).Margin = new Padding(2);
		((Control)radioButton4).Name = "radioButton4";
		((Control)radioButton4).Size = new Size(35, 16);
		((Control)radioButton4).TabIndex = 54;
		((Control)radioButton4).Text = "-Z";
		((ButtonBase)radioButton4).UseVisualStyleBackColor = true;
		((Control)radioButton4).UseWaitCursor = true;
		radioButton4.CheckedChanged += radioButton4_CheckedChanged;
		((Control)radioButton5).AutoSize = true;
		((Control)radioButton5).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)radioButton5).Location = new Point(10, 47);
		((Control)radioButton5).Margin = new Padding(2);
		((Control)radioButton5).Name = "radioButton5";
		((Control)radioButton5).Size = new Size(41, 16);
		((Control)radioButton5).TabIndex = 55;
		((Control)radioButton5).Text = "-RF";
		((ButtonBase)radioButton5).UseVisualStyleBackColor = true;
		((Control)radioButton5).UseWaitCursor = true;
		radioButton5.CheckedChanged += radioButton5_CheckedChanged;
		((Control)groupBox35).Controls.Add((Control)(object)三相四线);
		((Control)groupBox35).Controls.Add((Control)(object)三相三线);
		((Control)groupBox35).Location = new Point(96, 86);
		((Control)groupBox35).Margin = new Padding(2);
		((Control)groupBox35).Name = "groupBox35";
		((Control)groupBox35).Padding = new Padding(2);
		((Control)groupBox35).Size = new Size(160, 55);
		((Control)groupBox35).TabIndex = 52;
		groupBox35.TabStop = false;
		((Control)groupBox35).UseWaitCursor = true;
		((Control)三相四线).AutoSize = true;
		三相四线.Checked = true;
		((Control)三相四线).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)三相四线).Location = new Point(4, 16);
		((Control)三相四线).Margin = new Padding(2);
		((Control)三相四线).Name = "三相四线";
		((Control)三相四线).Size = new Size(149, 16);
		((Control)三相四线).TabIndex = 0;
		三相四线.TabStop = true;
		((Control)三相四线).Text = "Three phase four wire";
		((ButtonBase)三相四线).UseVisualStyleBackColor = true;
		((Control)三相四线).UseWaitCursor = true;
		((Control)三相三线).AutoSize = true;
		((Control)三相三线).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)三相三线).Location = new Point(4, 35);
		((Control)三相三线).Margin = new Padding(2);
		((Control)三相三线).Name = "三相三线";
		((Control)三相三线).Size = new Size(155, 16);
		((Control)三相三线).TabIndex = 1;
		((Control)三相三线).Text = "Three phase three wire";
		((ButtonBase)三相三线).UseVisualStyleBackColor = true;
		((Control)三相三线).UseWaitCursor = true;
		((Control)groupBox20).Controls.Add((Control)(object)电能脉冲);
		((Control)groupBox20).Controls.Add((Control)(object)时钟脉冲);
		((Control)groupBox20).Location = new Point(90, 23);
		((Control)groupBox20).Margin = new Padding(2);
		((Control)groupBox20).Name = "groupBox20";
		((Control)groupBox20).Padding = new Padding(2);
		((Control)groupBox20).Size = new Size(105, 55);
		((Control)groupBox20).TabIndex = 50;
		groupBox20.TabStop = false;
		((Control)groupBox20).UseWaitCursor = true;
		((Control)电能脉冲).AutoSize = true;
		电能脉冲.Checked = true;
		((Control)电能脉冲).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)电能脉冲).Location = new Point(12, 16);
		((Control)电能脉冲).Margin = new Padding(2);
		((Control)电能脉冲).Name = "电能脉冲";
		((Control)电能脉冲).Size = new Size(95, 16);
		((Control)电能脉冲).TabIndex = 0;
		电能脉冲.TabStop = true;
		((Control)电能脉冲).Text = "energy pulse";
		((ButtonBase)电能脉冲).UseVisualStyleBackColor = true;
		((Control)电能脉冲).UseWaitCursor = true;
		((Control)时钟脉冲).AutoSize = true;
		((Control)时钟脉冲).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)时钟脉冲).Location = new Point(12, 36);
		((Control)时钟脉冲).Margin = new Padding(2);
		((Control)时钟脉冲).Name = "时钟脉冲";
		((Control)时钟脉冲).Size = new Size(89, 16);
		((Control)时钟脉冲).TabIndex = 1;
		((Control)时钟脉冲).Text = "Clock pulse";
		((ButtonBase)时钟脉冲).UseVisualStyleBackColor = true;
		((Control)时钟脉冲).UseWaitCursor = true;
		((Control)运行状态设置).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)运行状态设置).Location = new Point(523, 99);
		((Control)运行状态设置).Margin = new Padding(2);
		((Control)运行状态设置).Name = "运行状态设置";
		((Control)运行状态设置).Size = new Size(50, 22);
		((Control)运行状态设置).TabIndex = 35;
		((Control)运行状态设置).Text = "set";
		((ButtonBase)运行状态设置).UseVisualStyleBackColor = true;
		((Control)运行状态设置).UseWaitCursor = true;
		((Control)运行状态设置).Click += 运行状态设置_Click;
		((Control)groupBox2).Controls.Add((Control)(object)button1);
		((Control)groupBox2).Controls.Add((Control)(object)label30);
		((Control)groupBox2).Controls.Add((Control)(object)label31);
		((Control)groupBox2).Controls.Add((Control)(object)label36);
		((Control)groupBox2).Controls.Add((Control)(object)comboBoxEc);
		((Control)groupBox2).Controls.Add((Control)(object)comboBoxIb);
		((Control)groupBox2).Controls.Add((Control)(object)comboBoxUn);
		((Control)groupBox2).Controls.Add((Control)(object)增益);
		((Control)groupBox2).Controls.Add((Control)(object)初始化);
		((Control)groupBox2).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox2).Location = new Point(8, 2);
		((Control)groupBox2).Margin = new Padding(2);
		((Control)groupBox2).Name = "groupBox2";
		((Control)groupBox2).Padding = new Padding(2);
		((Control)groupBox2).Size = new Size(356, 86);
		((Control)groupBox2).TabIndex = 21;
		groupBox2.TabStop = false;
		((Control)groupBox2).Text = "calibration";
		((Control)groupBox2).UseWaitCursor = true;
		((Control)button1).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button1).Location = new Point(260, 48);
		((Control)button1).Margin = new Padding(2);
		((Control)button1).Name = "button1";
		((Control)button1).Size = new Size(86, 26);
		((Control)button1).TabIndex = 18;
		((Control)button1).Text = "Clearing";
		((ButtonBase)button1).UseVisualStyleBackColor = true;
		((Control)button1).UseWaitCursor = true;
		((Control)button1).Click += button1_Click;
		((Control)label30).AutoSize = true;
		((Control)label30).Location = new Point(245, 22);
		((Control)label30).Margin = new Padding(2, 0, 2, 0);
		((Control)label30).Name = "label30";
		((Control)label30).Size = new Size(31, 16);
		((Control)label30).TabIndex = 17;
		((Control)label30).Text = "Ec:";
		((Control)label30).UseWaitCursor = true;
		((Control)label31).AutoSize = true;
		((Control)label31).Location = new Point(116, 22);
		((Control)label31).Margin = new Padding(2, 0, 2, 0);
		((Control)label31).Name = "label31";
		((Control)label31).Size = new Size(31, 16);
		((Control)label31).TabIndex = 16;
		((Control)label31).Text = "Ib:";
		((Control)label31).UseWaitCursor = true;
		((Control)label36).AutoSize = true;
		((Control)label36).Location = new Point(10, 22);
		((Control)label36).Margin = new Padding(2, 0, 2, 0);
		((Control)label36).Name = "label36";
		((Control)label36).Size = new Size(31, 16);
		((Control)label36).TabIndex = 15;
		((Control)label36).Text = "Un:";
		((Control)label36).UseWaitCursor = true;
		comboBoxEc.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxEc).FormattingEnabled = true;
		comboBoxEc.Items.AddRange(new object[3] { "400", "1600", "6400" });
		((Control)comboBoxEc).Location = new Point(283, 19);
		((Control)comboBoxEc).Margin = new Padding(2);
		((Control)comboBoxEc).Name = "comboBoxEc";
		((Control)comboBoxEc).Size = new Size(66, 24);
		((Control)comboBoxEc).TabIndex = 14;
		((Control)comboBoxEc).UseWaitCursor = true;
		comboBoxIb.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxIb).FormattingEnabled = true;
		comboBoxIb.Items.AddRange(new object[2] { "1", "10" });
		((Control)comboBoxIb).Location = new Point(154, 19);
		((Control)comboBoxIb).Margin = new Padding(2);
		((Control)comboBoxIb).Name = "comboBoxIb";
		((Control)comboBoxIb).Size = new Size(86, 24);
		((Control)comboBoxIb).TabIndex = 13;
		((Control)comboBoxIb).UseWaitCursor = true;
		comboBoxIb.SelectedIndexChanged += comboBoxIb_SelectedIndexChanged;
		comboBoxIb.SelectionChangeCommitted += comboBoxIb_SelectionChangeCommitted;
		comboBoxUn.DropDownStyle = (ComboBoxStyle)2;
		((ListControl)comboBoxUn).FormattingEnabled = true;
		comboBoxUn.Items.AddRange(new object[3] { "57.7", "220", "380" });
		((Control)comboBoxUn).Location = new Point(48, 19);
		((Control)comboBoxUn).Margin = new Padding(2);
		((Control)comboBoxUn).Name = "comboBoxUn";
		((Control)comboBoxUn).Size = new Size(59, 24);
		((Control)comboBoxUn).TabIndex = 12;
		((Control)comboBoxUn).UseWaitCursor = true;
		((Control)增益).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)增益).Location = new Point(139, 48);
		((Control)增益).Margin = new Padding(2);
		((Control)增益).Name = "增益";
		((Control)增益).Size = new Size(97, 26);
		((Control)增益).TabIndex = 11;
		((Control)增益).Text = "calibration";
		((ButtonBase)增益).UseVisualStyleBackColor = true;
		((Control)增益).UseWaitCursor = true;
		((Control)增益).Click += 增益_Click;
		((Control)初始化).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)初始化).Location = new Point(14, 48);
		((Control)初始化).Margin = new Padding(2);
		((Control)初始化).Name = "初始化";
		((Control)初始化).Size = new Size(108, 26);
		((Control)初始化).TabIndex = 10;
		((Control)初始化).Text = "initialization";
		((ButtonBase)初始化).UseVisualStyleBackColor = true;
		((Control)初始化).UseWaitCursor = true;
		((Control)初始化).Click += 初始化_Click;
		((Control)tabPage8).BackColor = Color.Gainsboro;
		((Control)tabPage8).Controls.Add((Control)(object)groupBox92);
		((Control)tabPage8).Controls.Add((Control)(object)groupBox39);
		((Control)tabPage8).Controls.Add((Control)(object)groupBox26);
		tabPage8.Location = new Point(4, 22);
		((Control)tabPage8).Margin = new Padding(2);
		((Control)tabPage8).Name = "tabPage8";
		((Control)tabPage8).Padding = new Padding(2);
		((Control)tabPage8).Size = new Size(608, 632);
		tabPage8.TabIndex = 7;
		((Control)tabPage8).Text = "Wireless settings";
		((Control)tabPage8).UseWaitCursor = true;
		((Control)groupBox39).Controls.Add((Control)(object)连接状态值);
		((Control)groupBox39).Controls.Add((Control)(object)label203);
		((Control)groupBox39).Controls.Add((Control)(object)系统复位值);
		((Control)groupBox39).Controls.Add((Control)(object)button8);
		((Control)groupBox39).Controls.Add((Control)(object)IMEI号值);
		((Control)groupBox39).Controls.Add((Control)(object)label215);
		((Control)groupBox39).Controls.Add((Control)(object)接受次数值);
		((Control)groupBox39).Controls.Add((Control)(object)label213);
		((Control)groupBox39).Controls.Add((Control)(object)发送次数值);
		((Control)groupBox39).Controls.Add((Control)(object)label211);
		((Control)groupBox39).Controls.Add((Control)(object)CCID卡号值);
		((Control)groupBox39).Controls.Add((Control)(object)label208);
		((Control)groupBox39).Controls.Add((Control)(object)label206);
		((Control)groupBox39).Controls.Add((Control)(object)连接状态信号值);
		((Control)groupBox39).Controls.Add((Control)(object)label205);
		((Control)groupBox39).Controls.Add((Control)(object)软件版本号);
		((Control)groupBox39).Controls.Add((Control)(object)编号);
		((Control)groupBox39).Controls.Add((Control)(object)label199);
		((Control)groupBox39).Controls.Add((Control)(object)label198);
		((Control)groupBox39).Location = new Point(25, 357);
		((Control)groupBox39).Margin = new Padding(2);
		((Control)groupBox39).Name = "groupBox39";
		((Control)groupBox39).Padding = new Padding(2);
		((Control)groupBox39).Size = new Size(575, 168);
		((Control)groupBox39).TabIndex = 51;
		groupBox39.TabStop = false;
		((Control)groupBox39).Text = "Wireless information area";
		((Control)groupBox39).UseWaitCursor = true;
		((Control)groupBox39).Enter += groupBox39_Enter;
		((Control)连接状态值).AutoSize = true;
		((Control)连接状态值).Location = new Point(86, 62);
		((Control)连接状态值).Margin = new Padding(2, 0, 2, 0);
		((Control)连接状态值).Name = "连接状态值";
		((Control)连接状态值).Size = new Size(77, 12);
		((Control)连接状态值).TabIndex = 105;
		((Control)连接状态值).Text = "status value";
		((Control)连接状态值).UseWaitCursor = true;
		((Control)label203).AutoSize = true;
		((Control)label203).Location = new Point(18, 62);
		((Control)label203).Margin = new Padding(2, 0, 2, 0);
		((Control)label203).Name = "label203";
		((Control)label203).Size = new Size(119, 12);
		((Control)label203).TabIndex = 104;
		((Control)label203).Text = "connection status：";
		((Control)label203).UseWaitCursor = true;
		((Control)系统复位值).AutoSize = true;
		((Control)系统复位值).Location = new Point(511, 32);
		((Control)系统复位值).Margin = new Padding(2, 0, 2, 0);
		((Control)系统复位值).Name = "系统复位值";
		((Control)系统复位值).Size = new Size(71, 12);
		((Control)系统复位值).TabIndex = 95;
		((Control)系统复位值).Text = "Reset Value";
		((Control)系统复位值).UseWaitCursor = true;
		((Control)button8).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button8).Location = new Point(378, 139);
		((Control)button8).Margin = new Padding(2);
		((Control)button8).Name = "button8";
		((Control)button8).Size = new Size(55, 26);
		((Control)button8).TabIndex = 92;
		((Control)button8).Text = "read";
		((ButtonBase)button8).UseVisualStyleBackColor = true;
		((Control)button8).UseWaitCursor = true;
		((Control)button8).Click += button8_Click;
		((Control)IMEI号值).AutoSize = true;
		((Control)IMEI号值).Location = new Point(165, 146);
		((Control)IMEI号值).Margin = new Padding(2, 0, 2, 0);
		((Control)IMEI号值).Name = "IMEI号值";
		((Control)IMEI号值).Size = new Size(77, 12);
		((Control)IMEI号值).TabIndex = 103;
		((Control)IMEI号值).Text = "card number ";
		((Control)IMEI号值).UseWaitCursor = true;
		((Control)IMEI号值).Click += IMEI号值_Click;
		((Control)label215).AutoSize = true;
		((Control)label215).Location = new Point(18, 146);
		((Control)label215).Margin = new Padding(2, 0, 2, 0);
		((Control)label215).Name = "label215";
		((Control)label215).Size = new Size(89, 12);
		((Control)label215).TabIndex = 102;
		((Control)label215).Text = "IMEI number ：";
		((Control)label215).UseWaitCursor = true;
		((Control)接受次数值).AutoSize = true;
		((Control)接受次数值).Location = new Point(413, 94);
		((Control)接受次数值).Margin = new Padding(2, 0, 2, 0);
		((Control)接受次数值).Name = "接受次数值";
		((Control)接受次数值).Size = new Size(95, 12);
		((Control)接受次数值).TabIndex = 101;
		((Control)接受次数值).Text = "numerical value";
		((Control)接受次数值).UseWaitCursor = true;
		((Control)label213).AutoSize = true;
		((Control)label213).Location = new Point(265, 94);
		((Control)label213).Margin = new Padding(2, 0, 2, 0);
		((Control)label213).Name = "label213";
		((Control)label213).Size = new Size(137, 12);
		((Control)label213).TabIndex = 100;
		((Control)label213).Text = "Number of acceptances:";
		((Control)label213).UseWaitCursor = true;
		((Control)发送次数值).AutoSize = true;
		((Control)发送次数值).Location = new Point(130, 94);
		((Control)发送次数值).Margin = new Padding(2, 0, 2, 0);
		((Control)发送次数值).Name = "发送次数值";
		((Control)发送次数值).Size = new Size(95, 12);
		((Control)发送次数值).TabIndex = 99;
		((Control)发送次数值).Text = "numerical value";
		((Control)发送次数值).UseWaitCursor = true;
		((Control)label211).AutoSize = true;
		((Control)label211).Location = new Point(18, 94);
		((Control)label211).Margin = new Padding(2, 0, 2, 0);
		((Control)label211).Name = "label211";
		((Control)label211).Size = new Size(101, 12);
		((Control)label211).TabIndex = 98;
		((Control)label211).Text = "Send the number:";
		((Control)label211).UseWaitCursor = true;
		((Control)CCID卡号值).AutoSize = true;
		((Control)CCID卡号值).Location = new Point(152, 124);
		((Control)CCID卡号值).Margin = new Padding(2, 0, 2, 0);
		((Control)CCID卡号值).Name = "CCID卡号值";
		((Control)CCID卡号值).Size = new Size(77, 12);
		((Control)CCID卡号值).TabIndex = 97;
		((Control)CCID卡号值).Text = "card number ";
		((Control)CCID卡号值).UseWaitCursor = true;
		((Control)label208).AutoSize = true;
		((Control)label208).Location = new Point(18, 124);
		((Control)label208).Margin = new Padding(2, 0, 2, 0);
		((Control)label208).Name = "label208";
		((Control)label208).Size = new Size(113, 12);
		((Control)label208).TabIndex = 96;
		((Control)label208).Text = "CCIDcard number ：";
		((Control)label208).UseWaitCursor = true;
		((Control)label206).AutoSize = true;
		((Control)label206).Location = new Point(413, 32);
		((Control)label206).Margin = new Padding(2, 0, 2, 0);
		((Control)label206).Name = "label206";
		((Control)label206).Size = new Size(101, 12);
		((Control)label206).TabIndex = 94;
		((Control)label206).Text = "system reset  ：";
		((Control)label206).UseWaitCursor = true;
		((Control)连接状态信号值).AutoSize = true;
		((Control)连接状态信号值).Location = new Point(340, 62);
		((Control)连接状态信号值).Margin = new Padding(2, 0, 2, 0);
		((Control)连接状态信号值).Name = "连接状态信号值";
		((Control)连接状态信号值).Size = new Size(131, 12);
		((Control)连接状态信号值).TabIndex = 93;
		((Control)连接状态信号值).Text = "original intensities ";
		((Control)连接状态信号值).UseWaitCursor = true;
		((Control)label205).AutoSize = true;
		((Control)label205).Location = new Point(245, 62);
		((Control)label205).Margin = new Padding(2, 0, 2, 0);
		((Control)label205).Name = "label205";
		((Control)label205).Size = new Size(95, 12);
		((Control)label205).TabIndex = 92;
		((Control)label205).Text = "signal status :";
		((Control)label205).UseWaitCursor = true;
		((Control)软件版本号).AutoSize = true;
		((Control)软件版本号).Location = new Point(327, 32);
		((Control)软件版本号).Margin = new Padding(2, 0, 2, 0);
		((Control)软件版本号).Name = "软件版本号";
		((Control)软件版本号).Size = new Size(95, 12);
		((Control)软件版本号).TabIndex = 89;
		((Control)软件版本号).Text = "version number ";
		((Control)软件版本号).UseWaitCursor = true;
		((Control)编号).AutoSize = true;
		((Control)编号).Location = new Point(144, 32);
		((Control)编号).Margin = new Padding(2, 0, 2, 0);
		((Control)编号).Name = "编号";
		((Control)编号).Size = new Size(23, 12);
		((Control)编号).TabIndex = 88;
		((Control)编号).Text = "No.";
		((Control)编号).UseWaitCursor = true;
		((Control)label199).AutoSize = true;
		((Control)label199).Location = new Point(171, 32);
		((Control)label199).Margin = new Padding(2, 0, 2, 0);
		((Control)label199).Name = "label199";
		((Control)label199).Size = new Size(161, 12);
		((Control)label199).TabIndex = 87;
		((Control)label199).Text = "software edition number ：";
		((Control)label199).UseWaitCursor = true;
		((Control)label198).AutoSize = true;
		((Control)label198).Location = new Point(-2, 32);
		((Control)label198).Margin = new Padding(2, 0, 2, 0);
		((Control)label198).Name = "label198";
		((Control)label198).Size = new Size(149, 12);
		((Control)label198).TabIndex = 86;
		((Control)label198).Text = "Software serial number：";
		((Control)label198).UseWaitCursor = true;
		((Control)groupBox26).Controls.Add((Control)(object)ADF300);
		((Control)groupBox26).Controls.Add((Control)(object)DDSYDTSY);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM8);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM7);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM6);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM5);
		((Control)groupBox26).Controls.Add((Control)(object)LONG8);
		((Control)groupBox26).Controls.Add((Control)(object)LONG7);
		((Control)groupBox26).Controls.Add((Control)(object)LONG6);
		((Control)groupBox26).Controls.Add((Control)(object)LONG5);
		((Control)groupBox26).Controls.Add((Control)(object)Addr8);
		((Control)groupBox26).Controls.Add((Control)(object)Addr7);
		((Control)groupBox26).Controls.Add((Control)(object)Addr6);
		((Control)groupBox26).Controls.Add((Control)(object)Addr5);
		((Control)groupBox26).Controls.Add((Control)(object)button4);
		((Control)groupBox26).Controls.Add((Control)(object)button6);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM4);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM3);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM2);
		((Control)groupBox26).Controls.Add((Control)(object)ALMM1);
		((Control)groupBox26).Controls.Add((Control)(object)label197);
		((Control)groupBox26).Controls.Add((Control)(object)LONG4);
		((Control)groupBox26).Controls.Add((Control)(object)LONG3);
		((Control)groupBox26).Controls.Add((Control)(object)LONG2);
		((Control)groupBox26).Controls.Add((Control)(object)LONG1);
		((Control)groupBox26).Controls.Add((Control)(object)label196);
		((Control)groupBox26).Controls.Add((Control)(object)Addr4);
		((Control)groupBox26).Controls.Add((Control)(object)Addr3);
		((Control)groupBox26).Controls.Add((Control)(object)Addr2);
		((Control)groupBox26).Controls.Add((Control)(object)Addr1);
		((Control)groupBox26).Controls.Add((Control)(object)label195);
		((Control)groupBox26).Controls.Add((Control)(object)TCP);
		((Control)groupBox26).Controls.Add((Control)(object)label193);
		((Control)groupBox26).Controls.Add((Control)(object)告警段数量);
		((Control)groupBox26).Controls.Add((Control)(object)label194);
		((Control)groupBox26).Controls.Add((Control)(object)数据段数量);
		((Control)groupBox26).Controls.Add((Control)(object)label192);
		((Control)groupBox26).Controls.Add((Control)(object)设备数量);
		((Control)groupBox26).Controls.Add((Control)(object)label191);
		((Control)groupBox26).Controls.Add((Control)(object)域名);
		((Control)groupBox26).Controls.Add((Control)(object)labe端口l188);
		((Control)groupBox26).Controls.Add((Control)(object)协议模式);
		((Control)groupBox26).Controls.Add((Control)(object)label187);
		((Control)groupBox26).Controls.Add((Control)(object)端口号);
		((Control)groupBox26).Controls.Add((Control)(object)label190);
		((Control)groupBox26).Controls.Add((Control)(object)label189);
		((Control)groupBox26).Controls.Add((Control)(object)IP4);
		((Control)groupBox26).Controls.Add((Control)(object)IP3);
		((Control)groupBox26).Controls.Add((Control)(object)IP2);
		((Control)groupBox26).Controls.Add((Control)(object)label186);
		((Control)groupBox26).Controls.Add((Control)(object)IP1);
		((Control)groupBox26).Controls.Add((Control)(object)序列号);
		((Control)groupBox26).Controls.Add((Control)(object)label185);
		((Control)groupBox26).Controls.Add((Control)(object)label184);
		((Control)groupBox26).Controls.Add((Control)(object)label182);
		((Control)groupBox26).Controls.Add((Control)(object)数据上报间隔);
		((Control)groupBox26).Controls.Add((Control)(object)无线调制信息);
		((Control)groupBox26).Controls.Add((Control)(object)label183);
		groupBox26.FlatStyle = (FlatStyle)3;
		((Control)groupBox26).Location = new Point(19, 16);
		((Control)groupBox26).Margin = new Padding(2);
		((Control)groupBox26).Name = "groupBox26";
		((Control)groupBox26).Padding = new Padding(2);
		((Control)groupBox26).Size = new Size(585, 358);
		((Control)groupBox26).TabIndex = 50;
		groupBox26.TabStop = false;
		((Control)groupBox26).Text = "无Wireless parameter area";
		((Control)groupBox26).UseWaitCursor = true;
		((Control)ADF300).AutoSize = true;
		ADF300.Checked = true;
		((Control)ADF300).Location = new Point(122, 24);
		((Control)ADF300).Name = "ADF300";
		((Control)ADF300).Size = new Size(59, 16);
		((Control)ADF300).TabIndex = 105;
		ADF300.TabStop = true;
		((Control)ADF300).Text = "ADF300";
		((ButtonBase)ADF300).UseVisualStyleBackColor = true;
		((Control)ADF300).UseWaitCursor = true;
		((Control)DDSYDTSY).AutoSize = true;
		((Control)DDSYDTSY).Location = new Point(18, 24);
		((Control)DDSYDTSY).Name = "DDSYDTSY";
		((Control)DDSYDTSY).Size = new Size(83, 16);
		((Control)DDSYDTSY).TabIndex = 104;
		DDSYDTSY.TabStop = true;
		((Control)DDSYDTSY).Text = "DDSY、DTSY";
		((ButtonBase)DDSYDTSY).UseVisualStyleBackColor = true;
		((Control)DDSYDTSY).UseWaitCursor = true;
		((Control)ALMM8).Location = new Point(404, 312);
		((Control)ALMM8).Margin = new Padding(2);
		((TextBoxBase)ALMM8).MaxLength = 5;
		((Control)ALMM8).Name = "ALMM8";
		((Control)ALMM8).Size = new Size(50, 21);
		((Control)ALMM8).TabIndex = 103;
		((Control)ALMM8).Text = "0";
		((Control)ALMM8).UseWaitCursor = true;
		((Control)ALMM7).Location = new Point(335, 314);
		((Control)ALMM7).Margin = new Padding(2);
		((TextBoxBase)ALMM7).MaxLength = 5;
		((Control)ALMM7).Name = "ALMM7";
		((Control)ALMM7).Size = new Size(50, 21);
		((Control)ALMM7).TabIndex = 102;
		((Control)ALMM7).Text = "0";
		((Control)ALMM7).UseWaitCursor = true;
		((Control)ALMM6).Location = new Point(267, 314);
		((Control)ALMM6).Margin = new Padding(2);
		((TextBoxBase)ALMM6).MaxLength = 5;
		((Control)ALMM6).Name = "ALMM6";
		((Control)ALMM6).Size = new Size(50, 21);
		((Control)ALMM6).TabIndex = 101;
		((Control)ALMM6).Text = "0";
		((Control)ALMM6).UseWaitCursor = true;
		((Control)ALMM5).Location = new Point(209, 314);
		((Control)ALMM5).Margin = new Padding(2);
		((TextBoxBase)ALMM5).MaxLength = 5;
		((Control)ALMM5).Name = "ALMM5";
		((Control)ALMM5).Size = new Size(50, 21);
		((Control)ALMM5).TabIndex = 100;
		((Control)ALMM5).Text = "0";
		((Control)ALMM5).UseWaitCursor = true;
		((Control)LONG8).Location = new Point(404, 247);
		((Control)LONG8).Margin = new Padding(2);
		((TextBoxBase)LONG8).MaxLength = 6;
		((Control)LONG8).Name = "LONG8";
		((Control)LONG8).Size = new Size(50, 21);
		((Control)LONG8).TabIndex = 99;
		((Control)LONG8).Text = "0x0000";
		((Control)LONG8).UseWaitCursor = true;
		((Control)LONG7).Location = new Point(335, 247);
		((Control)LONG7).Margin = new Padding(2);
		((TextBoxBase)LONG7).MaxLength = 6;
		((Control)LONG7).Name = "LONG7";
		((Control)LONG7).Size = new Size(50, 21);
		((Control)LONG7).TabIndex = 98;
		((Control)LONG7).Text = "0x0000";
		((Control)LONG7).UseWaitCursor = true;
		((Control)LONG6).Location = new Point(267, 247);
		((Control)LONG6).Margin = new Padding(2);
		((TextBoxBase)LONG6).MaxLength = 6;
		((Control)LONG6).Name = "LONG6";
		((Control)LONG6).Size = new Size(50, 21);
		((Control)LONG6).TabIndex = 97;
		((Control)LONG6).Text = "0x0000";
		((Control)LONG6).UseWaitCursor = true;
		((Control)LONG5).Location = new Point(209, 247);
		((Control)LONG5).Margin = new Padding(2);
		((TextBoxBase)LONG5).MaxLength = 6;
		((Control)LONG5).Name = "LONG5";
		((Control)LONG5).Size = new Size(50, 21);
		((Control)LONG5).TabIndex = 96;
		((Control)LONG5).Text = "0x0000";
		((Control)LONG5).UseWaitCursor = true;
		((Control)Addr8).Location = new Point(404, 190);
		((Control)Addr8).Margin = new Padding(2);
		((TextBoxBase)Addr8).MaxLength = 6;
		((Control)Addr8).Name = "Addr8";
		((Control)Addr8).Size = new Size(50, 21);
		((Control)Addr8).TabIndex = 95;
		((Control)Addr8).Text = "0x0000";
		((Control)Addr8).UseWaitCursor = true;
		((Control)Addr7).Location = new Point(335, 190);
		((Control)Addr7).Margin = new Padding(2);
		((TextBoxBase)Addr7).MaxLength = 6;
		((Control)Addr7).Name = "Addr7";
		((Control)Addr7).Size = new Size(50, 21);
		((Control)Addr7).TabIndex = 94;
		((Control)Addr7).Text = "0x0000";
		((Control)Addr7).UseWaitCursor = true;
		((Control)Addr6).Location = new Point(267, 189);
		((Control)Addr6).Margin = new Padding(2);
		((TextBoxBase)Addr6).MaxLength = 6;
		((Control)Addr6).Name = "Addr6";
		((Control)Addr6).Size = new Size(50, 21);
		((Control)Addr6).TabIndex = 93;
		((Control)Addr6).Text = "0x0000";
		((Control)Addr6).UseWaitCursor = true;
		((Control)Addr5).Location = new Point(209, 189);
		((Control)Addr5).Margin = new Padding(2);
		((TextBoxBase)Addr5).MaxLength = 6;
		((Control)Addr5).Name = "Addr5";
		((Control)Addr5).Size = new Size(50, 21);
		((Control)Addr5).TabIndex = 92;
		((Control)Addr5).Text = "0x0000";
		((Control)Addr5).UseWaitCursor = true;
		((Control)button4).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button4).Location = new Point(237, 17);
		((Control)button4).Margin = new Padding(2);
		((Control)button4).Name = "button4";
		((Control)button4).Size = new Size(55, 26);
		((Control)button4).TabIndex = 91;
		((Control)button4).Text = "read";
		((ButtonBase)button4).UseVisualStyleBackColor = true;
		((Control)button4).UseWaitCursor = true;
		((Control)button4).Click += button4_Click;
		((Control)button6).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button6).Location = new Point(310, 17);
		((Control)button6).Margin = new Padding(2);
		((Control)button6).Name = "button6";
		((Control)button6).Size = new Size(55, 26);
		((Control)button6).TabIndex = 90;
		((Control)button6).Text = "set";
		((ButtonBase)button6).UseVisualStyleBackColor = true;
		((Control)button6).UseWaitCursor = true;
		((Control)button6).Click += button6_Click;
		((Control)ALMM4).Location = new Point(404, 282);
		((Control)ALMM4).Margin = new Padding(2);
		((TextBoxBase)ALMM4).MaxLength = 5;
		((Control)ALMM4).Name = "ALMM4";
		((Control)ALMM4).Size = new Size(50, 21);
		((Control)ALMM4).TabIndex = 89;
		((Control)ALMM4).Text = "0";
		((Control)ALMM4).UseWaitCursor = true;
		((Control)ALMM3).Location = new Point(335, 283);
		((Control)ALMM3).Margin = new Padding(2);
		((TextBoxBase)ALMM3).MaxLength = 5;
		((Control)ALMM3).Name = "ALMM3";
		((Control)ALMM3).Size = new Size(50, 21);
		((Control)ALMM3).TabIndex = 88;
		((Control)ALMM3).Text = "0";
		((Control)ALMM3).UseWaitCursor = true;
		((Control)ALMM2).Location = new Point(267, 283);
		((Control)ALMM2).Margin = new Padding(2);
		((TextBoxBase)ALMM2).MaxLength = 5;
		((Control)ALMM2).Name = "ALMM2";
		((Control)ALMM2).Size = new Size(50, 21);
		((Control)ALMM2).TabIndex = 87;
		((Control)ALMM2).Text = "0";
		((Control)ALMM2).UseWaitCursor = true;
		((Control)ALMM1).Location = new Point(209, 282);
		((Control)ALMM1).Margin = new Padding(2);
		((TextBoxBase)ALMM1).MaxLength = 5;
		((Control)ALMM1).Name = "ALMM1";
		((Control)ALMM1).Size = new Size(50, 21);
		((Control)ALMM1).TabIndex = 86;
		((Control)ALMM1).Text = "0";
		((Control)ALMM1).UseWaitCursor = true;
		((Control)label197).AutoSize = true;
		((Control)label197).Location = new Point(-14, 297);
		((Control)label197).Margin = new Padding(2, 0, 2, 0);
		((Control)label197).Name = "label197";
		((Control)label197).Size = new Size(173, 12);
		((Control)label197).TabIndex = 85;
		((Control)label197).Text = "Alarm control position    ：";
		((Control)label197).UseWaitCursor = true;
		((Control)label197).Click += label197_Click;
		((Control)LONG4).Location = new Point(404, 222);
		((Control)LONG4).Margin = new Padding(2);
		((TextBoxBase)LONG4).MaxLength = 6;
		((Control)LONG4).Name = "LONG4";
		((Control)LONG4).Size = new Size(50, 21);
		((Control)LONG4).TabIndex = 84;
		((Control)LONG4).Text = "0x0000";
		((Control)LONG4).UseWaitCursor = true;
		((Control)LONG3).Location = new Point(335, 222);
		((Control)LONG3).Margin = new Padding(2);
		((TextBoxBase)LONG3).MaxLength = 6;
		((Control)LONG3).Name = "LONG3";
		((Control)LONG3).Size = new Size(50, 21);
		((Control)LONG3).TabIndex = 83;
		((Control)LONG3).Text = "0x0000";
		((Control)LONG3).UseWaitCursor = true;
		((Control)LONG2).Location = new Point(267, 222);
		((Control)LONG2).Margin = new Padding(2);
		((TextBoxBase)LONG2).MaxLength = 6;
		((Control)LONG2).Name = "LONG2";
		((Control)LONG2).Size = new Size(50, 21);
		((Control)LONG2).TabIndex = 82;
		((Control)LONG2).Text = "0x0000";
		((Control)LONG2).UseWaitCursor = true;
		((Control)LONG1).Location = new Point(209, 222);
		((Control)LONG1).Margin = new Padding(2);
		((TextBoxBase)LONG1).MaxLength = 6;
		((Control)LONG1).Name = "LONG1";
		((Control)LONG1).Size = new Size(50, 21);
		((Control)LONG1).TabIndex = 81;
		((Control)LONG1).Text = "0x0030";
		((Control)LONG1).UseWaitCursor = true;
		((Control)label196).AutoSize = true;
		((Control)label196).Location = new Point(16, 231);
		((Control)label196).Margin = new Padding(2, 0, 2, 0);
		((Control)label196).Name = "label196";
		((Control)label196).Size = new Size(143, 12);
		((Control)label196).TabIndex = 80;
		((Control)label196).Text = "Data break length    ：";
		((Control)label196).UseWaitCursor = true;
		((Control)Addr4).Location = new Point(404, 164);
		((Control)Addr4).Margin = new Padding(2);
		((TextBoxBase)Addr4).MaxLength = 6;
		((Control)Addr4).Name = "Addr4";
		((Control)Addr4).Size = new Size(50, 21);
		((Control)Addr4).TabIndex = 79;
		((Control)Addr4).Text = "0x0000";
		((Control)Addr4).UseWaitCursor = true;
		((Control)Addr3).Location = new Point(335, 164);
		((Control)Addr3).Margin = new Padding(2);
		((TextBoxBase)Addr3).MaxLength = 6;
		((Control)Addr3).Name = "Addr3";
		((Control)Addr3).Size = new Size(50, 21);
		((Control)Addr3).TabIndex = 78;
		((Control)Addr3).Text = "0x0000";
		((Control)Addr3).UseWaitCursor = true;
		((Control)Addr2).Location = new Point(267, 164);
		((Control)Addr2).Margin = new Padding(2);
		((TextBoxBase)Addr2).MaxLength = 6;
		((Control)Addr2).Name = "Addr2";
		((Control)Addr2).Size = new Size(50, 21);
		((Control)Addr2).TabIndex = 77;
		((Control)Addr2).Text = "0x0000";
		((Control)Addr2).UseWaitCursor = true;
		((Control)Addr1).Location = new Point(209, 164);
		((Control)Addr1).Margin = new Padding(2);
		((TextBoxBase)Addr1).MaxLength = 6;
		((Control)Addr1).Name = "Addr1";
		((Control)Addr1).Size = new Size(50, 21);
		((Control)Addr1).TabIndex = 76;
		((Control)Addr1).Text = "0x0200";
		((Control)Addr1).UseWaitCursor = true;
		((Control)label195).AutoSize = true;
		((Control)label195).Location = new Point(-15, 167);
		((Control)label195).Margin = new Padding(2, 0, 2, 0);
		((Control)label195).Name = "label195";
		((Control)label195).Size = new Size(209, 12);
		((Control)label195).TabIndex = 75;
		((Control)label195).Text = "Starting address of data segment：";
		((Control)label195).UseWaitCursor = true;
		((Control)TCP).Location = new Point(555, 125);
		((Control)TCP).Margin = new Padding(2);
		((TextBoxBase)TCP).MaxLength = 5;
		((Control)TCP).Name = "TCP";
		((Control)TCP).Size = new Size(26, 21);
		((Control)TCP).TabIndex = 74;
		((Control)TCP).Text = "0";
		((Control)TCP).UseWaitCursor = true;
		((Control)label193).AutoSize = true;
		((Control)label193).Location = new Point(492, 131);
		((Control)label193).Margin = new Padding(2, 0, 2, 0);
		((Control)label193).Name = "label193";
		((Control)label193).Size = new Size(59, 12);
		((Control)label193).TabIndex = 73;
		((Control)label193).Text = "TCP/UDP：";
		((Control)label193).UseWaitCursor = true;
		((Control)告警段数量).Location = new Point(468, 125);
		((Control)告警段数量).Margin = new Padding(2);
		((TextBoxBase)告警段数量).MaxLength = 5;
		((Control)告警段数量).Name = "告警段数量";
		((Control)告警段数量).Size = new Size(26, 21);
		((Control)告警段数量).TabIndex = 72;
		((Control)告警段数量).Text = "0";
		((Control)告警段数量).UseWaitCursor = true;
		((Control)label194).AutoSize = true;
		((Control)label194).Location = new Point(298, 135);
		((Control)label194).Margin = new Padding(2, 0, 2, 0);
		((Control)label194).Name = "label194";
		((Control)label194).Size = new Size(173, 12);
		((Control)label194).TabIndex = 71;
		((Control)label194).Text = "Number of warning segments：";
		((Control)label194).UseWaitCursor = true;
		((Control)数据段数量).Location = new Point(278, 132);
		((Control)数据段数量).Margin = new Padding(2);
		((TextBoxBase)数据段数量).MaxLength = 5;
		((Control)数据段数量).Name = "数据段数量";
		((Control)数据段数量).Size = new Size(26, 21);
		((Control)数据段数量).TabIndex = 70;
		((Control)数据段数量).Text = "1";
		((Control)数据段数量).UseWaitCursor = true;
		((Control)label192).AutoSize = true;
		((Control)label192).Location = new Point(129, 137);
		((Control)label192).Margin = new Padding(2, 0, 2, 0);
		((Control)label192).Name = "label192";
		((Control)label192).Size = new Size(155, 12);
		((Control)label192).TabIndex = 69;
		((Control)label192).Text = "Number of data segments：";
		((Control)label192).UseWaitCursor = true;
		((Control)设备数量).Location = new Point(99, 132);
		((Control)设备数量).Margin = new Padding(2);
		((TextBoxBase)设备数量).MaxLength = 5;
		((Control)设备数量).Name = "设备数量";
		((Control)设备数量).Size = new Size(26, 21);
		((Control)设备数量).TabIndex = 68;
		((Control)设备数量).Text = "4";
		((Control)设备数量).UseWaitCursor = true;
		((Control)label191).AutoSize = true;
		((Control)label191).Location = new Point(-14, 141);
		((Control)label191).Margin = new Padding(2, 0, 2, 0);
		((Control)label191).Name = "label191";
		((Control)label191).Size = new Size(125, 12);
		((Control)label191).TabIndex = 67;
		((Control)label191).Text = "quantity of device：";
		((Control)label191).UseWaitCursor = true;
		((Control)域名).Location = new Point(96, 108);
		((Control)域名).Margin = new Padding(2);
		((TextBoxBase)域名).MaxLength = 24;
		((Control)域名).Name = "域名";
		((Control)域名).Size = new Size(198, 21);
		((Control)域名).TabIndex = 66;
		((Control)域名).UseWaitCursor = true;
		((Control)labe端口l188).AutoSize = true;
		((Control)labe端口l188).Location = new Point(283, 86);
		((Control)labe端口l188).Margin = new Padding(2, 0, 2, 0);
		((Control)labe端口l188).Name = "labe端口l188";
		((Control)labe端口l188).Size = new Size(89, 12);
		((Control)labe端口l188).TabIndex = 65;
		((Control)labe端口l188).Text = "port number ：";
		((Control)labe端口l188).UseWaitCursor = true;
		((Control)协议模式).Location = new Point(509, 82);
		((Control)协议模式).Margin = new Padding(2);
		((TextBoxBase)协议模式).MaxLength = 5;
		((Control)协议模式).Name = "协议模式";
		((Control)协议模式).Size = new Size(42, 21);
		((Control)协议模式).TabIndex = 64;
		((Control)协议模式).Text = "0";
		((Control)协议模式).UseWaitCursor = true;
		((Control)label187).AutoSize = true;
		((Control)label187).Location = new Point(473, 89);
		((Control)label187).Margin = new Padding(2, 0, 2, 0);
		((Control)label187).Name = "label187";
		((Control)label187).Size = new Size(41, 12);
		((Control)label187).TabIndex = 63;
		((Control)label187).Text = "HOPP：";
		((Control)label187).UseWaitCursor = true;
		((Control)端口号).Location = new Point(380, 82);
		((Control)端口号).Margin = new Padding(2);
		((TextBoxBase)端口号).MaxLength = 5;
		((Control)端口号).Name = "端口号";
		((Control)端口号).Size = new Size(42, 21);
		((Control)端口号).TabIndex = 62;
		((Control)端口号).Text = "16879";
		((Control)端口号).UseWaitCursor = true;
		((Control)label190).AutoSize = true;
		((Control)label190).Location = new Point(16, 111);
		((Control)label190).Margin = new Padding(2, 0, 2, 0);
		((Control)label190).Name = "label190";
		((Control)label190).Size = new Size(83, 12);
		((Control)label190).TabIndex = 61;
		((Control)label190).Text = "domain name：";
		((Control)label190).UseWaitCursor = true;
		((Control)label189).AutoSize = true;
		((Control)label189).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label189).Location = new Point(234, 82);
		((Control)label189).Margin = new Padding(2, 0, 2, 0);
		((Control)label189).Name = "label189";
		((Control)label189).Size = new Size(0, 16);
		((Control)label189).TabIndex = 60;
		((Control)label189).UseWaitCursor = true;
		((Control)IP4).Location = new Point(221, 84);
		((Control)IP4).Margin = new Padding(2);
		((TextBoxBase)IP4).MaxLength = 3;
		((Control)IP4).Name = "IP4";
		((Control)IP4).Size = new Size(26, 21);
		((Control)IP4).TabIndex = 57;
		((Control)IP4).Text = "190";
		((Control)IP4).UseWaitCursor = true;
		((Control)IP3).Location = new Point(191, 84);
		((Control)IP3).Margin = new Padding(2);
		((TextBoxBase)IP3).MaxLength = 3;
		((Control)IP3).Name = "IP3";
		((Control)IP3).Size = new Size(26, 21);
		((Control)IP3).TabIndex = 56;
		((Control)IP3).Text = "164";
		((Control)IP3).UseWaitCursor = true;
		((Control)IP2).Location = new Point(162, 84);
		((Control)IP2).Margin = new Padding(2);
		((TextBoxBase)IP2).MaxLength = 3;
		((Control)IP2).Name = "IP2";
		((Control)IP2).Size = new Size(26, 21);
		((Control)IP2).TabIndex = 55;
		((Control)IP2).Text = "97";
		((Control)IP2).UseWaitCursor = true;
		((Control)label186).AutoSize = true;
		((Control)label186).Location = new Point(40, 86);
		((Control)label186).Margin = new Padding(2, 0, 2, 0);
		((Control)label186).Name = "label186";
		((Control)label186).Size = new Size(71, 12);
		((Control)label186).TabIndex = 53;
		((Control)label186).Text = "IPaddress：";
		((Control)label186).UseWaitCursor = true;
		((Control)IP1).Location = new Point(132, 84);
		((Control)IP1).Margin = new Padding(2);
		((TextBoxBase)IP1).MaxLength = 3;
		((Control)IP1).Name = "IP1";
		((Control)IP1).Size = new Size(26, 21);
		((Control)IP1).TabIndex = 54;
		((Control)IP1).Text = "47";
		((Control)IP1).UseWaitCursor = true;
		((Control)序列号).Location = new Point(475, 52);
		((Control)序列号).Margin = new Padding(2);
		((TextBoxBase)序列号).MaxLength = 16;
		((Control)序列号).Name = "序列号";
		((Control)序列号).Size = new Size(110, 21);
		((Control)序列号).TabIndex = 52;
		((Control)序列号).Text = "ZHYDTEST000001";
		((Control)序列号).UseWaitCursor = true;
		((Control)序列号).TextChanged += 序列号_TextChanged;
		((Control)label185).AutoSize = true;
		((Control)label185).Location = new Point(473, 31);
		((Control)label185).Margin = new Padding(2, 0, 2, 0);
		((Control)label185).Name = "label185";
		((Control)label185).Size = new Size(95, 12);
		((Control)label185).TabIndex = 51;
		((Control)label185).Text = "serial number：";
		((Control)label185).UseWaitCursor = true;
		((Control)label184).AutoSize = true;
		((Control)label184).Location = new Point(389, 58);
		((Control)label184).Margin = new Padding(2, 0, 2, 0);
		((Control)label184).Name = "label184";
		((Control)label184).Size = new Size(47, 12);
		((Control)label184).TabIndex = 50;
		((Control)label184).Text = "minute ";
		((Control)label184).UseWaitCursor = true;
		((Control)label182).AutoSize = true;
		((Control)label182).Location = new Point(4, 56);
		((Control)label182).Margin = new Padding(2, 0, 2, 0);
		((Control)label182).Name = "label182";
		((Control)label182).Size = new Size(197, 12);
		((Control)label182).TabIndex = 46;
		((Control)label182).Text = "Wireless Debugging Information：";
		((Control)label182).UseWaitCursor = true;
		((Control)数据上报间隔).Location = new Point(351, 55);
		((Control)数据上报间隔).Margin = new Padding(2);
		((TextBoxBase)数据上报间隔).MaxLength = 5;
		((Control)数据上报间隔).Name = "数据上报间隔";
		((Control)数据上报间隔).Size = new Size(34, 21);
		((Control)数据上报间隔).TabIndex = 49;
		((Control)数据上报间隔).Text = "1";
		((Control)数据上报间隔).UseWaitCursor = true;
		((Control)无线调制信息).Location = new Point(191, 53);
		((Control)无线调制信息).Margin = new Padding(2);
		((TextBoxBase)无线调制信息).MaxLength = 5;
		((Control)无线调制信息).Name = "无线调制信息";
		((Control)无线调制信息).Size = new Size(26, 21);
		((Control)无线调制信息).TabIndex = 47;
		((Control)无线调制信息).Text = "0";
		((Control)无线调制信息).UseWaitCursor = true;
		((Control)无线调制信息).TextChanged += 无线调制信息_TextChanged;
		((Control)label183).AutoSize = true;
		((Control)label183).Location = new Point(221, 58);
		((Control)label183).Margin = new Padding(2, 0, 2, 0);
		((Control)label183).Name = "label183";
		((Control)label183).Size = new Size(137, 12);
		((Control)label183).TabIndex = 48;
		((Control)label183).Text = "Data upload interval：";
		((Control)label183).UseWaitCursor = true;
		((Control)tabPage11).BackColor = Color.Gainsboro;
		((Control)tabPage11).Controls.Add((Control)(object)设置DO);
		((Control)tabPage11).Controls.Add((Control)(object)读取DIO);
		((Control)tabPage11).Controls.Add((Control)(object)DO);
		((Control)tabPage11).Controls.Add((Control)(object)groupBox89);
		tabPage11.Location = new Point(4, 22);
		((Control)tabPage11).Margin = new Padding(2);
		((Control)tabPage11).Name = "tabPage11";
		((Control)tabPage11).Size = new Size(608, 632);
		tabPage11.TabIndex = 10;
		((Control)tabPage11).Text = "ADF300L Switching value";
		((Control)tabPage11).UseWaitCursor = true;
		((Control)设置DO).Location = new Point(261, 264);
		((Control)设置DO).Name = "设置DO";
		((Control)设置DO).Size = new Size(113, 23);
		((Control)设置DO).TabIndex = 7;
		((Control)设置DO).Text = "set DO";
		((ButtonBase)设置DO).UseVisualStyleBackColor = true;
		((Control)设置DO).UseWaitCursor = true;
		((Control)设置DO).Click += 设置DO_Click;
		((Control)读取DIO).Location = new Point(101, 264);
		((Control)读取DIO).Name = "读取DIO";
		((Control)读取DIO).Size = new Size(119, 23);
		((Control)读取DIO).TabIndex = 6;
		((Control)读取DIO).Text = "read DI DO";
		((ButtonBase)读取DIO).UseVisualStyleBackColor = true;
		((Control)读取DIO).UseWaitCursor = true;
		((Control)读取DIO).Click += 读取DIO_Click;
		((Control)DO).Controls.Add((Control)(object)DO4checkBox);
		((Control)DO).Controls.Add((Control)(object)DO3checkBox);
		((Control)DO).Controls.Add((Control)(object)DO2checkBox);
		((Control)DO).Controls.Add((Control)(object)DO1checkBox);
		((Control)DO).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)DO).Location = new Point(244, 22);
		((Control)DO).Name = "DO";
		((Control)DO).Size = new Size(154, 218);
		((Control)DO).TabIndex = 5;
		DO.TabStop = false;
		((Control)DO).Text = "DO";
		((Control)DO).UseWaitCursor = true;
		((Control)DO4checkBox).AutoSize = true;
		((Control)DO4checkBox).Location = new Point(54, 172);
		((Control)DO4checkBox).Name = "DO4checkBox";
		((Control)DO4checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DO4checkBox).Size = new Size(51, 20);
		((Control)DO4checkBox).TabIndex = 10;
		((Control)DO4checkBox).Text = "DO4";
		((ButtonBase)DO4checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DO4checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DO4checkBox).UseVisualStyleBackColor = true;
		((Control)DO4checkBox).UseWaitCursor = true;
		((Control)DO3checkBox).AutoSize = true;
		((Control)DO3checkBox).Location = new Point(54, 120);
		((Control)DO3checkBox).Name = "DO3checkBox";
		((Control)DO3checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DO3checkBox).Size = new Size(51, 20);
		((Control)DO3checkBox).TabIndex = 9;
		((Control)DO3checkBox).Text = "DO3";
		((ButtonBase)DO3checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DO3checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DO3checkBox).UseVisualStyleBackColor = true;
		((Control)DO3checkBox).UseWaitCursor = true;
		((Control)DO2checkBox).AutoSize = true;
		((Control)DO2checkBox).Location = new Point(54, 70);
		((Control)DO2checkBox).Name = "DO2checkBox";
		((Control)DO2checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DO2checkBox).Size = new Size(51, 20);
		((Control)DO2checkBox).TabIndex = 8;
		((Control)DO2checkBox).Text = "DO2";
		((ButtonBase)DO2checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DO2checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DO2checkBox).UseVisualStyleBackColor = true;
		((Control)DO2checkBox).UseWaitCursor = true;
		((Control)DO1checkBox).AutoSize = true;
		((Control)DO1checkBox).Location = new Point(54, 25);
		((Control)DO1checkBox).Name = "DO1checkBox";
		((Control)DO1checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DO1checkBox).Size = new Size(51, 20);
		((Control)DO1checkBox).TabIndex = 7;
		((Control)DO1checkBox).Text = "DO1";
		((ButtonBase)DO1checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DO1checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DO1checkBox).UseVisualStyleBackColor = true;
		((Control)DO1checkBox).UseWaitCursor = true;
		((Control)groupBox89).Controls.Add((Control)(object)DI8checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI4checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI7checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI3checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI6checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI2checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI5checkBox);
		((Control)groupBox89).Controls.Add((Control)(object)DI1checkBox);
		((Control)groupBox89).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)groupBox89).Location = new Point(70, 22);
		((Control)groupBox89).Name = "groupBox89";
		((Control)groupBox89).Size = new Size(150, 218);
		((Control)groupBox89).TabIndex = 4;
		groupBox89.TabStop = false;
		((Control)groupBox89).Text = "DI";
		((Control)groupBox89).UseWaitCursor = true;
		((Control)DI8checkBox).AutoSize = true;
		((Control)DI8checkBox).Location = new Point(90, 172);
		((Control)DI8checkBox).Name = "DI8checkBox";
		((Control)DI8checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI8checkBox).Size = new Size(51, 20);
		((Control)DI8checkBox).TabIndex = 7;
		((Control)DI8checkBox).Text = "DI8";
		((ButtonBase)DI8checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI8checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI8checkBox).UseVisualStyleBackColor = true;
		((Control)DI8checkBox).UseWaitCursor = true;
		((Control)DI4checkBox).AutoSize = true;
		((Control)DI4checkBox).Location = new Point(19, 172);
		((Control)DI4checkBox).Name = "DI4checkBox";
		((Control)DI4checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI4checkBox).Size = new Size(51, 20);
		((Control)DI4checkBox).TabIndex = 6;
		((Control)DI4checkBox).Text = "DI4";
		((ButtonBase)DI4checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI4checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI4checkBox).UseVisualStyleBackColor = true;
		((Control)DI4checkBox).UseWaitCursor = true;
		((Control)DI7checkBox).AutoSize = true;
		((Control)DI7checkBox).Location = new Point(90, 120);
		((Control)DI7checkBox).Name = "DI7checkBox";
		((Control)DI7checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI7checkBox).Size = new Size(51, 20);
		((Control)DI7checkBox).TabIndex = 5;
		((Control)DI7checkBox).Text = "DI7";
		((ButtonBase)DI7checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI7checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI7checkBox).UseVisualStyleBackColor = true;
		((Control)DI7checkBox).UseWaitCursor = true;
		((Control)DI3checkBox).AutoSize = true;
		((Control)DI3checkBox).Location = new Point(19, 120);
		((Control)DI3checkBox).Name = "DI3checkBox";
		((Control)DI3checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI3checkBox).Size = new Size(51, 20);
		((Control)DI3checkBox).TabIndex = 4;
		((Control)DI3checkBox).Text = "DI3";
		((ButtonBase)DI3checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI3checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI3checkBox).UseVisualStyleBackColor = true;
		((Control)DI3checkBox).UseWaitCursor = true;
		((Control)DI6checkBox).AutoSize = true;
		((Control)DI6checkBox).Location = new Point(90, 70);
		((Control)DI6checkBox).Name = "DI6checkBox";
		((Control)DI6checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI6checkBox).Size = new Size(51, 20);
		((Control)DI6checkBox).TabIndex = 3;
		((Control)DI6checkBox).Text = "DI6";
		((ButtonBase)DI6checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI6checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI6checkBox).UseVisualStyleBackColor = true;
		((Control)DI6checkBox).UseWaitCursor = true;
		((Control)DI2checkBox).AutoSize = true;
		((Control)DI2checkBox).Location = new Point(19, 70);
		((Control)DI2checkBox).Name = "DI2checkBox";
		((Control)DI2checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI2checkBox).Size = new Size(51, 20);
		((Control)DI2checkBox).TabIndex = 2;
		((Control)DI2checkBox).Text = "DI2";
		((ButtonBase)DI2checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI2checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI2checkBox).UseVisualStyleBackColor = true;
		((Control)DI2checkBox).UseWaitCursor = true;
		((Control)DI5checkBox).AutoSize = true;
		((Control)DI5checkBox).Location = new Point(90, 25);
		((Control)DI5checkBox).Name = "DI5checkBox";
		((Control)DI5checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI5checkBox).Size = new Size(51, 20);
		((Control)DI5checkBox).TabIndex = 1;
		((Control)DI5checkBox).Text = "DI5";
		((ButtonBase)DI5checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI5checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI5checkBox).UseVisualStyleBackColor = true;
		((Control)DI5checkBox).UseWaitCursor = true;
		((Control)DI1checkBox).AutoSize = true;
		((Control)DI1checkBox).Location = new Point(19, 25);
		((Control)DI1checkBox).Name = "DI1checkBox";
		((Control)DI1checkBox).Padding = new Padding(1, 0, 0, 0);
		((Control)DI1checkBox).Size = new Size(51, 20);
		((Control)DI1checkBox).TabIndex = 0;
		((Control)DI1checkBox).Text = "DI1";
		((ButtonBase)DI1checkBox).TextAlign = (ContentAlignment)4;
		((ButtonBase)DI1checkBox).TextImageRelation = (TextImageRelation)8;
		((ButtonBase)DI1checkBox).UseVisualStyleBackColor = true;
		((Control)DI1checkBox).UseWaitCursor = true;
		((Control)tabPage13).Controls.Add((Control)(object)groupBox95);
		((Control)tabPage13).Controls.Add((Control)(object)groupBox94);
		tabPage13.Location = new Point(4, 22);
		((Control)tabPage13).Name = "tabPage13";
		((Control)tabPage13).Padding = new Padding(3);
		((Control)tabPage13).Size = new Size(608, 632);
		tabPage13.TabIndex = 12;
		((Control)tabPage13).Text = "Wifi setting";
		tabPage13.UseVisualStyleBackColor = true;
		((Control)groupBox95).Controls.Add((Control)(object)序列号1);
		((Control)groupBox95).Controls.Add((Control)(object)label339);
		((Control)groupBox95).Controls.Add((Control)(object)无限信息设置);
		((Control)groupBox95).Controls.Add((Control)(object)无线信息读取);
		((Control)groupBox95).Controls.Add((Control)(object)域名1);
		((Control)groupBox95).Controls.Add((Control)(object)label335);
		((Control)groupBox95).Controls.Add((Control)(object)协议模式1);
		((Control)groupBox95).Controls.Add((Control)(object)label336);
		((Control)groupBox95).Controls.Add((Control)(object)端口号1);
		((Control)groupBox95).Controls.Add((Control)(object)label337);
		((Control)groupBox95).Controls.Add((Control)(object)IP44);
		((Control)groupBox95).Controls.Add((Control)(object)IP33);
		((Control)groupBox95).Controls.Add((Control)(object)IP22);
		((Control)groupBox95).Controls.Add((Control)(object)label338);
		((Control)groupBox95).Controls.Add((Control)(object)IP11);
		((Control)groupBox95).Location = new Point(35, 332);
		((Control)groupBox95).Name = "groupBox95";
		((Control)groupBox95).Size = new Size(545, 167);
		((Control)groupBox95).TabIndex = 79;
		groupBox95.TabStop = false;
		((Control)序列号1).Location = new Point(420, 70);
		((Control)序列号1).Margin = new Padding(2);
		((TextBoxBase)序列号1).MaxLength = 16;
		((Control)序列号1).Name = "序列号1";
		((Control)序列号1).Size = new Size(110, 21);
		((Control)序列号1).TabIndex = 81;
		((Control)序列号1).Text = "ZHYDTEST000001";
		((Control)label339).AutoSize = true;
		((Control)label339).Location = new Point(321, 73);
		((Control)label339).Margin = new Padding(2, 0, 2, 0);
		((Control)label339).Name = "label339";
		((Control)label339).Size = new Size(95, 12);
		((Control)label339).TabIndex = 80;
		((Control)label339).Text = "serial number：";
		((Control)无限信息设置).Location = new Point(443, 119);
		((Control)无限信息设置).Name = "无限信息设置";
		((Control)无限信息设置).Size = new Size(75, 23);
		((Control)无限信息设置).TabIndex = 79;
		((Control)无限信息设置).Text = "set";
		((ButtonBase)无限信息设置).UseVisualStyleBackColor = true;
		((Control)无限信息设置).Click += 无限信息设置_Click;
		((Control)无线信息读取).Location = new Point(341, 119);
		((Control)无线信息读取).Name = "无线信息读取";
		((Control)无线信息读取).Size = new Size(75, 23);
		((Control)无线信息读取).TabIndex = 78;
		((Control)无线信息读取).Text = "read";
		((ButtonBase)无线信息读取).UseVisualStyleBackColor = true;
		((Control)无线信息读取).Click += 无线信息读取_Click;
		((Control)域名1).Location = new Point(103, 69);
		((Control)域名1).Margin = new Padding(2);
		((TextBoxBase)域名1).MaxLength = 24;
		((Control)域名1).Name = "域名1";
		((Control)域名1).Size = new Size(198, 21);
		((Control)域名1).TabIndex = 77;
		((Control)label335).AutoSize = true;
		((Control)label335).Location = new Point(245, 36);
		((Control)label335).Margin = new Padding(2, 0, 2, 0);
		((Control)label335).Name = "label335";
		((Control)label335).Size = new Size(41, 12);
		((Control)label335).TabIndex = 76;
		((Control)label335).Text = "port：";
		((Control)协议模式1).Location = new Point(456, 33);
		((Control)协议模式1).Margin = new Padding(2);
		((TextBoxBase)协议模式1).MaxLength = 5;
		((Control)协议模式1).Name = "协议模式1";
		((Control)协议模式1).Size = new Size(42, 21);
		((Control)协议模式1).TabIndex = 75;
		((Control)协议模式1).Text = "0";
		((Control)label336).AutoSize = true;
		((Control)label336).Location = new Point(361, 36);
		((Control)label336).Margin = new Padding(2, 0, 2, 0);
		((Control)label336).Name = "label336";
		((Control)label336).Size = new Size(95, 12);
		((Control)label336).TabIndex = 74;
		((Control)label336).Text = "Protocol mode：";
		((Control)端口号1).Location = new Point(302, 33);
		((Control)端口号1).Margin = new Padding(2);
		((TextBoxBase)端口号1).MaxLength = 5;
		((Control)端口号1).Name = "端口号1";
		((Control)端口号1).Size = new Size(42, 21);
		((Control)端口号1).TabIndex = 73;
		((Control)端口号1).Text = "16879";
		((Control)label337).AutoSize = true;
		((Control)label337).Location = new Point(16, 73);
		((Control)label337).Margin = new Padding(2, 0, 2, 0);
		((Control)label337).Name = "label337";
		((Control)label337).Size = new Size(83, 12);
		((Control)label337).TabIndex = 72;
		((Control)label337).Text = "domain name：";
		((Control)IP44).Location = new Point(194, 33);
		((Control)IP44).Margin = new Padding(2);
		((TextBoxBase)IP44).MaxLength = 3;
		((Control)IP44).Name = "IP44";
		((Control)IP44).Size = new Size(26, 21);
		((Control)IP44).TabIndex = 71;
		((Control)IP44).Text = "190";
		((Control)IP33).Location = new Point(164, 33);
		((Control)IP33).Margin = new Padding(2);
		((TextBoxBase)IP33).MaxLength = 3;
		((Control)IP33).Name = "IP33";
		((Control)IP33).Size = new Size(26, 21);
		((Control)IP33).TabIndex = 70;
		((Control)IP33).Text = "164";
		((Control)IP22).Location = new Point(134, 33);
		((Control)IP22).Margin = new Padding(2);
		((TextBoxBase)IP22).MaxLength = 3;
		((Control)IP22).Name = "IP22";
		((Control)IP22).Size = new Size(26, 21);
		((Control)IP22).TabIndex = 69;
		((Control)IP22).Text = "97";
		((Control)label338).AutoSize = true;
		((Control)label338).Location = new Point(15, 37);
		((Control)label338).Margin = new Padding(2, 0, 2, 0);
		((Control)label338).Name = "label338";
		((Control)label338).Size = new Size(77, 12);
		((Control)label338).TabIndex = 67;
		((Control)label338).Text = "IP address：";
		((Control)IP11).Location = new Point(102, 33);
		((Control)IP11).Margin = new Padding(2);
		((TextBoxBase)IP11).MaxLength = 3;
		((Control)IP11).Name = "IP11";
		((Control)IP11).Size = new Size(26, 21);
		((Control)IP11).TabIndex = 68;
		((Control)IP11).Text = "47";
		((Control)groupBox94).BackColor = Color.Gainsboro;
		((Control)groupBox94).Controls.Add((Control)(object)label367);
		((Control)groupBox94).Controls.Add((Control)(object)label366);
		((Control)groupBox94).Controls.Add((Control)(object)label360);
		((Control)groupBox94).Controls.Add((Control)(object)cxzcycsj);
		((Control)groupBox94).Controls.Add((Control)(object)label341);
		((Control)groupBox94).Controls.Add((Control)(object)label340);
		((Control)groupBox94).Controls.Add((Control)(object)comboBox2);
		((Control)groupBox94).Controls.Add((Control)(object)comboBox1);
		((Control)groupBox94).Controls.Add((Control)(object)setWIFI);
		((Control)groupBox94).Controls.Add((Control)(object)readWIFI);
		((Control)groupBox94).Controls.Add((Control)(object)WIFIsignal);
		((Control)groupBox94).Controls.Add((Control)(object)MACaddress);
		((Control)groupBox94).Controls.Add((Control)(object)WIFIpassword);
		((Control)groupBox94).Controls.Add((Control)(object)WIFIname);
		((Control)groupBox94).Controls.Add((Control)(object)label334);
		((Control)groupBox94).Controls.Add((Control)(object)label333);
		((Control)groupBox94).Controls.Add((Control)(object)label332);
		((Control)groupBox94).Controls.Add((Control)(object)label331);
		((Control)groupBox94).Controls.Add((Control)(object)label330);
		((Control)groupBox94).Controls.Add((Control)(object)label329);
		((Control)groupBox94).Location = new Point(29, 6);
		((Control)groupBox94).Name = "groupBox94";
		((Control)groupBox94).Size = new Size(551, 311);
		((Control)groupBox94).TabIndex = 1;
		groupBox94.TabStop = false;
		((Control)label367).AutoSize = true;
		((Control)label367).ForeColor = SystemColors.HotTrack;
		((Control)label367).Location = new Point(171, 235);
		((Control)label367).Margin = new Padding(2, 0, 2, 0);
		((Control)label367).Name = "label367";
		((Control)label367).Size = new Size(41, 12);
		((Control)label367).TabIndex = 189;
		((Control)label367).Text = "status";
		((Control)label366).AutoSize = true;
		((Control)label366).ForeColor = SystemColors.HotTrack;
		((Control)label366).Location = new Point(127, 236);
		((Control)label366).Margin = new Padding(2, 0, 2, 0);
		((Control)label366).Name = "label366";
		((Control)label366).Size = new Size(29, 12);
		((Control)label366).TabIndex = 188;
		((Control)label366).Text = "mode";
		((Control)label360).AutoSize = true;
		((Control)label360).ForeColor = Color.Red;
		((Control)label360).Location = new Point(419, 256);
		((Control)label360).Name = "label360";
		((Control)label360).Size = new Size(77, 12);
		((Control)label360).TabIndex = 57;
		((Control)label360).Text = "（unit0.1S）";
		((Control)cxzcycsj).Location = new Point(404, 232);
		((Control)cxzcycsj).Name = "cxzcycsj";
		((Control)cxzcycsj).Size = new Size(100, 21);
		((Control)cxzcycsj).TabIndex = 55;
		((Control)label341).AutoSize = true;
		((Control)label341).Location = new Point(297, 237);
		((Control)label341).Name = "label341";
		((Control)label341).Size = new Size(185, 12);
		((Control)label341).TabIndex = 49;
		((Control)label341).Text = "Delay time for re registration";
		((Control)label340).AutoSize = true;
		((Control)label340).Location = new Point(15, 236);
		((Control)label340).Name = "label340";
		((Control)label340).Size = new Size(107, 12);
		((Control)label340).TabIndex = 47;
		((Control)label340).Text = "Connection status";
		((ListControl)comboBox2).FormattingEnabled = true;
		comboBox2.Items.AddRange(new object[2] { "关闭", "开启" });
		((Control)comboBox2).Location = new Point(115, 46);
		((Control)comboBox2).Name = "comboBox2";
		((Control)comboBox2).Size = new Size(101, 20);
		((Control)comboBox2).TabIndex = 46;
		((ListControl)comboBox1).FormattingEnabled = true;
		comboBox1.Items.AddRange(new object[2] { "WiFi", "BLE" });
		((Control)comboBox1).Location = new Point(115, 14);
		((Control)comboBox1).Name = "comboBox1";
		((Control)comboBox1).Size = new Size(101, 20);
		((Control)comboBox1).TabIndex = 45;
		((Control)setWIFI).Location = new Point(299, 270);
		((Control)setWIFI).Name = "setWIFI";
		((Control)setWIFI).Size = new Size(75, 23);
		((Control)setWIFI).TabIndex = 13;
		((Control)setWIFI).Text = "set";
		((ButtonBase)setWIFI).UseVisualStyleBackColor = true;
		((Control)setWIFI).Click += setWIFI_Click;
		((Control)readWIFI).Location = new Point(141, 270);
		((Control)readWIFI).Name = "readWIFI";
		((Control)readWIFI).Size = new Size(75, 23);
		((Control)readWIFI).TabIndex = 12;
		((Control)readWIFI).Text = "Read";
		((ButtonBase)readWIFI).UseVisualStyleBackColor = true;
		((Control)readWIFI).Click += readWIFI_Click;
		((Control)WIFIsignal).Location = new Point(115, 201);
		((Control)WIFIsignal).Name = "WIFIsignal";
		((Control)WIFIsignal).Size = new Size(121, 21);
		((Control)WIFIsignal).TabIndex = 10;
		((Control)MACaddress).Location = new Point(115, 159);
		((TextBoxBase)MACaddress).MaxLength = 12;
		((Control)MACaddress).Name = "MACaddress";
		((Control)MACaddress).Size = new Size(245, 21);
		((Control)MACaddress).TabIndex = 9;
		((Control)WIFIpassword).Location = new Point(115, 112);
		((TextBoxBase)WIFIpassword).MaxLength = 40;
		((Control)WIFIpassword).Name = "WIFIpassword";
		((Control)WIFIpassword).Size = new Size(338, 21);
		((Control)WIFIpassword).TabIndex = 8;
		((Control)WIFIname).Location = new Point(115, 71);
		((TextBoxBase)WIFIname).MaxLength = 40;
		((Control)WIFIname).Name = "WIFIname";
		((Control)WIFIname).Size = new Size(338, 21);
		((Control)WIFIname).TabIndex = 7;
		((Control)label334).AutoSize = true;
		((Control)label334).Location = new Point(15, 43);
		((Control)label334).Name = "label334";
		((Control)label334).Size = new Size(77, 12);
		((Control)label334).TabIndex = 5;
		((Control)label334).Text = "DHCP setting";
		((Control)label333).AutoSize = true;
		((Control)label333).Location = new Point(15, 204);
		((Control)label333).Name = "label333";
		((Control)label333).Size = new Size(77, 12);
		((Control)label333).TabIndex = 4;
		((Control)label333).Text = "Signal value";
		((Control)label332).AutoSize = true;
		((Control)label332).Location = new Point(15, 162);
		((Control)label332).Name = "label332";
		((Control)label332).Size = new Size(101, 12);
		((Control)label332).TabIndex = 3;
		((Control)label332).Text = "Wifi MAC address";
		((Control)label331).AutoSize = true;
		((Control)label331).Location = new Point(15, 121);
		((Control)label331).Name = "label331";
		((Control)label331).Size = new Size(83, 12);
		((Control)label331).TabIndex = 2;
		((Control)label331).Text = "Wifi password";
		((Control)label330).AutoSize = true;
		((Control)label330).Location = new Point(15, 74);
		((Control)label330).Name = "label330";
		((Control)label330).Size = new Size(59, 12);
		((Control)label330).TabIndex = 1;
		((Control)label330).Text = "Wifi name";
		((Control)label329).AutoSize = true;
		((Control)label329).Location = new Point(15, 17);
		((Control)label329).Name = "label329";
		((Control)label329).Size = new Size(95, 12);
		((Control)label329).TabIndex = 0;
		((Control)label329).Text = "Wifi/Ble choose";
		((Control)tabPage14).Controls.Add((Control)(object)groupBox96);
		tabPage14.Location = new Point(4, 22);
		((Control)tabPage14).Name = "tabPage14";
		((Control)tabPage14).Padding = new Padding(3);
		((Control)tabPage14).Size = new Size(608, 632);
		tabPage14.TabIndex = 13;
		((Control)tabPage14).Text = "MQTT Setting";
		tabPage14.UseVisualStyleBackColor = true;
		((Control)groupBox96).BackColor = Color.Gainsboro;
		((Control)groupBox96).Controls.Add((Control)(object)label688);
		((Control)groupBox96).Controls.Add((Control)(object)button80);
		((Control)groupBox96).Controls.Add((Control)(object)label689);
		((Control)groupBox96).Controls.Add((Control)(object)label690);
		((Control)groupBox96).Controls.Add((Control)(object)label691);
		((Control)groupBox96).Controls.Add((Control)(object)textBox199);
		((Control)groupBox96).Controls.Add((Control)(object)textBox201);
		((Control)groupBox96).Controls.Add((Control)(object)button82);
		((Control)groupBox96).Controls.Add((Control)(object)comboBox5);
		((Control)groupBox96).Controls.Add((Control)(object)comboBox6);
		((Control)groupBox96).Controls.Add((Control)(object)label692);
		((Control)groupBox96).Controls.Add((Control)(object)label693);
		((Control)groupBox96).Controls.Add((Control)(object)label694);
		((Control)groupBox96).Controls.Add((Control)(object)仪表型号);
		((Control)groupBox96).Controls.Add((Control)(object)setZT2);
		((Control)groupBox96).Controls.Add((Control)(object)setZT1);
		((Control)groupBox96).Controls.Add((Control)(object)自注册IP);
		((Control)groupBox96).Controls.Add((Control)(object)调试网站ip);
		((Control)groupBox96).Controls.Add((Control)(object)label357);
		((Control)groupBox96).Controls.Add((Control)(object)setZhongtai);
		((Control)groupBox96).Controls.Add((Control)(object)readZhongtai);
		((Control)groupBox96).Controls.Add((Control)(object)zzcDKH);
		((Control)groupBox96).Controls.Add((Control)(object)tswzDKH);
		((Control)groupBox96).Controls.Add((Control)(object)ztXLH);
		((Control)groupBox96).Controls.Add((Control)(object)密码);
		((Control)groupBox96).Controls.Add((Control)(object)用户名);
		((Control)groupBox96).Controls.Add((Control)(object)label355);
		((Control)groupBox96).Controls.Add((Control)(object)ztSBZQ);
		((Control)groupBox96).Controls.Add((Control)(object)ztDKH);
		((Control)groupBox96).Controls.Add((Control)(object)中台域名);
		((Control)groupBox96).Controls.Add((Control)(object)平台选择);
		((Control)groupBox96).Controls.Add((Control)(object)中台EIOT协议模式);
		((Control)groupBox96).Controls.Add((Control)(object)label354);
		((Control)groupBox96).Controls.Add((Control)(object)label353);
		((Control)groupBox96).Controls.Add((Control)(object)label352);
		((Control)groupBox96).Controls.Add((Control)(object)label351);
		((Control)groupBox96).Controls.Add((Control)(object)label350);
		((Control)groupBox96).Controls.Add((Control)(object)label349);
		((Control)groupBox96).Controls.Add((Control)(object)label348);
		((Control)groupBox96).Controls.Add((Control)(object)label347);
		((Control)groupBox96).Controls.Add((Control)(object)label346);
		((Control)groupBox96).Controls.Add((Control)(object)label345);
		((Control)groupBox96).Controls.Add((Control)(object)label344);
		((Control)groupBox96).Controls.Add((Control)(object)label343);
		((Control)groupBox96).Controls.Add((Control)(object)label342);
		((Control)groupBox96).Location = new Point(29, 6);
		((Control)groupBox96).Name = "groupBox96";
		((Control)groupBox96).Size = new Size(551, 620);
		((Control)groupBox96).TabIndex = 2;
		groupBox96.TabStop = false;
		((Control)label688).AutoSize = true;
		((Control)label688).Font = new Font("宋体", 12f, (FontStyle)1, (GraphicsUnit)3, (byte)134);
		((Control)label688).Location = new Point(344, 520);
		((Control)label688).Name = "label688";
		((Control)label688).Size = new Size(16, 16);
		((Control)label688).TabIndex = 81;
		((Control)label688).Text = ":";
		((Control)button80).Location = new Point(367, 564);
		((Control)button80).Name = "button80";
		((Control)button80).Size = new Size(65, 27);
		((Control)button80).TabIndex = 80;
		((Control)button80).Text = "read";
		((ButtonBase)button80).UseVisualStyleBackColor = true;
		((Control)button80).Click += button80_Click;
		((Control)label689).AutoSize = true;
		((Control)label689).Location = new Point(360, 546);
		((Control)label689).Name = "label689";
		((Control)label689).Size = new Size(83, 12);
		((Control)label689).TabIndex = 79;
		((Control)label689).Text = "UTC（minute）";
		((Control)label690).AutoSize = true;
		((Control)label690).Location = new Point(290, 546);
		((Control)label690).Name = "label690";
		((Control)label690).Size = new Size(71, 12);
		((Control)label690).TabIndex = 78;
		((Control)label690).Text = "UTC（hour）";
		((Control)label691).AutoSize = true;
		((Control)label691).ForeColor = Color.Red;
		((Control)label691).Location = new Point(21, 573);
		((Control)label691).Name = "label691";
		((Control)label691).Size = new Size(215, 12);
		((Control)label691).TabIndex = 77;
		((Control)label691).Text = "（Set up QoS and ACK for comments）";
		((Control)textBox199).Location = new Point(362, 519);
		((Control)textBox199).Name = "textBox199";
		((Control)textBox199).Size = new Size(28, 21);
		((Control)textBox199).TabIndex = 76;
		((Control)textBox201).Location = new Point(324, 519);
		((Control)textBox201).Name = "textBox201";
		((Control)textBox201).Size = new Size(20, 21);
		((Control)textBox201).TabIndex = 75;
		((Control)button82).Location = new Point(438, 564);
		((Control)button82).Name = "button82";
		((Control)button82).Size = new Size(75, 27);
		((Control)button82).TabIndex = 74;
		((Control)button82).Text = "set";
		((ButtonBase)button82).UseVisualStyleBackColor = true;
		((Control)button82).Click += button82_Click;
		((ListControl)comboBox5).FormattingEnabled = true;
		comboBox5.Items.AddRange(new object[2] { "需要应答", "无需应答" });
		((Control)comboBox5).Location = new Point(128, 546);
		((Control)comboBox5).Name = "comboBox5";
		((Control)comboBox5).Size = new Size(84, 20);
		((Control)comboBox5).TabIndex = 73;
		((ListControl)comboBox6).FormattingEnabled = true;
		comboBox6.Items.AddRange(new object[3] { "Qos0", "Qos1", "Qos2" });
		((Control)comboBox6).Location = new Point(128, 520);
		((Control)comboBox6).Name = "comboBox6";
		((Control)comboBox6).Size = new Size(84, 20);
		((Control)comboBox6).TabIndex = 72;
		((Control)label692).AutoSize = true;
		((Control)label692).Location = new Point(235, 522);
		((Control)label692).Name = "label692";
		((Control)label692).Size = new Size(89, 12);
		((Control)label692).TabIndex = 71;
		((Control)label692).Text = "time zone(UTC)";
		((Control)label693).AutoSize = true;
		((Control)label693).Location = new Point(73, 551);
		((Control)label693).Name = "label693";
		((Control)label693).Size = new Size(23, 12);
		((Control)label693).TabIndex = 70;
		((Control)label693).Text = "ACK";
		((Control)label694).AutoSize = true;
		((Control)label694).Location = new Point(73, 527);
		((Control)label694).Name = "label694";
		((Control)label694).Size = new Size(23, 12);
		((Control)label694).TabIndex = 69;
		((Control)label694).Text = "QOS";
		((ListControl)仪表型号).FormattingEnabled = true;
		仪表型号.Items.AddRange(new object[5] { "DDSY1352-IOT", "DTSY1352-IOT", "ADL100-EY-IOT", "ADL300-EY-IOT", "ADL200-NK-IOT" });
		((Control)仪表型号).Location = new Point(196, 457);
		((Control)仪表型号).Name = "仪表型号";
		((Control)仪表型号).Size = new Size(100, 20);
		((Control)仪表型号).TabIndex = 41;
		((Control)setZT2).Location = new Point(400, 205);
		((Control)setZT2).Name = "setZT2";
		((Control)setZT2).Size = new Size(75, 23);
		((Control)setZT2).TabIndex = 40;
		((Control)setZT2).Text = "set";
		((ButtonBase)setZT2).UseVisualStyleBackColor = true;
		((Control)setZT2).Click += setZT2_Click;
		((Control)setZT1).Location = new Point(400, 115);
		((Control)setZT1).Name = "setZT1";
		((Control)setZT1).Size = new Size(75, 23);
		((Control)setZT1).TabIndex = 39;
		((Control)setZT1).Text = "set";
		((ButtonBase)setZT1).UseVisualStyleBackColor = true;
		((Control)setZT1).Click += setZT1_Click;
		((Control)自注册IP).Location = new Point(287, 390);
		((Control)自注册IP).Name = "自注册IP";
		((Control)自注册IP).Size = new Size(245, 21);
		((Control)自注册IP).TabIndex = 38;
		((Control)调试网站ip).Location = new Point(287, 322);
		((Control)调试网站ip).Name = "调试网站ip";
		((Control)调试网站ip).Size = new Size(245, 21);
		((Control)调试网站ip).TabIndex = 37;
		((Control)label357).AutoSize = true;
		((Control)label357).ForeColor = Color.Red;
		((Control)label357).Location = new Point(18, 235);
		((Control)label357).Name = "label357";
		((Control)label357).Size = new Size(395, 12);
		((Control)label357).TabIndex = 30;
		((Control)label357).Text = "User name and password can only be set on third-party platforms）";
		((Control)setZhongtai).Location = new Point(432, 463);
		((Control)setZhongtai).Name = "setZhongtai";
		((Control)setZhongtai).Size = new Size(75, 23);
		((Control)setZhongtai).TabIndex = 27;
		((Control)setZhongtai).Text = "set";
		((ButtonBase)setZhongtai).UseVisualStyleBackColor = true;
		((Control)setZhongtai).Click += setZhongtai_Click;
		((Control)readZhongtai).Location = new Point(338, 463);
		((Control)readZhongtai).Name = "readZhongtai";
		((Control)readZhongtai).Size = new Size(75, 23);
		((Control)readZhongtai).TabIndex = 26;
		((Control)readZhongtai).Text = "read";
		((ButtonBase)readZhongtai).UseVisualStyleBackColor = true;
		((Control)readZhongtai).Click += readZhongtai_Click;
		((Control)zzcDKH).Location = new Point(196, 422);
		((Control)zzcDKH).Name = "zzcDKH";
		((Control)zzcDKH).Size = new Size(100, 21);
		((Control)zzcDKH).TabIndex = 25;
		((Control)tswzDKH).Location = new Point(196, 351);
		((Control)tswzDKH).Name = "tswzDKH";
		((Control)tswzDKH).Size = new Size(100, 21);
		((Control)tswzDKH).TabIndex = 23;
		((Control)ztXLH).Location = new Point(196, 287);
		((Control)ztXLH).Name = "ztXLH";
		((Control)ztXLH).Size = new Size(100, 21);
		((Control)ztXLH).TabIndex = 21;
		((Control)密码).Location = new Point(132, 205);
		((Control)密码).Name = "密码";
		((Control)密码).Size = new Size(245, 21);
		((Control)密码).TabIndex = 20;
		((Control)用户名).Location = new Point(132, 171);
		((Control)用户名).Name = "用户名";
		((Control)用户名).Size = new Size(245, 21);
		((Control)用户名).TabIndex = 19;
		((Control)label355).AutoSize = true;
		((Control)label355).Location = new Point(430, 86);
		((Control)label355).Name = "label355";
		((Control)label355).Size = new Size(23, 12);
		((Control)label355).TabIndex = 18;
		((Control)label355).Text = "min";
		((Control)ztSBZQ).Location = new Point(319, 83);
		((Control)ztSBZQ).Name = "ztSBZQ";
		((Control)ztSBZQ).Size = new Size(100, 21);
		((Control)ztSBZQ).TabIndex = 17;
		((Control)ztDKH).Location = new Point(75, 83);
		((Control)ztDKH).Name = "ztDKH";
		((Control)ztDKH).Size = new Size(100, 21);
		((Control)ztDKH).TabIndex = 16;
		((Control)中台域名).Location = new Point(186, 51);
		((TextBoxBase)中台域名).MaxLength = 40;
		((Control)中台域名).Name = "中台域名";
		((Control)中台域名).Size = new Size(269, 21);
		((Control)中台域名).TabIndex = 15;
		((ListControl)平台选择).FormattingEnabled = true;
		平台选择.Items.AddRange(new object[2] { "Acrel", "third party" });
		((Control)平台选择).Location = new Point(292, 14);
		((Control)平台选择).Name = "平台选择";
		((Control)平台选择).Size = new Size(100, 20);
		((Control)平台选择).TabIndex = 14;
		((ListControl)中台EIOT协议模式).FormattingEnabled = true;
		中台EIOT协议模式.Items.AddRange(new object[2] { "Electrical Safety Agreement", "Data Platform" });
		((Control)中台EIOT协议模式).Location = new Point(75, 14);
		((Control)中台EIOT协议模式).Name = "中台EIOT协议模式";
		((Control)中台EIOT协议模式).Size = new Size(100, 20);
		((Control)中台EIOT协议模式).TabIndex = 13;
		((Control)label354).AutoSize = true;
		((Control)label354).Location = new Point(60, 462);
		((Control)label354).Name = "label354";
		((Control)label354).Size = new Size(101, 12);
		((Control)label354).TabIndex = 12;
		((Control)label354).Text = "Instrument model";
		((Control)label353).AutoSize = true;
		((Control)label353).Location = new Point(54, 428);
		((Control)label353).Name = "label353";
		((Control)label353).Size = new Size(125, 12);
		((Control)label353).TabIndex = 11;
		((Control)label353).Text = "Self registered port";
		((Control)label352).AutoSize = true;
		((Control)label352).Location = new Point(24, 393);
		((Control)label352).Name = "label352";
		((Control)label352).Size = new Size(245, 12);
		((Control)label352).TabIndex = 10;
		((Control)label352).Text = "Self registered IP address (domain name)";
		((Control)label351).AutoSize = true;
		((Control)label351).Location = new Point(42, 360);
		((Control)label351).Name = "label351";
		((Control)label351).Size = new Size(155, 12);
		((Control)label351).TabIndex = 9;
		((Control)label351).Text = "Debug website port number";
		((Control)label350).AutoSize = true;
		((Control)label350).Location = new Point(18, 328);
		((Control)label350).Name = "label350";
		((Control)label350).Size = new Size(263, 12);
		((Control)label350).TabIndex = 8;
		((Control)label350).Text = " debugging website IP address (domain name)";
		((Control)label349).AutoSize = true;
		((Control)label349).Location = new Point(66, 290);
		((Control)label349).Name = "label349";
		((Control)label349).Size = new Size(83, 12);
		((Control)label349).TabIndex = 7;
		((Control)label349).Text = "serial number";
		((Control)label348).AutoSize = true;
		((Control)label348).Location = new Point(25, 212);
		((Control)label348).Name = "label348";
		((Control)label348).Size = new Size(101, 12);
		((Control)label348).TabIndex = 6;
		((Control)label348).Text = "password（MQTT）";
		((Control)label347).AutoSize = true;
		((Control)label347).Location = new Point(18, 174);
		((Control)label347).Name = "label347";
		((Control)label347).Size = new Size(101, 12);
		((Control)label347).TabIndex = 5;
		((Control)label347).Text = "UserName（MQTT）";
		((Control)label346).AutoSize = true;
		((Control)label346).Location = new Point(194, 86);
		((Control)label346).Name = "label346";
		((Control)label346).Size = new Size(119, 12);
		((Control)label346).TabIndex = 4;
		((Control)label346).Text = "communication cycle";
		((Control)label345).AutoSize = true;
		((Control)label345).Location = new Point(27, 86);
		((Control)label345).Name = "label345";
		((Control)label345).Size = new Size(29, 12);
		((Control)label345).TabIndex = 3;
		((Control)label345).Text = "port";
		((Control)label344).AutoSize = true;
		((Control)label344).Location = new Point(25, 54);
		((Control)label344).Name = "label344";
		((Control)label344).Size = new Size(155, 12);
		((Control)label344).TabIndex = 2;
		((Control)label344).Text = "IP address or domain name";
		((Control)label343).AutoSize = true;
		((Control)label343).Location = new Point(181, 17);
		((Control)label343).Name = "label343";
		((Control)label343).Size = new Size(113, 12);
		((Control)label343).TabIndex = 1;
		((Control)label343).Text = "Platform Selection";
		((Control)label342).AutoSize = true;
		((Control)label342).Location = new Point(27, 17);
		((Control)label342).Name = "label342";
		((Control)label342).Size = new Size(53, 12);
		((Control)label342).TabIndex = 0;
		((Control)label342).Text = "protocol";
		((Control)地址).Font = new Font("宋体", 12f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)地址).Location = new Point(94, 27);
		((Control)地址).Margin = new Padding(2);
		((TextBoxBase)地址).MaxLength = 3;
		((Control)地址).Name = "地址";
		((Control)地址).Size = new Size(47, 26);
		((Control)地址).TabIndex = 36;
		((Control)地址).TextChanged += textBox1_TextChanged;
		((Control)label86).AutoSize = true;
		((Control)label86).Font = new Font("宋体", 15f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)label86).Location = new Point(9, 30);
		((Control)label86).Margin = new Padding(2, 0, 2, 0);
		((Control)label86).Name = "label86";
		((Control)label86).Size = new Size(99, 20);
		((Control)label86).TabIndex = 35;
		((Control)label86).Text = "address：";
		((Control)关闭串口).Location = new Point(239, 27);
		((Control)关闭串口).Margin = new Padding(2);
		((Control)关闭串口).Name = "关闭串口";
		((Control)关闭串口).Size = new Size(93, 30);
		((Control)关闭串口).TabIndex = 34;
		((Control)关闭串口).Text = "Close port";
		((ButtonBase)关闭串口).UseVisualStyleBackColor = true;
		((Control)关闭串口).Click += 关闭串口_Click;
		((Control)读取数据).Location = new Point(153, 27);
		((Control)读取数据).Margin = new Padding(2);
		((Control)读取数据).Name = "读取数据";
		((Control)读取数据).Size = new Size(72, 28);
		((Control)读取数据).TabIndex = 33;
		((Control)读取数据).Text = "Read date";
		((ButtonBase)读取数据).UseVisualStyleBackColor = true;
		((Control)读取数据).Click += 读取数据_Click;
		((Control)labelGOOD).AutoSize = true;
		((Control)labelGOOD).Font = new Font("宋体", 15.75f, (FontStyle)3, (GraphicsUnit)3, (byte)134);
		((Control)labelGOOD).ForeColor = Color.ForestGreen;
		((Control)labelGOOD).Location = new Point(362, 29);
		((Control)labelGOOD).Margin = new Padding(2, 0, 2, 0);
		((Control)labelGOOD).Name = "labelGOOD";
		((Control)labelGOOD).Size = new Size(94, 21);
		((Control)labelGOOD).TabIndex = 37;
		((Control)labelGOOD).Text = "GOOD!! ";
		((Control)labelGOOD).Visible = false;
		((Control)labelERROR).AutoSize = true;
		((Control)labelERROR).Font = new Font("宋体", 15.75f, (FontStyle)3, (GraphicsUnit)3, (byte)134);
		((Control)labelERROR).ForeColor = Color.Red;
		((Control)labelERROR).Location = new Point(477, 29);
		((Control)labelERROR).Margin = new Padding(2, 0, 2, 0);
		((Control)labelERROR).Name = "labelERROR";
		((Control)labelERROR).Size = new Size(106, 21);
		((Control)labelERROR).TabIndex = 38;
		((Control)labelERROR).Text = "EEROR!! ";
		主轮抄定时器.Interval = 5000;
		主轮抄定时器.Tick += 主轮抄_Tick;
		透传定时器.Tick += 透传定时器_Tick;
		timer3.Tick += timer3_Tick;
		((Control)groupBox92).Controls.Add((Control)(object)button71);
		((Control)groupBox92).Controls.Add((Control)(object)button70);
		((Control)groupBox92).Controls.Add((Control)(object)label276);
		((Control)groupBox92).Controls.Add((Control)(object)心跳);
		((Control)groupBox92).Controls.Add((Control)(object)label277);
		((Control)groupBox92).Controls.Add((Control)(object)APN号);
		((Control)groupBox92).Controls.Add((Control)(object)APNOFF);
		((Control)groupBox92).Controls.Add((Control)(object)button23);
		((Control)groupBox92).Controls.Add((Control)(object)button20);
		((Control)groupBox92).Controls.Add((Control)(object)APNON);
		((Control)groupBox92).Controls.Add((Control)(object)label278);
		((Control)groupBox92).Font = new Font("宋体", 12f);
		((Control)groupBox92).Location = new Point(25, 531);
		((Control)groupBox92).Name = "groupBox92";
		((Control)groupBox92).Size = new Size(508, 98);
		((Control)groupBox92).TabIndex = 111;
		groupBox92.TabStop = false;
		((Control)groupBox92).Text = "DDSY DTSY APN SET";
		((Control)button71).Font = new Font("宋体", 9f);
		((Control)button71).Location = new Point(433, 66);
		((Control)button71).Name = "button71";
		((Control)button71).Size = new Size(55, 23);
		((Control)button71).TabIndex = 111;
		((Control)button71).Text = "set";
		((ButtonBase)button71).UseVisualStyleBackColor = true;
		((Control)button71).Click += button71_Click;
		((Control)button70).Font = new Font("宋体", 9f);
		((Control)button70).Location = new Point(361, 66);
		((Control)button70).Name = "button70";
		((Control)button70).Size = new Size(55, 23);
		((Control)button70).TabIndex = 110;
		((Control)button70).Text = "read";
		((ButtonBase)button70).UseVisualStyleBackColor = true;
		((Control)button70).Click += button70_Click;
		((Control)label276).AutoSize = true;
		((Control)label276).Font = new Font("宋体", 9f);
		((Control)label276).Location = new Point(18, 31);
		((Control)label276).Name = "label276";
		((Control)label276).Size = new Size(71, 12);
		((Control)label276).TabIndex = 1;
		((Control)label276).Text = "APN number:";
		((Control)心跳).Font = new Font("宋体", 9f);
		((Control)心跳).Location = new Point(294, 68);
		((Control)心跳).Margin = new Padding(2);
		((TextBoxBase)心跳).MaxLength = 5;
		((Control)心跳).Name = "心跳";
		((Control)心跳).Size = new Size(34, 21);
		((Control)心跳).TabIndex = 109;
		((Control)心跳).Text = "1";
		((Control)label277).AutoSize = true;
		((Control)label277).Font = new Font("宋体", 9f);
		((Control)label277).Location = new Point(207, 73);
		((Control)label277).Margin = new Padding(2, 0, 2, 0);
		((Control)label277).Name = "label277";
		((Control)label277).Size = new Size(71, 12);
		((Control)label277).TabIndex = 108;
		((Control)label277).Text = "heart int：";
		((Control)APN号).Font = new Font("宋体", 9f);
		((Control)APN号).Location = new Point(105, 28);
		((Control)APN号).Margin = new Padding(2);
		((TextBoxBase)APN号).MaxLength = 30;
		((Control)APN号).Name = "APN号";
		((Control)APN号).Size = new Size(193, 21);
		((Control)APN号).TabIndex = 107;
		((Control)APN号).Text = "012345678901234567890123456789";
		((Control)APNOFF).AutoSize = true;
		((Control)APNOFF).Font = new Font("宋体", 9f);
		((Control)APNOFF).Location = new Point(150, 71);
		((Control)APNOFF).Margin = new Padding(2);
		((Control)APNOFF).Name = "APNOFF";
		((Control)APNOFF).Size = new Size(53, 16);
		((Control)APNOFF).TabIndex = 107;
		((Control)APNOFF).Text = "close";
		((ButtonBase)APNOFF).UseVisualStyleBackColor = true;
		((Control)button23).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button23).Location = new Point(433, 24);
		((Control)button23).Margin = new Padding(2);
		((Control)button23).Name = "button23";
		((Control)button23).Size = new Size(55, 26);
		((Control)button23).TabIndex = 106;
		((Control)button23).Text = "set";
		((ButtonBase)button23).UseVisualStyleBackColor = true;
		((Control)button23).Click += button23_Click_1;
		((Control)button20).Font = new Font("宋体", 9f, (FontStyle)0, (GraphicsUnit)3, (byte)134);
		((Control)button20).Location = new Point(361, 24);
		((Control)button20).Margin = new Padding(2);
		((Control)button20).Name = "button20";
		((Control)button20).Size = new Size(55, 26);
		((Control)button20).TabIndex = 92;
		((Control)button20).Text = "read";
		((ButtonBase)button20).UseVisualStyleBackColor = true;
		((Control)button20).Click += button20_Click_1;
		((Control)APNON).AutoSize = true;
		((Control)APNON).Font = new Font("宋体", 9f);
		((Control)APNON).Location = new Point(105, 71);
		((Control)APNON).Margin = new Padding(2);
		((Control)APNON).Name = "APNON";
		((Control)APNON).Size = new Size(47, 16);
		((Control)APNON).TabIndex = 106;
		((Control)APNON).Text = "open";
		((ButtonBase)APNON).UseVisualStyleBackColor = true;
		((Control)label278).AutoSize = true;
		((Control)label278).Font = new Font("宋体", 9f);
		label278.ImageAlign = (ContentAlignment)1;
		((Control)label278).Location = new Point(5, 73);
		((Control)label278).Margin = new Padding(2, 0, 2, 0);
		((Control)label278).Name = "label278";
		((Control)label278).Size = new Size(101, 12);
		((Control)label278).TabIndex = 108;
		((Control)label278).Text = "APNEnable switch";
		((ContainerControl)this).AutoScaleDimensions = new SizeF(6f, 12f);
		((ContainerControl)this).AutoScaleMode = (AutoScaleMode)1;
		((Form)this).ClientSize = new Size(1192, 743);
		((Control)this).Controls.Add((Control)(object)labelERROR);
		((Control)this).Controls.Add((Control)(object)labelGOOD);
		((Control)this).Controls.Add((Control)(object)地址);
		((Control)this).Controls.Add((Control)(object)label86);
		((Control)this).Controls.Add((Control)(object)关闭串口);
		((Control)this).Controls.Add((Control)(object)读取数据);
		((Control)this).Controls.Add((Control)(object)groupBox新增版);
		((Control)this).Controls.Add((Control)(object)tabControl1);
		((Control)this).Controls.Add((Control)(object)menuStrip1);
		((Form)this).Margin = new Padding(2);
		((Control)this).Name = "ADF400读取DIDO";
		((Form)this).StartPosition = (FormStartPosition)1;
		((Control)this).Text = "Debugging software of prepayment watt hour meterV1.00";
		((Form)this).Load += Form1_Load;
		((Control)menuStrip1).ResumeLayout(false);
		((Control)menuStrip1).PerformLayout();
		((Control)groupBox新增版).ResumeLayout(false);
		((Control)groupBox新增版).PerformLayout();
		((Control)groupBox1).ResumeLayout(false);
		((Control)groupBox8).ResumeLayout(false);
		((Control)groupBox8).PerformLayout();
		((Control)groupBox7).ResumeLayout(false);
		((Control)groupBox7).PerformLayout();
		((Control)groupBox6).ResumeLayout(false);
		((Control)groupBox6).PerformLayout();
		((Control)groupBox5).ResumeLayout(false);
		((Control)groupBox5).PerformLayout();
		((Control)groupBox4).ResumeLayout(false);
		((Control)groupBox4).PerformLayout();
		((Control)groupBox3).ResumeLayout(false);
		((Control)groupBox3).PerformLayout();
		((Control)tabPage6).ResumeLayout(false);
		((Control)groupBox72).ResumeLayout(false);
		((Control)groupBox72).PerformLayout();
		((Control)groupBox51).ResumeLayout(false);
		((Control)groupBox51).PerformLayout();
		((Control)ADF参数设置).ResumeLayout(false);
		((Control)ADF参数设置).PerformLayout();
		((Control)groupBox40).ResumeLayout(false);
		((Control)groupBox40).PerformLayout();
		((Control)groupBox42).ResumeLayout(false);
		((Control)groupBox42).PerformLayout();
		((Control)groupBox41).ResumeLayout(false);
		((Control)groupBox41).PerformLayout();
		((Control)groupBox34).ResumeLayout(false);
		((Control)groupBox34).PerformLayout();
		((Control)groupBox28).ResumeLayout(false);
		((Control)groupBox28).PerformLayout();
		((Control)groupBoxChangePhaseType).ResumeLayout(false);
		((Control)groupBoxChangePhaseType).PerformLayout();
		((Control)groupBox47).ResumeLayout(false);
		((Control)groupBox47).PerformLayout();
		((Control)groupBox46).ResumeLayout(false);
		((Control)groupBox46).PerformLayout();
		((Control)tabPage5).ResumeLayout(false);
		((Control)groupBox16).ResumeLayout(false);
		((Control)groupBox16).PerformLayout();
		((Control)groupBox17).ResumeLayout(false);
		((Control)groupBox17).PerformLayout();
		((Control)groupBox19).ResumeLayout(false);
		((Control)groupBox19).PerformLayout();
		((Control)tabPage4).ResumeLayout(false);
		((Control)groupBox14).ResumeLayout(false);
		((Control)groupBox14).PerformLayout();
		((Control)groupBox38).ResumeLayout(false);
		((Control)groupBox38).PerformLayout();
		((Control)groupBox37).ResumeLayout(false);
		((Control)groupBox37).PerformLayout();
		((Control)groupBox36).ResumeLayout(false);
		((Control)groupBox36).PerformLayout();
		((Control)groupBoxFL3).ResumeLayout(false);
		((Control)groupBoxFL3).PerformLayout();
		((Control)groupBoxFL2).ResumeLayout(false);
		((Control)groupBoxFL2).PerformLayout();
		((Control)groupBoxFL1).ResumeLayout(false);
		((Control)groupBoxFL1).PerformLayout();
		((Control)tabPage3).ResumeLayout(false);
		((Control)groupBox13).ResumeLayout(false);
		((Control)groupBox13).PerformLayout();
		((Control)groupBox32).ResumeLayout(false);
		((Control)groupBox32).PerformLayout();
		((Control)groupBoxL1).ResumeLayout(false);
		((Control)groupBoxL1).PerformLayout();
		((Control)groupBox15).ResumeLayout(false);
		((Control)groupBox15).PerformLayout();
		((Control)tabPage2).ResumeLayout(false);
		((Control)groupBox10).ResumeLayout(false);
		((Control)groupBox10).PerformLayout();
		((Control)groupBox31).ResumeLayout(false);
		((Control)groupBox31).PerformLayout();
		((Control)groupBox25).ResumeLayout(false);
		((Control)groupBox25).PerformLayout();
		((Control)tabPage1).ResumeLayout(false);
		((Control)groupBox9).ResumeLayout(false);
		((Control)groupBox9).PerformLayout();
		((Control)groupBox48).ResumeLayout(false);
		((Control)groupBox48).PerformLayout();
		((Control)groupBox50).ResumeLayout(false);
		((Control)groupBox50).PerformLayout();
		((Control)groupBox49).ResumeLayout(false);
		((Control)groupBox49).PerformLayout();
		((Control)groupBox43).ResumeLayout(false);
		((Control)groupBox43).PerformLayout();
		((Control)tabControl1).ResumeLayout(false);
		((Control)tabPage9).ResumeLayout(false);
		((Control)tabPage9).PerformLayout();
		((Control)groupBox62).ResumeLayout(false);
		((Control)groupBox62).PerformLayout();
		((Control)groupBox60).ResumeLayout(false);
		((Control)groupBox60).PerformLayout();
		((Control)groupBox58).ResumeLayout(false);
		((Control)groupBox58).PerformLayout();
		((Control)groupBox55).ResumeLayout(false);
		((Control)groupBox90).ResumeLayout(false);
		((Control)groupBox90).PerformLayout();
		((Control)groupBox57).ResumeLayout(false);
		((Control)groupBox57).PerformLayout();
		((Control)groupBox73).ResumeLayout(false);
		((Control)groupBox73).PerformLayout();
		((Control)groupBox71).ResumeLayout(false);
		((Control)groupBox71).PerformLayout();
		((Control)groupBox56).ResumeLayout(false);
		((Control)groupBox56).PerformLayout();
		((Control)groupBox70).ResumeLayout(false);
		((Control)groupBox70).PerformLayout();
		((Control)groupBox69).ResumeLayout(false);
		((Control)groupBox69).PerformLayout();
		((Control)groupBox54).ResumeLayout(false);
		((Control)groupBox54).PerformLayout();
		((Control)groupBox68).ResumeLayout(false);
		((Control)groupBox68).PerformLayout();
		((Control)groupBox67).ResumeLayout(false);
		((Control)groupBox67).PerformLayout();
		((Control)groupBox66).ResumeLayout(false);
		((Control)groupBox66).PerformLayout();
		((Control)groupBox53).ResumeLayout(false);
		((Control)groupBox53).PerformLayout();
		((Control)groupBox63).ResumeLayout(false);
		((Control)groupBox63).PerformLayout();
		((Control)groupBox61).ResumeLayout(false);
		((Control)groupBox61).PerformLayout();
		((Control)groupBox59).ResumeLayout(false);
		((Control)groupBox59).PerformLayout();
		((Control)groupBox65).ResumeLayout(false);
		((Control)groupBox65).PerformLayout();
		((Control)groupBox64).ResumeLayout(false);
		((Control)groupBox64).PerformLayout();
		((Control)tabPage12).ResumeLayout(false);
		((Control)tabPage12).PerformLayout();
		((Control)tabPage10).ResumeLayout(false);
		((Control)groupBox88).ResumeLayout(false);
		((Control)groupBox88).PerformLayout();
		((Control)groupBox79).ResumeLayout(false);
		((Control)groupBox80).ResumeLayout(false);
		((Control)groupBox80).PerformLayout();
		((Control)groupBox81).ResumeLayout(false);
		((Control)groupBox81).PerformLayout();
		((Control)groupBox82).ResumeLayout(false);
		((Control)groupBox82).PerformLayout();
		((Control)groupBox83).ResumeLayout(false);
		((Control)groupBox83).PerformLayout();
		((Control)groupBox84).ResumeLayout(false);
		((Control)groupBox84).PerformLayout();
		((Control)groupBox85).ResumeLayout(false);
		((Control)groupBox85).PerformLayout();
		((Control)groupBox86).ResumeLayout(false);
		((Control)groupBox86).PerformLayout();
		((Control)groupBox87).ResumeLayout(false);
		((Control)groupBox87).PerformLayout();
		((Control)groupBox76).ResumeLayout(false);
		((Control)groupBox76).PerformLayout();
		((Control)groupBox78).ResumeLayout(false);
		((Control)groupBox78).PerformLayout();
		((Control)groupBox77).ResumeLayout(false);
		((Control)groupBox77).PerformLayout();
		((Control)groupBox75).ResumeLayout(false);
		((Control)groupBox75).PerformLayout();
		((Control)groupBox74).ResumeLayout(false);
		((Control)groupBox74).PerformLayout();
		((Control)tabPage7).ResumeLayout(false);
		((Control)groupBox52).ResumeLayout(false);
		((Control)groupBox52).PerformLayout();
		((Control)groupBox29).ResumeLayout(false);
		((Control)groupBox29).PerformLayout();
		((Control)groupBox23).ResumeLayout(false);
		((Control)groupBox33).ResumeLayout(false);
		((Control)groupBox33).PerformLayout();
		((Control)groupBox12).ResumeLayout(false);
		((Control)groupBox12).PerformLayout();
		((Control)groupBox24).ResumeLayout(false);
		((Control)groupBox24).PerformLayout();
		((Control)groupBox11).ResumeLayout(false);
		((Control)groupBox11).PerformLayout();
		((Control)groupBox18).ResumeLayout(false);
		((Control)groupBox91).ResumeLayout(false);
		((Control)groupBox91).PerformLayout();
		((Control)groupBox27).ResumeLayout(false);
		((Control)groupBox27).PerformLayout();
		((Control)groupBox30).ResumeLayout(false);
		((Control)groupBox30).PerformLayout();
		((Control)groupBox22).ResumeLayout(false);
		((Control)groupBox22).PerformLayout();
		((Control)groupBox21).ResumeLayout(false);
		((Control)groupBox21).PerformLayout();
		((Control)groupBox45).ResumeLayout(false);
		((Control)groupBox45).PerformLayout();
		((Control)groupBox44).ResumeLayout(false);
		((Control)groupBox44).PerformLayout();
		((Control)groupBox35).ResumeLayout(false);
		((Control)groupBox35).PerformLayout();
		((Control)groupBox20).ResumeLayout(false);
		((Control)groupBox20).PerformLayout();
		((Control)groupBox2).ResumeLayout(false);
		((Control)groupBox2).PerformLayout();
		((Control)tabPage8).ResumeLayout(false);
		((Control)groupBox39).ResumeLayout(false);
		((Control)groupBox39).PerformLayout();
		((Control)groupBox26).ResumeLayout(false);
		((Control)groupBox26).PerformLayout();
		((Control)tabPage11).ResumeLayout(false);
		((Control)DO).ResumeLayout(false);
		((Control)DO).PerformLayout();
		((Control)groupBox89).ResumeLayout(false);
		((Control)groupBox89).PerformLayout();
		((Control)tabPage13).ResumeLayout(false);
		((Control)groupBox95).ResumeLayout(false);
		((Control)groupBox95).PerformLayout();
		((Control)groupBox94).ResumeLayout(false);
		((Control)groupBox94).PerformLayout();
		((Control)tabPage14).ResumeLayout(false);
		((Control)groupBox96).ResumeLayout(false);
		((Control)groupBox96).PerformLayout();
		((Control)groupBox92).ResumeLayout(false);
		((Control)groupBox92).PerformLayout();
		((Control)this).ResumeLayout(false);
		((Control)this).PerformLayout();
	}
}
